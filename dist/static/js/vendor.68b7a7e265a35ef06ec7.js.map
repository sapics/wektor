{"version":3,"sources":["webpack:///static/js/vendor.68b7a7e265a35ef06ec7.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/acorn/dist/acorn.es.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/paper/dist/paper-full.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js"],"names":["webpackJsonp","162o","module","exports","__webpack_require__","Timeout","id","clearFn","this","_id","_clearFn","apply","Function","prototype","setTimeout","call","window","arguments","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","7+uW","__webpack_exports__","global","isUndef","v","undefined","isDef","isTrue","isFalse","isPrimitive","value","isObject","obj","isPlainObject","_toString","isRegExp","isValidArrayIndex","val","n","parseFloat","String","Math","floor","isFinite","toString","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","map","Object","create","list","split","i","length","toLowerCase","remove","arr","index","indexOf","splice","hasOwn","key","hasOwnProperty","cached","fn","cache","bind","ctx","boundFn","a","l","_length","toArray","start","ret","Array","extend","to","_from","toObject","res","noop","b","c","looseEqual","isObjectA","isObjectB","isArrayA","isArray","isArrayB","every","e","keysA","keys","keysB","looseIndexOf","once","called","isReserved","charCodeAt","def","enumerable","defineProperty","writable","configurable","parsePath","path","bailRE","test","segments","isNative","Ctor","pushTarget","_target","Dep","target","targetStack","push","popTarget","pop","createTextVNode","VNode","cloneVNode","vnode","deep","cloned","tag","data","children","text","elm","context","componentOptions","asyncFactory","ns","isStatic","isComment","isCloned","cloneVNodes","vnodes","len","protoAugment","src","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive","customSetter","shallow","dep","property","getOwnPropertyDescriptor","getter","get","setter","set","childOb","depend","dependArray","newVal","notify","max","del","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","concat","mergeAssets","normalizeProps","options","props","name","camelize","type","normalizeInject","inject","normalized","normalizeDirectives","dirs","directives","update","mergeOptions","parent","child","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","prop","absent","isType","Boolean","hyphenate","getPropDefaultValue","prevShouldConvert","default","$options","_props","getType","match","handleError","err","info","cur","$parent","hooks","errorCaptured","capture","globalHandleError","config","errorHandler","logError","inBrowser","console","error","flushCallbacks","pending","copies","callbacks","slice","withMacroTask","_withTask","useMacroTask","nextTick","cb","_resolve","macroTimerFunc","microTimerFunc","Promise","resolve","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","add","remove$$1","old","event","normalizeEvent","passive","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","node","nestedIndex","lastIndex","last","shift","_isVList","ensureCtor","comp","base","__esModule","hasSymbol","Symbol","toStringTag","createAsyncPlaceholder","factory","createEmptyVNode","asyncMeta","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reject","reason","then","component","delay","isAsyncPlaceholder","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","slot","functionalContext","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","el","hydrating","$el","render","callHook","updateComponent","_update","_render","Watcher","$vnode","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","j","$emit","resetSchedulerState","queue","activatedChildren","has","waiting","flushing","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","devtools","emit","queueActivatedComponent","queueWatcher","traverse","seenObjects","clear","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","opts","initProps","methods","initMethods","initData","_data","computed","initComputed","watch","nativeWatch","initWatch","propsOptions","isRoot","getData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","shouldCache","createComputedGetter","dirty","evaluate","handler","createWatcher","keyOrFn","$watch","initProvide","provide","_provided","initInjections","result","resolveInject","forEach","Reflect","ownKeys","filter","provideKey","source","provideDefault","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","identity","checkKeyCodes","eventKeyCode","builtInAlias","eventKeyName","keyCodes","bindObjectProps","asProp","isSync","isReservedAttribute","mustUseProp","domProps","$event","renderStatic","isInFor","renderFns","staticRenderFns","tree","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","existing","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","injections","contextVm","isCompiled","_compiled","needNormalization","_scopeId","_c","d","createElement","functionalScopeId","createFunctionalComponent","mergeProps","renderContext","functionalOptions","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","functional","nativeOn","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","hooksToMerge","fromParent","componentVNodeHooks","mergeHook$1","one","two","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","is","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","force","initRender","$createElement","parentData","initInternalComponent","constructor","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","Vue$3","_init","initUse","Vue","use","plugin","installedPlugins","_installedPlugins","args","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","componentInstance","$destroy","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","class","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","document","HTMLUnknownElement","HTMLElement","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","registerRef","isRemoval","refs","refInFor","sameVnode","sameInputType","typeA","typeB","isTextInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","join","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE9","isEdge","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","prev","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","p","charAt","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","modules","m","_","addProp","addAttr","addDirective","arg","addHandler","important","warn","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","attrsMap","attrsList","genComponentModel","number","valueExpression","assignment","genAssignmentCode","parseModel","lastIndexOf","index$1","expressionPos","expressionEndPos","eof","chr","next","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","CHECKBOX_RADIO_TOKEN","change","createOnceHandler","target$1","onceHandler","remove$2","add$1","once$$1","addEventListener","supportsPassive","removeEventListener","updateDOMListeners","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","notInFocus","activeElement","_vModifiers","normalizeStyleData","style","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","replace","resolveTransition","css","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","s","Number","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","actuallySetSelected","isMultiple","option","getValue","selectedIndex","hasNoMatchingOption","o","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","placeholder","h","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","exec","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","html","advance","substring","parseEndTag","lowerCasedTagName","stack","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","RegExp","rest$1","all","endTag","shouldIgnoreFirstNewline","chars","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","attr","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","rest","createASTElement","makeAttrsMap","parse","template","endPre","element","pre","inVPre","platformIsPreTag","inPre","warn$2","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","postTransforms","root","currentParent","preserveWhitespace","comments","guardIESVGBug","isForbiddenTag","forbidden","processPre","processRawAttrs","processed","processFor","processIf","processOnce","processElement","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","plain","slotTarget","i$1","lastNode","isTextTag","decodeHTMLCached","processKey","processRef","processSlot","processComponent","processAttrs","checkInFor","inMatch","forAliasRE","for","alias","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","preTransformNode","typeBinding","ifCondition","ifConditionExtra","branch0","cloneASTElement","addRawAttr","branch1","branch2","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","l$1","staticInFor","staticRoot","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genGuard","keyModifier","genKeyFilter","genFilterCode","keyVal","parseInt","wrapListeners","bind$1","wrapData","generate","ast","state","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData$2","genChildren","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","getNormalizationType","maybeComponent","genNode","needsNormalization","some","genComment","genText","transformSpecialNewlines","bind$$1","componentName","createFunction","errors","createCompileToFunctionFn","compile","compiled","fnGenErrors","getOuterHTML","outerHTML","container","cloneNode","innerHTML","camelizeRE","toUpperCase","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","performance","warnHandler","ignoredElements","isReservedAttr","_lifecycleHooks","freeze","hasProto","UA","navigator","userAgent","isAndroid","isIOS","_isServer","_Set","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Set","uid","subs","addSub","sub","removeSub","addDep","raw","prototypeAccessors","defineProperties","arrayProto","arrayMethods","method","original","observeArray","arrayKeys","getOwnPropertyNames","walk","items","MessageChannel","channel","port","port2","port1","onmessage","postMessage","uid$2","expOrFn","user","deps","newDeps","depIds","newDepIds","cleanupDeps","this$1","tmp","teardown","init","$mount","keepAlive","mountedNode","prepatch","insert","destroy","uid$1","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","cbs","prevEl","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","_rendered","patternTypes","KeepAlive","include","exclude","created","destroyed","builtInComponents","configDef","util","delete","ssrContext","version","emptyStyle","acceptValue","svg","math","isHTMLTag","nodeOps","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","normalize","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","hasChildNodes","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","patchable","i$2","vmodel","model$1","_vOptions","prevOptions","curOptions","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","clone","platformComponents","decoder","content","encoded","div","regexEscapeRE","open","klass$1","style$1","he","decode","ncname","qnameCapture","g","&lt;","&gt;","&quot;","&amp;","&#10;","isIgnoreNewlineTag","model$2","modules$1","directives$1","baseOptions","reduce","esc","tab","space","up","right","down","stop","prevent","self","ctrl","alt","meta","middle","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","tips","tip","compileToFunctions","ref$1","idToTemplate","mount","documentElement","7N8s","isInAstralSet","isIdentifierStart","astral","nonASCIIidentifierStart","fromCharCode","astralIdentifierStartCodes","isIdentifierChar","nonASCIIidentifier","astralIdentifierCodes","binop","prec","TokenType","beforeExpr","kw","keyword","keywords$1","isNewLine","propName","getLineInfo","input","offset","line","lineBreakG","Position","getOptions","opt","defaultOptions","ecmaVersion","allowReserved","onToken","token","onComment","pushComment","array","startLoc","endLoc","locations","loc","SourceLocation","ranges","range","keywordRegexp","words","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","finishNodeAt","tryCreateRegexp","flags","throwErrorAt","parser","SyntaxError","raise","message","codePointToString","Parser","parseExpressionAt","nextToken","parseExpression","tokenizer","addLooseExports","Parser$$1","plugins$$1","parse_dammit","LooseParser","pluginsLoose","plugins","Node","types","TokContext","types$1","Token","lineBreak","nonASCIIwhitespace","reservedWords","3","5","6","strict","strictBind","ecma5AndLessKeywords","keywords","nonASCIIidentifierStartChars","nonASCIIidentifierChars","label","conf","startsExpr","isLoop","isAssign","prefix","postfix","updateContext","num","regexp","string","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","skipWhiteSpace","col","column","sourceFile","sourceType","onInsertedSemicolon","onTrailingComma","allowReturnOutsideFunction","allowImportExportEverywhere","allowHashBang","program","directSourceFile","preserveParens","startPos","reserved","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","loadPlugins","lineStart","curLine","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","inFunction","inGenerator","inAsync","yieldPos","awaitPos","labels","skipLineComment","scopeStack","enterFunctionScope","isKeyword","word","isReservedWord","f","pluginConfigs","Error","startNode","parseTopLevel","pp","literal","eat","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","pp$1","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","ident","isAsyncFunction","declaration","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","parseParenExpression","enterLexicalScope","parseFor","init$1","parseVar","declarations","parseForIn","toAssignable","checkLVal","isAsync","parseFunction","isFunction","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitLexicalScope","empty","clause","param","parseBindingAtom","finalizer","object","label$1","statementStart","generator","createNewLexicalScope","isFor","decl","parseVarId","parseMaybeAssign","isStatement","allowExpressionBody","initFunction","async","oldInGen","oldInAsync","oldYieldPos","oldAwaitPos","oldInFunc","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","isGenerator","isMaybeStatic","parsePropertyName","isGetSet","parseClassMethod","paramCount","parseMethod","superClass","parseExprSubscripts","parseExprAtom","checkExport","fNode","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkPatternExport","pat","properties","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","statement","pp$2","isBinding","toAssignableList","operator","exprList","parseSpread","parseRestBinding","parseObj","allowEmpty","allowTrailingComma","elts","parseBindingListItem","elem","parseMaybeDefault","startNodeAt","bindingType","checkClashes","canDeclareVarName","canDeclareLexicalName","declareVarName","declareLexicalName","pp$3","checkPropClash","propHash","shorthand","proto","other","redefinition","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","parseSubscripts","noCalls","maybeAsyncArrow","parseExprList","parseArrowExpression","callee","quasi","parseTemplate","isTagged","canBeArrow","parseLiteral","regex","parseParenAndDistinguishExpression","parseNew","spreadStart","innerParenStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","par","empty$1","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","isArrowFunction","isExpression","oldStrict","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","exitFunctionScope","allowDuplicates","nameHash","liberal","delegate","pp$4","raisedAt","pp$5","sources","var","lexical","childVar","parentLexical","parentScope","childScope","currentScope","pp$6","isExpr","preserveSpace","override","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","curContext","inGeneratorContext","out","statementParens","allowed","pp$8","isRhino","Packages","getToken","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","regexpUnicodeSupport","escaped","inClass","mods","readWord1","tmpFlags","validFlags","_match","readInt","radix","total","Infinity","startsWithDot","isFloat","octal","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","escStart","DuR2","eval","FZ+f","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sourceRoot","sourceMap","unescape","encodeURIComponent","mediaQuery","alreadyImportedModules","M2cA","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","paper","Base","dest","beans","field","describe","bean","isFunc","beansNames","define","hidden","part","iter","forIn","dst","each","desc","statics","ctor","initialize","pick","begin","_name","Formatter","instance","getClassName","importJSON","json","exportJSON","toJSON","serialize","_prioritize","equals","obj1","obj2","read","amount","peek","__index","readIndex","_readIndex","readNull","__read","filtered","__filtered","remain","readList","entry","readNamed","getNamed","hasObject","__unfiltered","_hasObject","hasNamed","prioritize","handleKey","isPlainValue","asString","compact","dictionary","formatter","precision","definitions","references","_serialize","_compactSerialize","deserialize","_setDictionary","_isRoot","isFirst","hasDictionary","isDictionary","useTarget","Item","Layer","append","_index","Emitter","func","_eventTypes","_callbacks","off","uninstall","setTarget","currentTarget","responds","attach","detach","fire","_installEvents","isString","PaperScope","settings","applyMatrix","insertItems","handleSize","hitTolerance","project","projects","tools","_scopes","support","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","agent","os","platform","browser","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","_view","getPaper","execute","PaperScript","View","updateFocus","scope","that","setup","Project","createCanvas","width","height","getCanvas","handleAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pow","round","pair","val1","val2","separator","point","x","y","rectangle","Numerical","clamp","min","getDiscriminant","hi","D","E","abs","ad","bd","cd","dp","q","getNormalizationFactor","norm","log2","abscissas","weights","sqrt","log","LOG2E","EPSILON","MACHINE_EPSILON","CURVETIME_EPSILON","GEOMETRIC_EPSILON","TRIGONOMETRIC_EPSILON","KAPPA","isZero","integrate","w","A","B","sum","Ax","findRoot","df","tolerance","fx","nx","solveQuadratic","roots","x1","x2","Q","R","count","boundless","minB","maxB","solveCubic","x0","b1","c2","qd","t","r","td","rd","UID","_pools","pool","Point","arg0","arg1","reading","hasY","_set","setAngle","angle","getLength","setLength","_angle","cos","sin","scale","getAngle","getAngleInRadians","PI","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","NaN","acos","atan2","getQuadrant","getDirectedAngle","cross","getDistance","rotate","center","subtract","matrix","_transformPoint","multiply","divide","negate","isInside","Rectangle","contains","isClose","isCollinear","isColinear","isOrthogonal","isInQuadrant","point1","point2","random","y1","y2","LinkedPoint","owner","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","isSelected","_selection","_getSelection","_changeSelection","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","frm","rect","rt","getPoint","_dontLink","setPoint","getSize","_fw","_fh","setSize","sx","_sx","sy","_sy","getLeft","setLeft","getTop","setTop","getRight","setRight","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","epsilon","intersect","unite","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","Matrix","ok","_a","_d","_tx","_ty","reset","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","a1","c1","d1","a2","b2","d2","tx2","ty2","prepend","tx1","ty1","appended","prepended","invert","det","inverted","concatenate","preConcatenate","chain","_shiftless","_orNullIfIdentity","isInvertible","isSingular","_transformCoordinates","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","decompose","degrees","asin","translation","getTranslation","rotation","scaling","skewing","getScaling","getRotation","applyToContext","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","p1x","p1y","v1x","v1y","p2x","p2y","v2x","v2y","u1","u2","px","py","vx","vy","ccw","_children","_namedChildren","_activeLayer","_currentStyle","Style","_selectionItems","_selectionCount","_updateVersion","view","_needsUpdate","_requested","_autoUpdate","requestUpdate","changes","_changes","changesById","_changesById","getCurrentStyle","setCurrentStyle","getIndex","getLayers","getActiveLayer","getSymbolDefinitions","ids","getItems","SymbolItem","_definition","getSymbols","getSelectedItems","selectionItems","selection","isInserted","_updateSelection","selectAll","setFullySelected","deselectAll","addLayer","layer","insertLayer","_remove","_setProject","setName","_insertItem","_created","NO_INSERT","insertChild","_getItems","getItem","removeOn","sets","_removeSets","mousedrag","draw","pixelRatio","save","viewMatrix","matrices","updateMatrix","restore","strokeWidth","_drawSelection","_serializeFields","_canApplyMatrix","_canScaleStroke","_pivot","_visible","_blendMode","_opacity","_locked","_guide","_clipMask","_selectBounds","_selectChildren","pivot","visible","blendMode","opacity","locked","guide","clipMask","_countItemEvent","onFrame","_animateItem","onLoad","onError","_itemHandlers","_initialize","hasProps","_matrix","_parent","_style","fields","fontSize","Group","_defaults","symbol","_symbol","cacheParent","_project","_bounds","_position","_decomposed","_globalMatrix","_clearBoundsCache","getId","getName","_removeNamed","_getOwner","namedChildren","setStyle","getSelection","setSelection","flag","isFullySelected","isClipMask","setClipMask","setFillColor","setStrokeColor","setData","getPosition","getBounds","setPosition","getPivot","setPivot","getStrokeBounds","stroke","getHandleBounds","handle","getInternalBounds","hasMatrix","_boundsOptions","getStrokeScaling","cacheItem","_getCachedBounds","setBounds","_backup","_getBounds","_updateBoundsCache","_getBoundsCacheKey","noInternal","cacheKey","nonscaling","hasStroke","_getStrokeMatrix","_item","getViewMatrix","_boundsCache","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","setParent","addChild","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","copy","copyAttributes","copyContent","insertAbove","orig","excludeMatrix","rasterize","resolution","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","raster","Raster","canvas","setCanvas","_contains","_asPathItem","Path","getIntersections","hitTest","_hitTest","HitResult","hitTestAll","hitTestChildren","_exclude","_hitTestChildren","parentViewMatrix","hit","checkPoint","pt","tolerancePadding","guides","_tolerancePadding","_getStrokePadding","checkSelf","checkPosition","checkCenter","checkBounds","points","_hitTestSelf","fill","hasFill","compare","matchObject","firstOnly","overlapping","inside","recursive","childMatrix","insertChildren","notifySelf","_insertAt","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","addTo","copyTo","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasShadow","_getOrder","getList","list1","list2","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","fillColor","getFillColor","strokeColor","getStrokeColor","_transformContent","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","fillStyle","toCanvasStyle","strokeStyle","lineWidth","getStrokeWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","blur","getShadowBlur","getShadowOffset","shadowColor","getShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","globalMatrix","mainCtx","itemOffset","prevOffset","normalBlend","nativeBlend","dontStart","clip","_canComposite","strokeMatrix","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","process","_isUpdated","CompoundPath","itemSelected","boundsSelected","positionSelected","_drawSelected","color","getSelectedColor","half","beginPath","arc","deltas","delta","moveTo","lineTo","closePath","fillRect","_clipItem","_getClipItem","isClipped","setClipped","clipped","Shape","radius","_type","_size","_radius","setType","setRadius","getShape","setShape","getRadius","rad","toPath","toShape","dontPaint","untransformed","isCircle","rx","ry","kappa","cx","cy","bezierCurveTo","getFillRule","getCornerCenter","halfSize","corner","quadrant","isOnEllipseStroke","padding","vector","hitStroke","hitFill","strokeRadius","strokePadding","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","image","getElementById","setImage","setSource","_loaded","getSource","_image","_canvas","_setImage","copyCanvas","drawImage","_crossOrigin","getElement","getLoaded","u","getPpi","getImage","Event","DomEvent","load","complete","naturalWidth","naturalHeight","_context","modify","setContext","toDataURL","Image","getCrossOrigin","setCrossOrigin","getSubCanvas","getSubRaster","getAverageColor","PathItem","_sampleContext","clearRect","sampleSize","pixels","getImageData","channels","alpha","Color","getPixel","setPixel","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setDefinition","SymbolDefinition","getDefinition","getSymbol","setSymbol","dontCenter","setItem","_dontCenter","place","values","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","_point","hasHandles","_handleIn","_handleOut","_path","curve","curves","_curves","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","isSmooth","clearHandles","oldSelection","getPath","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","getNext","smooth","_first","_last","factor","getPrevious","p0","p1","p2","k","d1_a","d1_2a","d2_a","d2_2a","N","isLast","reversed","removeSegment","segment","interpolate","handleIn1","handleIn2","handleOut2","handleOut1","Curve","arg6","arg7","seg1","seg2","handle1","handle2","segment1","segment2","_segment2","getPoint1","getHandle1","getHandle2","getPoint2","classify","setPoint1","setPoint2","setHandle1","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","divideAt","location","divideAtTime","time","getTimeAt","_setHandles","subdivide","setHandles","splitAt","splitAtTime","getLocationAtTime","isTime","straight","h1","h2","y0","x3","y3","x4","y4","x5","y5","x6","y6","x7","y7","x8","y8","x9","y9","getMonoCurves","io","o0","o1","o2","o3","isStraight","coord","v0","v3","getTimeOf","p3","getNearestTime","refine","dist","minDist","minT","step","flip","isFlatEnough","flatness","ux","uy","_addBounds","minPad","maxPad","s1","s2","isLinear","third","hasLength","isHorizontal","getTangentAtTime","isVertical","getLocationAt","_isTime","getParameterAt","getOffsetAtTime","getLocationOf","getOffsetOf","getOffset","getParameterOf","getNearestLocation","getNearestPoint","_evaluateMethods","getLengthIntegrand","ax","bx","ay","by","getIterations","t1","t2","hasRoots","t1Ok","t2Ok","a3","d3","f1","f2","ds","forward","rangeLength","diff","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","getPeaks","addLocation","overlap","excludeStart","excludeEnd","loc1","loc2","_intersection","addCurveIntersections","recursion","calls","tMin","tMax","uMin","uMax","tMinClip","tMaxClip","q0x","q0y","q3x","q3y","dMin","dMax","dp0","dp1","dp2","dp3","hull","getConvexHull","clipConvexHull","tMinNew","tMaxNew","dq0","dq1","dq2","dq3","dist1","dist2","distRatio","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","getCurveLineIntersections","addCurveLineIntersections","addLineIntersection","getCurveIntersections","overlaps","getOverlaps","straight1","straight2","before","i1","i2","getLoopIntersection","curves1","curves2","matrix1","matrix2","_returnFirst","length1","length2","values2","arrays","curve1","values1","path1","getSquaredLineLength","straightBoth","l1","l2","pairs","_overlap","_distance","_setCurve","_time","getPointAtTime","_next","_previous","_version","_curve","_segment","_setSegment","getSegment","getTime","trySegment","_offset","_curveOffset","getParameter","getCurveOffset","getIntersection","getLastSegment","_ignoreOther","isTouching","inter","curve2","isCrossing","addOffsets","offsets","isInRange","t1Inside","t2Inside","c4","c3","getPointAt","v4","a4","hasOverlap","merge","search","found","path2","expanded","compound","pathData","isClockwise","setClockwise","clockwise","setPathData","getCoord","relative","previous","control","command","lower","move","cubicCurveTo","quadraticCurveTo","arcTo","winding","_getWinding","onPath","windingL","windingR","getCrossings","minLoc","isPath","itemsFrom","itemsTo","setClosed","paths1","paths2","matched","closed","setSegments","_segmentSelection","_area","getSegments","fullySelected","_add","getFirstSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","getPathData","_precision","addSegment","skipLine","curX","curY","inX","inY","outX","prevX","outY","prevY","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","area","_selectSegments","newSelection","last1","last2","first2","first1","simplify","flatten","flattener","PathFlattener","PathFitter","fit","asymmetric","paddingLeft","paddingRight","knots","n_1","rf","hx","hy","seg3","seg4","isArc","pt1","pt2","topCenter","shape","pos2","end2","pos1","end1","start2","isCloseEnough","checkSegmentPoint","seg","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","isJoin","numSegments","cap","_addBevelJoin","_addSquareCap","hitCurves","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","dashLength","drawPart","getCurrentSegment","moveBy","curveTo","through","extent","large","rxSq","rySq","xSq","ySq","throughSide","centerSide","ext","inc","z","lineBy","curveBy","parameter","cubicCurveBy","quadraticCurveBy","arcBy","processSegment","prevCoords","addPoint","addRound","joinBounds","addJoin","addCap","phi","isArea","normal1","getNormalAtTime","normal2","normal","joinPadding","joinRadius","SQRT2","paddingX","paddingY","xn","xx","yn","yx","createPath","createEllipse","ellipseSegments","bl","getBottomLeft","tl","tr","getTopRight","br","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","paths","getCurrentPath","check","preparePath","resolveCrossings","reorient","createResult","traceBoolean","operation","collect","_overlapsOnly","trace","splitBoolean","_path1","_path2","operators","crossings","divideLocations","propagateWinding","_winding","tracePaths","reorientPaths","addPath","added","linkIntersections","clearCurveHandles","lookup","sorted","entry1","getInteriorPoint","containerWinding","entry2","clearLater","renormalizeLocs","prevCurve","prevTime","results","clearCurves","clearLookup","origTime","newCurve","getWinding","dontFlip","addWinding","po","a0","ia","paR","paL","windingPrev","vPrev","a3Prev","pathWindingL","pathWindingR","pa","qualityEpsilon","quality","handleCurve","monoCurves","vClose","pv","onAnyPath","totalLength","curveLength","operand","SQRT1_2","wind","isValid","_visited","isStart","starts","visitPath","inter1","inter2","over1","over2","branch","visited","valid","finished","branches","collectStarts","nextInter","_prev","1","2","-1","hasOverlaps","hasCrossings","intersections","nonZero","intercepts","mv","mo0","mo3","maxRecursion","ignoreStraight","addCurve","computeParts","minSpan","halves","tMid","_get","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","tanCenter","C","X","b0","b3","alpha1","alpha2","detC0C1","detC0X","c0","segLength","eps","degree","maxDist","P","TextItem","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","font","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","fromCSS","colorCache","colorCtx","gray","rgb","hsb","hsl","gradient","componentParsers","hsbIndices","converters","rgb-hsb","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","t3","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","isGradient","toCSS","hex","canvasGradient","_stops","origin","destination","highlight","inverse","_radial","createRadialGradient","createLinearGradient","addColorStop","_color","_types","components1","components2","setStops","setRadial","_owners","getStops","GradientStop","getRadial","stops1","stops2","rampPoint","setColor","setOffset","getRampPoint","setRampPoint","getColor","itemDefaults","fillRule","strokeScaling","shadowOffset","selectedColor","groupDefaults","fontFamily","fontWeight","textDefaults","_values","isColor","isPoint","_dontMerge","childValue","Font","WindingRule","isStyle","style1","style2","secondary","defaults2","value1","value2","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","getStyles","doc","ownerDocument","defaultView","viewport","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","handleCallbacks","functions","requested","nativeRequest","timer","getCanvasSize","_viewEvents","userDrag","userSelect","touchCallout","contentZooming","tapHighlightColor","_windowEvents","resize","setViewSize","Stats","_stats","stats","domElement","_element","_pixelRatio","devicePixelRatio","_setElementSize","_viewSize","_views","_viewsById","_focused","_frameItems","_frameItemCount","_itemEvents","virtual","_animate","play","pause","_count","getAutoUpdate","setAutoUpdate","autoUpdate","_handleFrame","now","Date","animate","_handleFrameItems","getPixelRatio","getViewSize","isVisible","temp","getZoom","setZoom","zoom","scrollBy","projectToView","viewToProject","getEventPoint","CanvasView","tempFocus","handleMouseMove","_handleMouseEvent","emitMouseEvent","prevPoint","stopItem","mouseEvent","MouseEvent","prevented","stopped","fallbacks","emitMouseEvents","hitItem","dragItem","prevFocus","mousedown","mousemove","mouseup","dragging","mouseDown","pointerEnabled","msPointerEnabled","viewEvents","docEvents","mouseout","nodeName","scroll","overView","downPoint","lastPoint","downItem","overItem","clickItem","clickTime","dblClick","doubleclick","wasInView","itemEventsMap","click","mouseenter","mouseleave","itemEvents","tool","hitItems","nativeMove","inView","mouse","drag","preventDefault","_handleKeyEvent","character","keyEvent","KeyEvent","sign","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","prevFont","measureText","stopPropagation","getTimeStamp","timeStamp","getModifiers","Key","getKey","keyIdentifier","keyCode","keyLookup","keyMap","charMap","mac","metaFixMap","downKey","\t"," ","\b","","Spacebar","Del","Win","Esc","charLookup","capsLock","keydown","metaKey","ctrlKey","keypress","charCode","keyup","isDown","ToolEvent","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","setCount","Tool","_moveCount","_downCount","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","maxDistance","getFixedDistance","setFixedDistance","distance","Http","request","xhr","XMLHttpRequest","url","mimeType","overrideMimeType","onload","status","responseText","onerror","send","canvases","getLum","setLum","dr","dg","db","mn","lmn","ln","mxl","getSat","setSat","md","sr","sg","sb","sa","bg","bb","ba","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","average","negation","srcContext","dstContext","srcCanvas","dstData","SvgElement","attributes","attributeNamespace","getAttributeNS","xmlns","xlink","href","xmlns:xlink","SvgStyles","true","false","toSVG","fromSVG","exportFilter","getTransform","coordinates","trans","exportGroup","exportSVG","clip-path","exportRaster","embedImages","exportPath","matchShapes","exportShape","exportCompoundPath","exportSymbolItem","definitionItem","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","exportText","applyStyle","visibility","svgs","__id","typeId","exportDefinitions","defs","XMLSerializer","serializeToString","exporter","exporters","onExport","setOptions","allowNull","allowPercent","rootSize","convertValue","importGroup","isClip","isDefs","currentStyle","applyAttributes","querySelectorAll","importNode","importPoly","importPath","importGradient","scaleToBounds","_scaleToBounds","applyTransform","applyOpacity","isElement","importer","importers","onImport","expandShapes","importSVG","DOMParser","parseFromString","File","reader","FileReader","readAsText","#document","clippath","polygon","polyline","lineargradient","radialgradient","circle","gradientTransform","fill-opacity","stroke-opacity","setVisible","stop-color","stop-opacity","percent","group","acorn","__$__","binaryOperators","$__","unaryOperators","insertions","insertion","getCode","getBetween","replaceCode","walkAST","between","parentType","offsetCode","sourceMaps","lineBreaks","getElementsByTagName","safari","mappings","file","names","sourcesContent","expose","toolHandlers","script","head","_execute","onResize","setOnResize","setOnFrame","loadScript","canvasId","baseURI","loadAll","mod","tokPos","makePredicate","compareTo","cats","cat","line_loc_t","tokCurLine","tokLineStart","initTokenState","tokRegexpAllowed","tokEnd","tokEndLoc","tokVal","inputLen","_dot","_assign","_slash","readToken_mult_modulo","_multiplyModulo","_logicalOR","_logicalAND","_bitwiseOR","_bitwiseAND","_bitwiseXOR","newline","lastEnd","_incDec","_plusMin","_bitShift","_relational","_equality","_eq","_prefix","_parenL","_parenR","_semi","_comma","_bracketL","_bracketR","_braceL","_braceR","_colon","_question","readHexNumber","forceRegexp","tokStart","tokStartLoc","_eof","tok","_regexp","_num","_string","escStr","keywordTypes","lastStart","lastEndLoc","setStrict","strct","node_t","node_loc_t","startNodeFrom","isUseStrict","strictSemicolons","isStrictBadIdWord","guard","guardedHandlers","allowStrict","noComma","isUpdate","atomValue","tokStartLoc1","tokStart1","sawGetSet","allowTrailingCommas","conflict","isStrictReservedWord","forbidReserved","isReservedWord3","isReservedWord5","inpt","tokenize","jumpTo","reAllowed","break","case","catch","continue","debugger","do","finally","function","return","switch","throw","try","while","with","null","new","in","instanceof","typeof","void","tokTypes","+","-","*","/","%","==","!=","__self","readyState","PlacedSymbol","VU/8","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","beforeCreate","_injectStyles","W2nU","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","title","argv","versions","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","mypn","task","tasksByHandle","nextHandle","registerImmediate","runIfPresent","currentlyRunningATask","attachTo","getPrototypeOf","importScripts","postMessageIsAsynchronous","oldOnMessage","messagePrefix","onGlobalMessage","attachEvent","onreadystatechange","rjj0","addStylesToDom","domStyle","stylesInDom","addStyle","createStyleElement","styleElement","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","media","styleSheet","replaceText","cssNode","hasDocument","DEBUG","listToStyles","parentId","_isProduction","newList","mayRemove","textStore","replacement","tTVk","newStyles"],"mappings":"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","file":"static/js/vendor.68b7a7e265a35ef06ec7.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"162o\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(\"mypn\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n/***/ }),\n\n/***/ \"7+uW\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!\n * Vue.js v2.5.2\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.functionalOptions = undefined;\n  this.functionalScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode, deep) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  if (deep && vnode.children) {\n    cloned.children = cloneVNodes(vnode.children);\n  }\n  return cloned\n}\n\nfunction cloneVNodes (vnodes, deep) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i], deep);\n  }\n  return res\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    \"production\" !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (false) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"production\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (false) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if (inBrowser && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both micro and macro tasks.\n// In < 2.4 we used micro tasks everywhere, but there are some scenarios where\n// micro tasks have too high a priority and fires in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using macro tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use micro task by default, but expose a way to force macro task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) Task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine MicroTask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a Task instead of a MicroTask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = (parentVnode.data && parentVnode.data.attrs) || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (false) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject).filter(function (key) {\n          /* istanbul ignore next */\n          return Object.getOwnPropertyDescriptor(inject, key).enumerable\n        })\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (false) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (false) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias,\n  eventKeyName\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (keyCodes) {\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  // static trees can be rendered once and cached on the contructor options\n  // so every instance shares the same cached trees\n  var renderFns = this.$options.staticRenderFns;\n  var cached = renderFns.cached || (renderFns.cached = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = renderFns[index].call(this._renderProxy, null, this);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm = Object.create(parent);\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode) {\n        vnode.functionalScopeId = options._scopeId;\n        vnode.functionalContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = contextVm;\n    vnode.functionalOptions = options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (false) {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // if the parent didn't update, the slot nodes will be the ones from\n      // last render. They need to be cloned to ensure \"freshness\" for this render.\n      for (var key in vm.$slots) {\n        var slot = vm.$slots[key];\n        if (slot._rendered) {\n          vm.$slots[key] = cloneVNodes(slot, true /* deep */);\n        }\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && cached$$1 !== current) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n\n      var ref = this;\n      var cache = ref.cache;\n      var keys = ref.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.5.2';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(\n            config.ignoredElements.length &&\n            config.ignoredElements.some(function (ignore) {\n              return isRegExp(ignore)\n                ? ignore.test(tag)\n                : ignore === tag\n            })\n          ) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.functionalScopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setAttribute(vnode.elm, i, '');\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.functionalContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE9 || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat([$$v]))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nVue$3.nextTick(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$1 = 0; i$1 < postTransforms.length; i$1++) {\n        postTransforms[i$1](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (false) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (!el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (map['v-model'] && (map['v-bind:type'] || map[':type'])) {\n      var typeBinding = getBindingAttr(el, 'type');\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (false\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var code = keyCodes[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(code)) + \",\" +\n    \"$event.key)\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (false) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"DuR2\"), __webpack_require__(\"162o\").setImmediate))\n\n/***/ }),\n\n/***/ \"7N8s\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return version; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parse\", function() { return parse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseExpressionAt\", function() { return parseExpressionAt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenizer\", function() { return tokenizer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parse_dammit\", function() { return parse_dammit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LooseParser\", function() { return LooseParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pluginsLoose\", function() { return pluginsLoose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addLooseExports\", function() { return addLooseExports; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Parser\", function() { return Parser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"plugins\", function() { return plugins; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultOptions\", function() { return defaultOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return Position; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SourceLocation\", function() { return SourceLocation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLineInfo\", function() { return getLineInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Node\", function() { return Node; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenType\", function() { return TokenType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokTypes\", function() { return types; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keywordTypes\", function() { return keywords$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokContext\", function() { return TokContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokContexts\", function() { return types$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isIdentifierChar\", function() { return isIdentifierChar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isIdentifierStart\", function() { return isIdentifierStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Token\", function() { return Token; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNewLine\", function() { return isNewLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lineBreak\", function() { return lineBreak; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lineBreakG\", function() { return lineBreakG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nonASCIIwhitespace\", function() { return nonASCIIwhitespace; });\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fd5\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ae\\ua7b0-\\ua7b7\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d4-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d01-\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf8\\u1cf9\\u1dc0-\\u1df5\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,17,26,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,785,52,76,44,33,24,27,35,42,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,25,391,63,32,0,449,56,264,8,2,36,18,0,50,29,881,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,0,67,12,65,0,32,6124,20,754,9486,1,3071,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,10591,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,1306,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,52,0,13,2,49,13,10,2,4,9,83,11,7,0,161,11,6,9,7,3,57,0,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,87,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,423,9,838,7,2,7,17,9,57,21,2,13,19882,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Registered plugins\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType == \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Load plugins\n  this.loadPlugins(options.plugins);\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false;\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterFunctionScope();\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) == \"use strict\") { return true }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  return this.value === name && this.eat(types.name)\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type == tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  var pos = refDestructuringErrors ? refDestructuringErrors.shorthandAssign : -1;\n  if (!andThrow) { return pos >= 0 }\n  if (pos > -1) { this.raise(pos, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function() {\n  if (this.type !== types.name || this.options.ecmaVersion < 6 || this.value != \"let\") { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh == 123) { return true } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!this.isKeyword(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.type !== types.name || this.options.ecmaVersion < 8 || this.value != \"async\")\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 == this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false)\n  case types._class:\n    if (!declaration) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (!declaration && kind != \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock()\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction() && declaration) {\n      this.next();\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword == \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n  if (this.type === types.semi) { return this.parseFor(node, null) }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init))\n      { return this.parseForIn(node, init$1) }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    this.toAssignable(init);\n    this.checkLVal(init);\n    this.checkPatternErrors(refDestructuringErrors, true);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync)\n};\n\npp$1.isFunction = function() {\n  return this.type === types._function || this.isAsyncFunction()\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.isFunction());\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.isFunction()) : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope();\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type != types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n  this.exitLexicalScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    this.expect(types.parenL);\n    clause.param = this.parseBindingAtom();\n    this.enterLexicalScope();\n    this.checkLVal(clause.param, \"let\");\n    this.expect(types.parenR);\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart == node.start) {\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(true);\n  if (node.body.type == \"ClassDeclaration\" ||\n      node.body.type == \"VariableDeclaration\" && node.body.kind != \"var\" ||\n      node.body.type == \"FunctionDeclaration\" && (this.strict || node.body.generator))\n    { this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\"); }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  node.left = init;\n  node.right = this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type != \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6 && !isAsync)\n    { node.generator = this.eat(types.star); }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type != types.name ? null : this.parseIdent();\n    if (node.id) {\n      this.checkLVal(node.id, \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement)\n    { node.id = this.type == types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (this$1.eat(types.semi)) { continue }\n    var method = this$1.startNode();\n    var isGenerator = this$1.eat(types.star);\n    var isAsync = false;\n    var isMaybeStatic = this$1.type === types.name && this$1.value === \"static\";\n    this$1.parsePropertyName(method);\n    method.static = isMaybeStatic && this$1.type !== types.parenL;\n    if (method.static) {\n      if (isGenerator) { this$1.unexpected(); }\n      isGenerator = this$1.eat(types.star);\n      this$1.parsePropertyName(method);\n    }\n    if (this$1.options.ecmaVersion >= 8 && !isGenerator && !method.computed &&\n        method.key.type === \"Identifier\" && method.key.name === \"async\" && this$1.type !== types.parenL &&\n        !this$1.canInsertSemicolon()) {\n      isAsync = true;\n      this$1.parsePropertyName(method);\n    }\n    method.kind = \"method\";\n    var isGetSet = false;\n    if (!method.computed) {\n      var key = method.key;\n      if (!isGenerator && !isAsync && key.type === \"Identifier\" && this$1.type !== types.parenL && (key.name === \"get\" || key.name === \"set\")) {\n        isGetSet = true;\n        method.kind = key.name;\n        key = this$1.parsePropertyName(method);\n      }\n      if (!method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n          key.type === \"Literal\" && key.value === \"constructor\")) {\n        if (hadConstructor) { this$1.raise(key.start, \"Duplicate constructor in the same class\"); }\n        if (isGetSet) { this$1.raise(key.start, \"Constructor can't have get/set modifier\"); }\n        if (isGenerator) { this$1.raise(key.start, \"Constructor can't be a generator\"); }\n        if (isAsync) { this$1.raise(key.start, \"Constructor can't be an async method\"); }\n        method.kind = \"constructor\";\n        hadConstructor = true;\n      }\n    }\n    this$1.parseClassMethod(classBody, method, isGenerator, isAsync);\n    if (isGetSet) {\n      var paramCount = method.kind === \"get\" ? 0 : 1;\n      if (method.value.params.length !== paramCount) {\n        var start = method.value.start;\n        if (method.kind === \"get\")\n          { this$1.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this$1.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n          { this$1.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type == \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type == \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop.value);\n      } }\n  else if (type == \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type == \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type == \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Can not use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      if (prop.kind !== \"init\") { this$1.raise(prop.key.start, \"Object pattern can't contain getter or setter\"); }\n        this$1.toAssignable(prop.value, isBinding);\n      }\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator === \"=\") {\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        // falls through to AssignmentPattern\n      } else {\n        this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n        break\n      }\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  if (end) {\n    var last = exprList[end - 1];\n    if (last && last.type == \"RestElement\") {\n      --end;\n    } else if (last && last.type == \"SpreadElement\") {\n      last.type = \"RestElement\";\n      var arg = last.argument;\n      this.toAssignable(arg, isBinding);\n      --end;\n    }\n\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"));\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name);\n      } else {\n        this.declareLexicalName(expr.name);\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop.value, bindingType, checkClashes);\n  }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash) {\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) { return this.parseYield() }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type == types.parenL || this.type == types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    this.checkPatternErrors(refDestructuringErrors, true);\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left) : left;\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start == startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.inAsync && this.isContextual(\"await\")) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd == base.end && !this.canInsertSemicolon();\n  for (var computed = (void 0);;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) { this$1.expect(types.bracketR); }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({isTagged: true});\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt == this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.inFunction)\n      { this.raise(this.start, \"'super' outside of function or class\"); }\n    node = this.startNode();\n    this.next();\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc;\n    var id = this.parseIdent(this.type !== types.name);\n    if (this.options.ecmaVersion >= 8 && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name) {\n        id = this.parseIdent();\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart, innerParenStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        if (this$1.type === types.parenL && !innerParenStart) {\n          innerParenStart = this$1.start;\n        }\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (innerParenStart) { this.unexpected(innerParenStart); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inFunction)\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    this$1.checkPropClash(prop, propHash);\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  this.parsePropertyName(prop);\n  if (!isPattern && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type != types.comma && this.type != types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.enterFunctionScope();\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\"); }\n  if (this.isKeyword(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") != -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name))\n    { this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\")); }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved == \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/ternjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) { this.checkUnreserved(node); }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type == types.semi || this.canInsertSemicolon() || (this.type != types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});\n};\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};\n\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n};\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n};\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType == types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType == types.arrow)\n    { return true }\n  if (prevType == types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType == types._var || prevType == types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType == types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length == 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType == types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6) {\n    if (this.value == \"of\" && !this.exprAllowed ||\n        this.value == \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Are we running under Rhino?\nvar isRhino = typeof Packages == \"object\" && Object.prototype.toString.call(Packages) == \"[object JavaPackage]\";\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code == 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next == 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) == 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next == 33 && code == 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) == 45 &&\n      this.input.charCodeAt(this.pos + 3) == 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n    // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n    // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\n// Parse a regular expression. Some context-awareness is necessary,\n// since a '/' inside a '[]' set does not end the expression.\n\nfunction tryCreateRegexp(src, flags, throwErrorAt, parser) {\n  try {\n    return new RegExp(src, flags)\n  } catch (e) {\n    if (throwErrorAt !== undefined) {\n      if (e instanceof SyntaxError) { parser.raise(throwErrorAt, \"Error parsing regular expression: \" + e.message); }\n      throw e\n    }\n  }\n}\n\nvar regexpUnicodeSupport = !!tryCreateRegexp(\"\\uffff\", \"u\");\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var content = this.input.slice(start, this.pos);\n  ++this.pos;\n  // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n  // here (don't ask).\n  var mods = this.readWord1();\n  var tmp = content, tmpFlags = \"\";\n  if (mods) {\n    var validFlags = /^[gim]*$/;\n    if (this.options.ecmaVersion >= 6) { validFlags = /^[gimuy]*$/; }\n    if (!validFlags.test(mods)) { this.raise(start, \"Invalid regular expression flag\"); }\n    if (mods.indexOf(\"u\") >= 0) {\n      if (regexpUnicodeSupport) {\n        tmpFlags = \"u\";\n      } else {\n        // Replace each astral symbol and every Unicode escape sequence that\n        // possibly represents an astral symbol or a paired surrogate with a\n        // single ASCII symbol to avoid throwing on regular expressions that\n        // are only valid in combination with the `/u` flag.\n        // Note: replacing with the ASCII symbol `x` might cause false\n        // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n        // perfectly valid pattern that is equivalent to `[a-b]`, but it would\n        // be replaced by `[x-b]` which throws an error.\n        tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function (_match, code, offset) {\n          code = Number(\"0x\" + code);\n          if (code > 0x10FFFF) { this$1.raise(start + offset + 3, \"Code point out of bounds\"); }\n          return \"x\"\n        });\n        tmp = tmp.replace(/\\\\u([a-fA-F0-9]{4})|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\");\n        tmpFlags = tmpFlags.replace(\"u\", \"\");\n      }\n    }\n  }\n  // Detect invalid regular expressions.\n  var value = null;\n  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,\n  // so don't do detection if we are running under Rhino\n  if (!isRhino) {\n    tryCreateRegexp(tmp, tmpFlags, start, this);\n    // Get a regular expression object for this pattern-flag pair, or `null` in\n    // case the current environment doesn't support the flags it uses.\n    value = tryCreateRegexp(content, mods);\n  }\n  return this.finishToken(types.regexp, {pattern: content, flags: mods, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos, isFloat = false, octal = this.input.charCodeAt(this.pos) === 48;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  if (octal && this.pos == start + 1) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    isFloat = true;\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    isFloat = true;\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos), val;\n  if (isFloat) { val = parseFloat(str); }\n  else if (!octal || str.length === 1) { val = parseInt(str, 10); }\n  else if (this.strict) { this.raise(start, \"Invalid number\"); }\n  else if (/[89]/.test(str)) { val = parseInt(str, 10); }\n  else { val = parseInt(str, 8); }\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      if (octalStr !== \"0\" && (this.strict || inTemplate)) {\n        this.invalidStringToken(this.pos - 2, \"Octal literal in strict mode\");\n      }\n      this.pos += octalStr.length - 1;\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) != 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/ternjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/ternjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.2.1\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\nvar parse_dammit;\nvar LooseParser;\nvar pluginsLoose; // eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  parse_dammit = parse; // eslint-disable-line camelcase\n  LooseParser = Parser$$1;\n  pluginsLoose = plugins$$1;\n}\n\n\n\n\n/***/ }),\n\n/***/ \"DuR2\":\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n\n/***/ \"FZ+f\":\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n\n/***/ \"M2cA\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Paper.js v0.11.5 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2016, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Thu Oct 5 16:16:29 2017 +0200\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2016 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = function(self, undefined) {\n\nself = self || __webpack_require__(0);\nvar window = self.window,\n\tdocument = self.document;\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\t\tarray = [],\n\t\tslice = array.slice,\n\t\tcreate = Object.create,\n\t\tdescribe = Object.getOwnPropertyDescriptor,\n\t\tdefine = Object.defineProperty,\n\n\t\tforEach = array.forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++) {\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t}\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this) {\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t}\n\t\t},\n\n\t\tset = Object.assign || function(dst) {\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tfor (var key in src) {\n\t\t\t\t\tif (src.hasOwnProperty(key))\n\t\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dst;\n\t\t},\n\n\t\teach = function(obj, iter, bind) {\n\t\t\tif (obj) {\n\t\t\t\tvar desc = describe(obj, 'length');\n\t\t\t\t(desc && typeof desc.value === 'number' ? forEach : forIn)\n\t\t\t\t\t.call(obj, iter, bind = bind || obj);\n\t\t\t}\n\t\t\treturn bind;\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res)) {\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\t}\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable != null ? enumerable : !bean;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\tvar src = arguments[i];\n\t\t\tif (src)\n\t\t\t\tset(this, src);\n\t\t}\n\t\treturn this;\n\t}\n\n\treturn inject(Base, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, null, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor,\n\t\t\t\tproto;\n\t\t\tfor (var i = 0, obj, l = arguments.length;\n\t\t\t\t\ti < l && !(ctor && proto); i++) {\n\t\t\t\tobj = arguments[i];\n\t\t\t\tctor = ctor || obj.initialize;\n\t\t\t\tproto = proto || obj.prototype;\n\t\t\t}\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tproto = ctor.prototype = proto || create(this.prototype);\n\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this);\n\t\t\tif (arguments.length)\n\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\tctor.base = base;\n\t\t\treturn ctor;\n\t\t}\n\t}).inject({\n\t\tenumerable: false,\n\n\t\tinitialize: Base,\n\n\t\tset: Base,\n\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src) {\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\tset: set,\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function(a, b) {\n\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t},\n\n\t\t\tslice: function(list, begin, end) {\n\t\t\t\treturn slice.call(list, begin, end);\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (true)\n\tmodule.exports = Base;\n\nBase.inject({\n\tenumerable: false,\n\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\timportJSON: function(json) {\n\t\treturn Base.importJSON(json, this);\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\tset: function(props, exclude) {\n\t\tif (props)\n\t\t\tBase.filter(this, props, exclude, this._prioritize);\n\t\treturn this;\n\t}\n}, {\n\nbeans: false,\nstatics: {\n\texports: {},\n\n\textend: function extend() {\n\t\tvar res = extend.base.apply(this, arguments),\n\t\t\tname = res.prototype._class;\n\t\tif (name && !Base.exports[name])\n\t\t\tBase.exports[name] = res;\n\t\treturn res;\n\t},\n\n\tequals: function(obj1, obj2) {\n\t\tif (obj1 === obj2)\n\t\t\treturn true;\n\t\tif (obj1 && obj1.equals)\n\t\t\treturn obj1.equals(obj2);\n\t\tif (obj2 && obj2.equals)\n\t\t\treturn obj2.equals(obj1);\n\t\tif (obj1 && obj2\n\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tvar length = obj1.length;\n\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\twhile (length--) {\n\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\tlength = keys.length;\n\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\treturn false;\n\t\t\t\twhile (length--) {\n\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tread: function(list, start, options, amount) {\n\t\tif (this === Base) {\n\t\t\tvar value = this.peek(list, start);\n\t\t\tlist.__index++;\n\t\t\treturn value;\n\t\t}\n\t\tvar proto = this.prototype,\n\t\t\treadIndex = proto._readIndex,\n\t\t\tbegin = start || readIndex && list.__index || 0,\n\t\t\tlength = list.length,\n\t\t\tobj = list[begin];\n\t\tamount = amount || length - begin;\n\t\tif (obj instanceof this\n\t\t\t|| options && options.readNull && obj == null && amount <= 1) {\n\t\t\tif (readIndex)\n\t\t\t\tlist.__index = begin + 1;\n\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t}\n\t\tobj = Base.create(proto);\n\t\tif (readIndex)\n\t\t\tobj.__read = true;\n\t\tobj = obj.initialize.apply(obj, begin > 0 || begin + amount < length\n\t\t\t\t? Base.slice(list, begin, begin + amount)\n\t\t\t\t: list) || obj;\n\t\tif (readIndex) {\n\t\t\tlist.__index = begin + obj.__read;\n\t\t\tvar filtered = obj.__filtered;\n\t\t\tif (filtered) {\n\t\t\t\tlist.__filtered = filtered;\n\t\t\t\tobj.__filtered = undefined;\n\t\t\t}\n\t\t\tobj.__read = undefined;\n\t\t}\n\t\treturn obj;\n\t},\n\n\tpeek: function(list, start) {\n\t\treturn list[list.__index = start || list.__index || 0];\n\t},\n\n\tremain: function(list) {\n\t\treturn list.length - (list.__index || 0);\n\t},\n\n\treadList: function(list, start, options, amount) {\n\t\tvar res = [],\n\t\t\tentry,\n\t\t\tbegin = start || 0,\n\t\t\tend = amount ? begin + amount : list.length;\n\t\tfor (var i = begin; i < end; i++) {\n\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t}\n\t\treturn res;\n\t},\n\n\treadNamed: function(list, name, start, options, amount) {\n\t\tvar value = this.getNamed(list, name),\n\t\t\thasObject = value !== undefined;\n\t\tif (hasObject) {\n\t\t\tvar filtered = list.__filtered;\n\t\t\tif (!filtered) {\n\t\t\t\tfiltered = list.__filtered = Base.create(list[0]);\n\t\t\t\tfiltered.__unfiltered = list[0];\n\t\t\t}\n\t\t\tfiltered[name] = undefined;\n\t\t}\n\t\tvar l = hasObject ? [value] : list,\n\t\t\tres = this.read(l, start, options, amount);\n\t\treturn res;\n\t},\n\n\tgetNamed: function(list, name) {\n\t\tvar arg = list[0];\n\t\tif (list._hasObject === undefined)\n\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\tif (list._hasObject)\n\t\t\treturn name ? arg[name] : list.__filtered || arg;\n\t},\n\n\thasNamed: function(list, name) {\n\t\treturn !!this.getNamed(list, name);\n\t},\n\n\tfilter: function(dest, source, exclude, prioritize) {\n\t\tvar processed;\n\n\t\tfunction handleKey(key) {\n\t\t\tif (!(exclude && key in exclude) &&\n\t\t\t\t!(processed && key in processed)) {\n\t\t\t\tvar value = source[key];\n\t\t\t\tif (value !== undefined)\n\t\t\t\t\tdest[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tif (prioritize) {\n\t\t\tvar keys = {};\n\t\t\tfor (var i = 0, key, l = prioritize.length; i < l; i++) {\n\t\t\t\tif ((key = prioritize[i]) in source) {\n\t\t\t\t\thandleKey(key);\n\t\t\t\t\tkeys[key] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprocessed = keys;\n\t\t}\n\n\t\tObject.keys(source.__unfiltered || source).forEach(handleKey);\n\t\treturn dest;\n\t},\n\n\tisPlainValue: function(obj, asString) {\n\t\treturn Base.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t|| asString && typeof obj === 'string';\n\t},\n\n\tserialize: function(obj, options, compact, dictionary) {\n\t\toptions = options || {};\n\n\t\tvar isRoot = !dictionary,\n\t\t\tres;\n\t\tif (isRoot) {\n\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\tdictionary = {\n\t\t\t\tlength: 0,\n\t\t\t\tdefinitions: {},\n\t\t\t\treferences: {},\n\t\t\t\tadd: function(item, create) {\n\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t}\n\t\t\t\t\treturn ref;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tif (obj && obj._serialize) {\n\t\t\tres = obj._serialize(options, dictionary);\n\t\t\tvar name = obj._class;\n\t\t\tif (name && !obj._compactSerialize && (isRoot || !compact)\n\t\t\t\t\t&& res[0] !== name) {\n\t\t\t\tres.unshift(name);\n\t\t\t}\n\t\t} else if (Array.isArray(obj)) {\n\t\t\tres = [];\n\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\tres[i] = Base.serialize(obj[i], options, compact, dictionary);\n\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\tres = {};\n\t\t\tvar keys = Object.keys(obj);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\tdictionary);\n\t\t\t}\n\t\t} else if (typeof obj === 'number') {\n\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t} else {\n\t\t\tres = obj;\n\t\t}\n\t\treturn isRoot && dictionary.length > 0\n\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t: res;\n\t},\n\n\tdeserialize: function(json, create, _data, _setDictionary, _isRoot) {\n\t\tvar res = json,\n\t\t\tisFirst = !_data,\n\t\t\thasDictionary = isFirst && json && json.length\n\t\t\t\t&& json[0][0] === 'dictionary';\n\t\t_data = _data || {};\n\t\tif (Array.isArray(json)) {\n\t\t\tvar type = json[0],\n\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\tif (json.length == 1 && /^#/.test(type)) {\n\t\t\t\treturn _data.dictionary[type];\n\t\t\t}\n\t\t\ttype = Base.exports[type];\n\t\t\tres = [];\n\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++) {\n\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\tisDictionary, hasDictionary));\n\t\t\t}\n\t\t\tif (type) {\n\t\t\t\tvar args = res;\n\t\t\t\tif (create) {\n\t\t\t\t\tres = create(type, args, isFirst || _isRoot);\n\t\t\t\t} else {\n\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Base.isPlainObject(json)) {\n\t\t\tres = {};\n\t\t\tif (_setDictionary)\n\t\t\t\t_data.dictionary = res;\n\t\t\tfor (var key in json)\n\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t}\n\t\treturn hasDictionary ? res[1] : res;\n\t},\n\n\texportJSON: function(obj, options) {\n\t\tvar json = Base.serialize(obj, options);\n\t\treturn options && options.asString == false\n\t\t\t\t? json\n\t\t\t\t: JSON.stringify(json);\n\t},\n\n\timportJSON: function(json, target) {\n\t\treturn Base.deserialize(\n\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\tfunction(ctor, args, isRoot) {\n\t\t\t\t\tvar useTarget = isRoot && target\n\t\t\t\t\t\t\t&& target.constructor === ctor,\n\t\t\t\t\t\tobj = useTarget ? target\n\t\t\t\t\t\t\t: Base.create(ctor.prototype);\n\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t&& (useTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t}\n\t\t\t\t\t(useTarget ? obj.set : ctor).apply(obj, args);\n\t\t\t\t\tif (useTarget)\n\t\t\t\t\t\ttarget = null;\n\t\t\t\t\treturn obj;\n\t\t\t\t});\n\t},\n\n\tsplice: function(list, items, index, remove) {\n\t\tvar amount = items && items.length,\n\t\t\tappend = index === undefined;\n\t\tindex = append ? list.length : index;\n\t\tif (index > list.length)\n\t\t\tindex = list.length;\n\t\tfor (var i = 0; i < amount; i++)\n\t\t\titems[i]._index = index + i;\n\t\tif (append) {\n\t\t\tlist.push.apply(list, items);\n\t\t\treturn [];\n\t\t} else {\n\t\t\tvar args = [index, remove];\n\t\t\tif (items)\n\t\t\t\targs.push.apply(args, items);\n\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\tremoved[i]._index = undefined;\n\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\tlist[i]._index = i;\n\t\t\treturn removed;\n\t\t}\n\t},\n\n\tcapitalize: function(str) {\n\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\treturn match.toUpperCase();\n\t\t});\n\t},\n\n\tcamelize: function(str) {\n\t\treturn str.replace(/-(.)/g, function(match, chr) {\n\t\t\treturn chr.toUpperCase();\n\t\t});\n\t},\n\n\thyphenate: function(str) {\n\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t}\n}});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = Base.slice(arguments, 1),\n\t\t\tsetTarget = event && event.target && !event.currentTarget;\n\t\thandlers = handlers.slice();\n\t\tif (setTarget)\n\t\t\tevent.currentTarget = this;\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) == false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t   }\n\t\t}\n\t\tif (setTarget)\n\t\t\tdelete event.currentTarget;\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar types = this._eventTypes,\n\t\t\thandlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tif (types) {\n\t\t\tfor (var type in handlers) {\n\t\t\t\tif (handlers[type].length > 0) {\n\t\t\t\t\tvar entry = types[type],\n\t\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\t\tif (func)\n\t\t\t\t\t\tfunc.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\tinsertItems: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1) || {};\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\t\tif (!this.agent) {\n\t\t\tvar user = self.navigator.userAgent.toLowerCase(),\n\t\t\t\tos = (/(darwin|win|mac|linux|freebsd|sunos)/.exec(user)||[])[0],\n\t\t\t\tplatform = os === 'darwin' ? 'mac' : os,\n\t\t\t\tagent = proto.agent = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tagent[platform] = true;\n\t\t\tuser.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom|node)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:v?([.\\d]+))?/g,\n\t\t\t\tfunction(match, n, v1, v2, rv) {\n\t\t\t\t\tif (!agent.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 :\n\t\t\t\t\t\t\t\t/^(node|trident)$/.test(n) ? rv : v1;\n\t\t\t\t\t\tagent.version = v;\n\t\t\t\t\t\tagent.versionNumber = parseFloat(v);\n\t\t\t\t\t\tn = n === 'trident' ? 'msie' : n;\n\t\t\t\t\t\tagent.name = n;\n\t\t\t\t\t\tagent[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (agent.chrome)\n\t\t\t\tdelete agent.webkit;\n\t\t\tif (agent.atom)\n\t\t\t\tdelete agent.chrome;\n\t\t}\n\t},\n\n\tversion: \"0.11.5\",\n\n\tgetView: function() {\n\t\tvar project = this.project;\n\t\treturn project && project._view;\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, options) {\n\t\tpaper.PaperScript.execute(code, this, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tcreateCanvas: function(width, height) {\n\t\treturn CanvasProvider.getCanvas(width, height);\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tvar projects = this.projects,\n\t\t\ttools = this.tools;\n\t\tfor (var i = projects.length - 1; i >= 0; i--)\n\t\t\tprojects[i].remove();\n\t\tfor (var i = tools.length - 1; i >= 0; i--)\n\t\t\ttools[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._scope.getView();\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = Base.pick(precision, 5);\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn this.precision < 16\n\t\t\t\t? Math.round(val * this.multiplier) / this.multiplier : val;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tlog2 = Math.log2 || function(x) {\n\t\t\treturn Math.log(x) * Math.LOG2E;\n\t\t},\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\tfunction clamp(value, min, max) {\n\t\treturn value < min ? min : value > max ? max : value;\n\t}\n\n\tfunction getDiscriminant(a, b, c) {\n\t\tfunction split(v) {\n\t\t\tvar x = v * 134217729,\n\t\t\t\ty = v - x,\n\t\t\t\thi = y + x,\n\t\t\t\tlo = v - hi;\n\t\t\treturn [hi, lo];\n\t\t}\n\n\t\tvar D = b * b - a * c,\n\t\t\tE = b * b + a * c;\n\t\tif (abs(D) * 3 < E) {\n\t\t\tvar ad = split(a),\n\t\t\t\tbd = split(b),\n\t\t\t\tcd = split(c),\n\t\t\t\tp = b * b,\n\t\t\t\tdp = (bd[0] * bd[0] - p + 2 * bd[0] * bd[1]) + bd[1] * bd[1],\n\t\t\t\tq = a * c,\n\t\t\t\tdq = (ad[0] * cd[0] - q + ad[0] * cd[1] + ad[1] * cd[0])\n\t\t\t\t\t\t+ ad[1] * cd[1];\n\t\t\tD = (p - q) + (dp - dq);\n\t\t}\n\t\treturn D;\n\t}\n\n\tfunction getNormalizationFactor() {\n\t\tvar norm = Math.max.apply(Math, arguments);\n\t\treturn norm && (norm < 1e-8 || norm > 1e8)\n\t\t\t\t? pow(2, -Math.round(log2(norm)))\n\t\t\t\t: 0;\n\t}\n\n\treturn {\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tCURVETIME_EPSILON: 1e-8,\n\t\tGEOMETRIC_EPSILON: 1e-7,\n\t\tTRIGONOMETRIC_EPSILON: 1e-8,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t},\n\n\t\tclamp: clamp,\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance) {\n\t\t\t\t\tx = nx;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn clamp(x, a, b);\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar x1, x2 = Infinity;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(b) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / b;\n\t\t\t} else {\n\t\t\t\tb *= -0.5;\n\t\t\t\tvar D = getDiscriminant(a, b, c);\n\t\t\t\tif (D && abs(D) < MACHINE_EPSILON) {\n\t\t\t\t\tvar f = getNormalizationFactor(abs(a), abs(b), abs(c));\n\t\t\t\t\tif (f) {\n\t\t\t\t\t\ta *= f;\n\t\t\t\t\t\tb *= f;\n\t\t\t\t\t\tc *= f;\n\t\t\t\t\t\tD = getDiscriminant(a, b, c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\t\tif (R === 0) {\n\t\t\t\t\t\tx1 = c / a;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx1 = R / a;\n\t\t\t\t\t\tx2 = c / R;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = 0,\n\t\t\t\tboundless = min == null,\n\t\t\t\tminB = min - EPSILON,\n\t\t\t\tmaxB = max + EPSILON;\n\t\t\tif (isFinite(x1) && (boundless || x1 > minB && x1 < maxB))\n\t\t\t\troots[count++] = boundless ? x1 : clamp(x1, min, max);\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (boundless || x2 > minB && x2 < maxB))\n\t\t\t\troots[count++] = boundless ? x2 : clamp(x2, min, max);\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar f = getNormalizationFactor(abs(a), abs(b), abs(c), abs(d)),\n\t\t\t\tx, b1, c2, qd, q;\n\t\t\tif (f) {\n\t\t\t\ta *= f;\n\t\t\t\tb *= f;\n\t\t\t\tc *= f;\n\t\t\t\td *= f;\n\t\t\t}\n\n\t\t\tfunction evaluate(x0) {\n\t\t\t\tx = x0;\n\t\t\t\tvar tmp = a * x;\n\t\t\t\tb1 = tmp + b;\n\t\t\t\tc2 = b1 * x + c;\n\t\t\t\tqd = (tmp + b1) * x + c2;\n\t\t\t\tq = c2 * x + d;\n\t\t\t}\n\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tevaluate(-(b / a) / 3);\n\t\t\t\tvar t = q / a,\n\t\t\t\t\tr = pow(abs(t), 1/3),\n\t\t\t\t\ts = t < 0 ? -1 : 1,\n\t\t\t\t\ttd = -qd / a,\n\t\t\t\t\trd = td > 0 ? 1.324717957244746 * Math.max(r, sqrt(td)) : r,\n\t\t\t\t\tx0 = x - s * rd;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tevaluate(x0);\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / (1 + MACHINE_EPSILON);\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max),\n\t\t\t\tboundless = min == null;\n\t\t\tif (isFinite(x) && (count === 0\n\t\t\t\t\t|| count > 0 && x !== roots[0] && x !== roots[1])\n\t\t\t\t\t&& (boundless || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\troots[count++] = boundless ? x : clamp(x, min, max);\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(name) {\n\t\tif (name) {\n\t\t\tvar pool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0,\n\t\t\treading = this.__read,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis._set(arg0, hasY ? arg1 : arg0);\n\t\t\tif (reading)\n\t\t\t\tread = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0);\n\t\t\tif (reading)\n\t\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tvar obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n\t\t\tread = 1;\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\tthis._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n\t\t\t} else if ('x' in obj) {\n\t\t\t\tthis._set(obj.x || 0, obj.y || 0);\n\t\t\t} else if ('width' in obj) {\n\t\t\t\tthis._set(obj.width || 0, obj.height || 0);\n\t\t\t} else if ('angle' in obj) {\n\t\t\t\tthis._set(obj.length || 0, 0);\n\t\t\t\tthis.setAngle(obj.angle || 0);\n\t\t\t} else {\n\t\t\t\tthis._set(0, 0);\n\t\t\t\tread = 0;\n\t\t\t}\n\t\t}\n\t\tif (reading)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis._set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis._set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis._set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * cos - point.y * sin,\n\t\t\tpoint.x * sin + point.y * cos\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\ttolerance = Base.read(arguments);\n\t\treturn this.getDistance(point) <= tolerance;\n\t},\n\n\tisCollinear: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this.x) && isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tisInQuadrant: function(q) {\n\t\treturn this.x * (q > 1 && q < 4 ? -1 : 1) >= 0\n\t\t\t&& this.y * (q > 2 ? -1 : 1) >= 0;\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\treturn new Point(\n\t\t\tpoint.x * scale,\n\t\t\tpoint.y * scale\n\t\t);\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t},\n\n\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-8;\n\t\t},\n\n\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-8;\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(key) {\n\tvar op = Math[key];\n\tthis[key] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._owner._selection & this._getSelection());\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner._changeSelection(this._getSelection(), selected);\n\t},\n\n\t_getSelection: function() {\n\t\treturn this._setter === 'setPosition' ? 4 : 0;\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0,\n\t\t\treading = this.__read,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis._set(arg0, hasHeight ? arg1 : arg0);\n\t\t\tif (reading)\n\t\t\t\tread = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0);\n\t\t\tif (reading)\n\t\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tvar obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n\t\t\tread = 1;\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\tthis._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n\t\t\t} else if ('width' in obj) {\n\t\t\t\tthis._set(obj.width || 0, obj.height || 0);\n\t\t\t} else if ('x' in obj) {\n\t\t\t\tthis._set(obj.x || 0, obj.y || 0);\n\t\t\t} else {\n\t\t\t\tthis._set(0, 0);\n\t\t\t\tread = 0;\n\t\t\t}\n\t\t}\n\t\tif (reading)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this.width) && isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(key) {\n\tvar op = Math[key];\n\tthis[key] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread;\n\t\tif (type === 'number') {\n\t\t\tthis._set(arg0, arg1, arg2, arg3);\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0, 0, 0);\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis._set.apply(this, arg0);\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis._set(arg0.x || 0, arg0.y || 0,\n\t\t\t\t\t\targ0.width || 0, arg0.height || 0);\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis._set(0, 0, 0, 0);\n\t\t\t\tBase.filter(this, arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (read === undefined) {\n\t\t\tvar frm = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments),\n\t\t\t\tx = frm.x,\n\t\t\t\ty = frm.y,\n\t\t\t\twidth,\n\t\t\t\theight;\n\t\t\tif (next && next.x !== undefined\n\t\t\t\t\t|| Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\twidth = to.x - x;\n\t\t\t\theight = to.y - y;\n\t\t\t\tif (width < 0) {\n\t\t\t\t\tx = to.x;\n\t\t\t\t\twidth = -width;\n\t\t\t\t}\n\t\t\t\tif (height < 0) {\n\t\t\t\t\ty = to.y;\n\t\t\t\t\theight = -height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\twidth = size.width;\n\t\t\t\theight = size.height;\n\t\t\t}\n\t\t\tthis._set(x, y, width, height);\n\t\t\tread = arguments.__index;\n\t\t\tvar filtered = arguments.__filtered;\n\t\t\tif (filtered)\n\t\t\t\tthis.__filtered = filtered;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\t_fw: 1,\n\t_fh: 1,\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tsx = this._sx,\n\t\t\tsy = this._sy,\n\t\t\tw = size.width,\n\t\t\th = size.height;\n\t\tif (sx) {\n\t\t\tthis.x += (this.width - w) * sx;\n\t\t}\n\t\tif (sy) {\n\t\t\tthis.y += (this.height - h) * sy;\n\t\t}\n\t\tthis.width = w;\n\t\tthis.height = h;\n\t\tthis._fw = this._fh = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fw) {\n\t\t\tvar amount = left - this.x;\n\t\t\tthis.width -= this._sx === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.x = left;\n\t\tthis._sx = this._fw = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fh) {\n\t\t\tvar amount = top - this.y;\n\t\t\tthis.height -= this._sy === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.y = top;\n\t\tthis._sy = this._fh = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (!this._fw) {\n\t\t\tvar amount = right - this.x;\n\t\t\tthis.width = this._sx === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.x = right - this.width;\n\t\tthis._sx = 1;\n\t\tthis._fw = 0;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (!this._fh) {\n\t\t\tvar amount = bottom - this.y;\n\t\t\tthis.height = this._sy === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.y = bottom - this.height;\n\t\tthis._sy = 1;\n\t\tthis._fh = 0;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width / 2;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tif (this._fw || this._sx === 0.5) {\n\t\t\tthis.x = x - this.width / 2;\n\t\t} else {\n\t\t\tif (this._sx) {\n\t\t\t\tthis.x += (x - this.x) * 2 * this._sx;\n\t\t\t}\n\t\t\tthis.width = (x - this.x) * 2;\n\t\t}\n\t\tthis._sx = 0.5;\n\t\tthis._fw = 0;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height / 2;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tif (this._fh || this._sy === 0.5) {\n\t\t\tthis.y = y - this.height / 2;\n\t\t} else {\n\t\t\tif (this._sy) {\n\t\t\t\tthis.y += (y - this.y) * 2 * this._sy;\n\t\t\t}\n\t\t\tthis.height = (y - this.y) * 2;\n\t\t}\n\t\tthis._sy = 0.5;\n\t\tthis._fh = 0;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length === 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tepsilon = Base.read(arguments) || 0;\n\t\treturn rect.x + rect.width > this.x - epsilon\n\t\t\t\t&& rect.y + rect.height > this.y - epsilon\n\t\t\t\t&& rect.x < this.x + this.width + epsilon\n\t\t\t\t&& rect.y < this.y + this.height + epsilon;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join(''),\n\t\t\txFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis._set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n},\nnew function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key),\n\t\t\tinternal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn !!(this._owner._selection & 2);\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner._changeSelection) {\n\t\t\t\t\towner._changeSelection(2, selected);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg, _dontNotify) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count >= 6) {\n\t\t\tthis._set.apply(this, arguments);\n\t\t} else if (count === 1 || count === 2) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis._set(arg._a, arg._b, arg._c, arg._d, arg._tx, arg._ty,\n\t\t\t\t\t\t_dontNotify);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis._set.apply(this,\n\t\t\t\t\t\t_dontNotify ? arg.concat([_dontNotify]) : arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (!count) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok) {\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t\t}\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(a, b, c, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._b = b;\n\t\tthis._c = c;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.getValues(), options, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._b, this._c, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._c),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._b), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._b = this._c = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._c;\n\t\tthis._ty += x * this._b + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._b *= scale.x;\n\t\tthis._c *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * c;\n\t\tthis._b = cos * b + sin * d;\n\t\tthis._c = -sin * a + cos * c;\n\t\tthis._d = -sin * b + cos * d;\n\t\tthis._tx += tx * a + ty * c;\n\t\tthis._ty += tx * b + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tb = this._b;\n\t\tthis._a += shear.y * this._c;\n\t\tthis._b += shear.y * this._d;\n\t\tthis._c += shear.x * a;\n\t\tthis._d += shear.x * b;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tappend: function(mx, _dontNotify) {\n\t\tif (mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._c,\n\t\t\t\tc2 = mx._b,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + c2 * c1;\n\t\t\tthis._c = b2 * a1 + d2 * c1;\n\t\t\tthis._b = a2 * b1 + c2 * d1;\n\t\t\tthis._d = b2 * b1 + d2 * d1;\n\t\t\tthis._tx += tx2 * a1 + ty2 * c1;\n\t\t\tthis._ty += tx2 * b1 + ty2 * d1;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t}\n\t\treturn this;\n\t},\n\n\tprepend: function(mx, _dontNotify) {\n\t\tif (mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ttx1 = this._tx,\n\t\t\t\tty1 = this._ty,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._c,\n\t\t\t\tc2 = mx._b,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + b2 * b1;\n\t\t\tthis._c = a2 * c1 + b2 * d1;\n\t\t\tthis._b = c2 * a1 + d2 * b1;\n\t\t\tthis._d = c2 * c1 + d2 * d1;\n\t\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t}\n\t\treturn this;\n\t},\n\n\tappended: function(mx) {\n\t\treturn this.clone().append(mx);\n\t},\n\n\tprepended: function(mx) {\n\t\treturn this.clone().prepend(mx);\n\t},\n\n\tinvert: function() {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\ttx = this._tx,\n\t\t\tty = this._ty,\n\t\t\tdet = a * d - b * c,\n\t\t\tres = null;\n\t\tif (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n\t\t\tthis._a = d / det;\n\t\t\tthis._b = -b / det;\n\t\t\tthis._c = -c / det;\n\t\t\tthis._d = a / det;\n\t\t\tthis._tx = (c * ty - d * tx) / det;\n\t\t\tthis._ty = (b * tx - a * ty) / det;\n\t\t\tres = this;\n\t\t}\n\t\treturn res;\n\t},\n\n\tinverted: function() {\n\t\treturn this.clone().invert();\n\t},\n\n\tconcatenate: '#append',\n\tpreConcatenate: '#prepend',\n\tchain: '#appended',\n\n\t_shiftless: function() {\n\t\treturn new Matrix(this._a, this._b, this._c, this._d, 0, 0);\n\t},\n\n\t_orNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._b === 0 && this._c === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\tisInvertible: function() {\n\t\tvar det = this._a * this._d - this._c * this._b;\n\t\treturn det && !isNaN(det) && isFinite(this._tx) && isFinite(this._ty);\n\t},\n\n\tisSingular: function() {\n\t\treturn !this.isInvertible();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest._set(\n\t\t\t\tx * this._a + y * this._c + this._tx,\n\t\t\t\tx * this._b + y * this._d + this._ty,\n\t\t\t\t_dontNotify);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tfor (var i = 0, max = 2 * count; i < max; i += 2) {\n\t\t\tvar x = src[i],\n\t\t\t\ty = src[i + 1];\n\t\t\tdst[i] = x * this._a + y * this._c + this._tx;\n\t\t\tdst[i + 1] = x * this._b + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = min.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j]) {\n\t\t\t\tmin[j] = val;\n\t\t\t} else if (val > max[j]) {\n\t\t\t\tmax[j] = val;\n\t\t\t}\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest._set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\ttx = this._tx,\n\t\t\tty = this._ty,\n\t\t\tdet = a * d - b * c,\n\t\t\tres = null;\n\t\tif (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n\t\t\tvar x = point.x - this._tx,\n\t\t\t\ty = point.y - this._ty;\n\t\t\tif (!dest)\n\t\t\t\tdest = new Point();\n\t\t\tres = dest._set(\n\t\t\t\t\t(x * d - y * c) / det,\n\t\t\t\t\t(y * a - x * b) / det,\n\t\t\t\t\t_dontNotify);\n\t\t}\n\t\treturn res;\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\tdet = a * d - b * c,\n\t\t\tsqrt = Math.sqrt,\n\t\t\tatan2 = Math.atan2,\n\t\t\tdegrees = 180 / Math.PI,\n\t\t\trotate,\n\t\t\tscale,\n\t\t\tskew;\n\t\tif (a !== 0 || b !== 0) {\n\t\t\tvar r = sqrt(a * a + b * b);\n\t\t\trotate = Math.acos(a / r) * (b > 0 ? 1 : -1);\n\t\t\tscale = [r, det / r];\n\t\t\tskew = [atan2(a * c + b * d, r * r), 0];\n\t\t} else if (c !== 0 || d !== 0) {\n\t\t\tvar s = sqrt(c * c + d * d);\n\t\t\trotate = Math.asin(c / s)  * (d > 0 ? 1 : -1);\n\t\t\tscale = [det / s, s];\n\t\t\tskew = [0, atan2(a * c + b * d, s * s)];\n\t\t} else {\n\t\t\trotate = 0;\n\t\t\tskew = scale = [0, 0];\n\t\t}\n\t\treturn {\n\t\t\ttranslation: this.getTranslation(),\n\t\t\trotation: rotate * degrees,\n\t\t\tscaling: new Point(scale),\n\t\t\tskewing: new Point(skew[0] * degrees, skew[1] * degrees)\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._b, this._c, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tif (!this.isIdentity()) {\n\t\t\tctx.transform(this._a, this._b, this._c, this._d,\n\t\t\t\t\tthis._tx, this._ty);\n\t\t}\n\t}\n}, Base.each(['a', 'b', 'c', 'd', 'tx', 'ty'], function(key) {\n\tvar part = Base.capitalize(key),\n\t\tprop = '_' + key;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point, isInfinite) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(this.getSignedDistance(point));\n\t},\n\n\tgetSignedDistance: function(point) {\n\t\treturn Line.getSignedDistance(this._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tisCollinear: function(line) {\n\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tisOrthogonal: function(line) {\n\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tstatics: {\n\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tv1x -= p1x;\n\t\t\t\tv1y -= p1y;\n\t\t\t\tv2x -= p2x;\n\t\t\t\tv2y -= p2y;\n\t\t\t}\n\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\tif (isInfinite\n\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t}\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (!isInfinite && Numerical.isZero(ccw)) {\n\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\tccw = 0;\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn vx === 0 ? vy > 0 ? x - px : px - x\n\t\t\t\t : vy === 0 ? vx < 0 ? y - py : py - y\n\t\t\t\t : ((x-px) * vy - (y-py) * vx) / Math.sqrt(vx * vx + vy * vy);\n\t\t},\n\n\t\tgetDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\treturn Math.abs(\n\t\t\t\t\tLine.getSignedDistance(px, py, vx, vy, x, y, asVector));\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\t_compactSerialize: true,\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tthis._activeLayer = null;\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectionItems = {};\n\t\tthis._selectionCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this._children, options, true, dictionary);\n\t},\n\n\t_changed: function(flags, item) {\n\t\tif (flags & 1) {\n\t\t\tvar view = this._view;\n\t\t\tif (view) {\n\t\t\t\tview._needsUpdate = true;\n\t\t\t\tif (!view._requested && view._autoUpdate)\n\t\t\t\t\tview.requestUpdate();\n\t\t\t}\n\t\t}\n\t\tvar changes = this._changes;\n\t\tif (changes && item) {\n\t\t\tvar changesById = this._changesById,\n\t\t\t\tid = item._id,\n\t\t\t\tentry = changesById[id];\n\t\t\tif (entry) {\n\t\t\t\tentry.flags |= flags;\n\t\t\t} else {\n\t\t\t\tchanges.push(changesById[id] = { item: item, flags: flags });\n\t\t\t}\n\t\t}\n\t},\n\n\tclear: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--)\n\t\t\tchildren[i].remove();\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children.length;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.set(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetLayers: function() {\n\t\treturn this._children;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this, insert: true });\n\t},\n\n\tgetSymbolDefinitions: function() {\n\t\tvar definitions = [],\n\t\t\tids = {};\n\t\tthis.getItems({\n\t\t\tclass: SymbolItem,\n\t\t\tmatch: function(item) {\n\t\t\t\tvar definition = item._definition,\n\t\t\t\t\tid = definition._id;\n\t\t\t\tif (!ids[id]) {\n\t\t\t\t\tids[id] = true;\n\t\t\t\t\tdefinitions.push(definition);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\treturn definitions;\n\t},\n\n\tgetSymbols: 'getSymbolDefinitions',\n\n\tgetSelectedItems: function() {\n\t\tvar selectionItems = this._selectionItems,\n\t\t\titems = [];\n\t\tfor (var id in selectionItems) {\n\t\t\tvar item = selectionItems[id],\n\t\t\t\tselection = item._selection;\n\t\t\tif ((selection & 1) && item.isInserted()) {\n\t\t\t\titems.push(item);\n\t\t\t} else if (!selection) {\n\t\t\t\tthis._updateSelection(item);\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectionItems = this._selectionItems;\n\t\tif (item._selection) {\n\t\t\tif (selectionItems[id] !== item) {\n\t\t\t\tthis._selectionCount++;\n\t\t\t\tselectionItems[id] = item;\n\t\t\t}\n\t\t} else if (selectionItems[id] === item) {\n\t\t\tthis._selectionCount--;\n\t\t\tdelete selectionItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectionItems = this._selectionItems;\n\t\tfor (var i in selectionItems)\n\t\t\tselectionItems[i].setFullySelected(false);\n\t},\n\n\taddLayer: function(layer) {\n\t\treturn this.insertLayer(undefined, layer);\n\t},\n\n\tinsertLayer: function(index, layer) {\n\t\tif (layer instanceof Layer) {\n\t\t\tlayer._remove(false, true);\n\t\t\tBase.splice(this._children, [layer], index, 0);\n\t\t\tlayer._setProject(this, true);\n\t\t\tvar name = layer._name;\n\t\t\tif (name)\n\t\t\t\tlayer.setName(name);\n\t\t\tif (this._changes)\n\t\t\t\tlayer._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = layer;\n\t\t} else {\n\t\t\tlayer = null;\n\t\t}\n\t\treturn layer;\n\t},\n\n\t_insertItem: function(index, item, _created) {\n\t\titem = this.insertLayer(index, item)\n\t\t\t\t|| (this._activeLayer || this._insertItem(undefined,\n\t\t\t\t\t\tnew Layer(Item.NO_INSERT), true))\n\t\t\t\t\t\t.insertChild(index, item);\n\t\tif (_created && item.activate)\n\t\t\titem.activate();\n\t\treturn item;\n\t},\n\n\tgetItems: function(options) {\n\t\treturn Item._getItems(this, options);\n\t},\n\n\tgetItem: function(options) {\n\t\treturn Item._getItems(this, options, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tremoveOn: function(type) {\n\t\tvar sets = this._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar children = this._children,\n\t\t\tparam = new Base({\n\t\t\t\toffset: new Point(0, 0),\n\t\t\t\tpixelRatio: pixelRatio,\n\t\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\t\tmatrices: [new Matrix()],\n\t\t\t\tupdateMatrix: true\n\t\t\t});\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tchildren[i].draw(ctx, param);\n\t\t}\n\t\tctx.restore();\n\n\t\tif (this._selectionCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectionItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items) {\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = Base.set({},\n\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_name: null,\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_canScaleStroke: false,\n\t_pivot: null,\n\t_visible: true,\n\t_blendMode: 'normal',\n\t_opacity: 1,\n\t_locked: false,\n\t_guide: false,\n\t_clipMask: false,\n\t_selection: 0,\n\t_selectBounds: true,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tlocked: false,\n\t\tguide: false,\n\t\tclipMask: false,\n\t\tselected: false,\n\t\tdata: {}\n\t},\n\t_prioritize: ['applyMatrix']\n},\nnew function() {\n\tvar handlers = ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'];\n\treturn Base.each(handlers,\n\t\tfunction(name) {\n\t\t\tthis._events[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis.getView()._countItemEvent(type, 1);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis.getView()._countItemEvent(type, -1);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\t_events: {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t\t},\n\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {},\n\t\t\t\tonError: {}\n\t\t\t},\n\t\t\tstatics: {\n\t\t\t\t_itemHandlers: handlers\n\t\t\t}\n\t\t}\n\t);\n}, {\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project,\n\t\t\tsettings = paper.settings;\n\t\tthis._id = internal ? null : UID.get();\n\t\tthis._parent = this._index = null;\n\t\tthis._applyMatrix = this._canApplyMatrix && settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (internal || hasProps && props.insert == false\n\t\t\t|| !settings.insertItems && !(hasProps && props.insert === true)) {\n\t\t\tthis._setProject(project);\n\t\t} else {\n\t\t\t(hasProps && props.parent || project)\n\t\t\t\t\t._insertItem(undefined, this, true);\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT) {\n\t\t\tthis.set(props, {\n\t\t\t\tinternal: true, insert: true, project: true, parent: true\n\t\t\t});\n\t\t}\n\t\treturn hasProps;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._symbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project)\n\t\t\tproject._changed(flags, this);\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar owner = this._getOwner();\n\t\tif (name && owner) {\n\t\t\tvar children = owner._children,\n\t\t\t\tnamedChildren = owner._namedChildren;\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tif (!(name in children))\n\t\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tkey = '_' + name,\n\t\t\tflags = {\n\t\t\t\tlocked: 128,\n\t\t\t\tvisible: 137\n\t\t\t};\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[key];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[key]) {\n\t\t\t\tthis[key] = value;\n\t\t\t\tthis._changed(flags[name] || 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\tgetSelection: function() {\n\t\treturn this._selection;\n\t},\n\n\tsetSelection: function(selection) {\n\t\tif (selection !== this._selection) {\n\t\t\tthis._selection = selection;\n\t\t\tvar project = this._project;\n\t\t\tif (project) {\n\t\t\t\tproject._updateSelection(this);\n\t\t\t\tthis._changed(129);\n\t\t\t}\n\t\t}\n\t},\n\n\t_changeSelection: function(flag, selected) {\n\t\tvar selection = this._selection;\n\t\tthis.setSelection(selected ? selection | flag : selection & ~flag);\n\t},\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn !!(this._selection & 1);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tthis._changeSelection(1, selected);\n\t},\n\n\tisFullySelected: function() {\n\t\tvar children = this._children,\n\t\t\tselected = !!(this._selection & 1);\n\t\tif (children && selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis._changeSelection(1, selected);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function() {\n\t\tvar pivot = this._pivot;\n\t\treturn pivot\n\t\t\t\t? new LinkedPoint(pivot.x, pivot.y, this, 'setPivot')\n\t\t\t\t: null;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t}\n}, Base.each({\n\t\tgetStrokeBounds: { stroke: true },\n\t\tgetHandleBounds: { handle: true },\n\t\tgetInternalBounds: { internal: true }\n\t},\n\tfunction(options, key) {\n\t\tthis[key] = function(matrix) {\n\t\t\treturn this.getBounds(matrix, options);\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\tgetBounds: function(matrix, options) {\n\t\tvar hasMatrix = options || matrix instanceof Matrix,\n\t\t\topts = Base.set({}, hasMatrix ? options : matrix,\n\t\t\t\t\tthis._boundsOptions);\n\t\tif (!opts.stroke || this.getStrokeScaling())\n\t\t\topts.cacheItem = this;\n\t\tvar rect = this._getCachedBounds(hasMatrix && matrix, opts).rect;\n\t\treturn !arguments.length\n\t\t\t\t? new LinkedRectangle(rect.x, rect.y, rect.width, rect.height,\n\t\t\t\t\tthis, 'setBounds')\n\t\t\t\t: rect;\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\t_matrix = this._matrix,\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tif (!_matrix.isInvertible()) {\n\t\t\t\t_matrix.set(_matrix._backup\n\t\t\t\t\t\t|| new Matrix().translate(_matrix.getTranslation()));\n\t\t\t\tbounds = this.getBounds();\n\t\t\t}\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width !== 0 ? rect.width / bounds.width : 0,\n\t\t\t\t\tbounds.height !== 0 ? rect.height / bounds.height : 0);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar children = this._children;\n\t\tif (!children || !children.length)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, options.cacheItem);\n\t\treturn Item._getBounds(children, matrix, options);\n\t},\n\n\t_getBoundsCacheKey: function(options, internal) {\n\t\treturn [\n\t\t\toptions.stroke ? 1 : 0,\n\t\t\toptions.handle ? 1 : 0,\n\t\t\tinternal ? 1 : 0\n\t\t].join('');\n\t},\n\n\t_getCachedBounds: function(matrix, options, noInternal) {\n\t\tmatrix = matrix && matrix._orNullIfIdentity();\n\t\tvar internal = options.internal && !noInternal,\n\t\t\tcacheItem = options.cacheItem,\n\t\t\t_matrix = internal ? null : this._matrix._orNullIfIdentity(),\n\t\t\tcacheKey = cacheItem && (!matrix || matrix.equals(_matrix))\n\t\t\t\t&& this._getBoundsCacheKey(options, internal),\n\t\t\tbounds = this._bounds;\n\t\tItem._updateBoundsCache(this._parent || this._symbol, cacheItem);\n\t\tif (cacheKey && bounds && cacheKey in bounds) {\n\t\t\tvar cached = bounds[cacheKey];\n\t\t\treturn {\n\t\t\t\trect: cached.rect.clone(),\n\t\t\t\tnonscaling: cached.nonscaling\n\t\t\t};\n\t\t}\n\t\tvar res = this._getBounds(matrix || _matrix, options),\n\t\t\trect = res.rect || res,\n\t\t\tstyle = this._style,\n\t\t\tnonscaling = res.nonscaling || style.hasStroke()\n\t\t\t\t&& !style.getStrokeScaling();\n\t\tif (cacheKey) {\n\t\t\tif (!bounds) {\n\t\t\t\tthis._bounds = bounds = {};\n\t\t\t}\n\t\t\tvar cached = bounds[cacheKey] = {\n\t\t\t\trect: rect.clone(),\n\t\t\t\tnonscaling: nonscaling,\n\t\t\t\tinternal: internal\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\trect: rect,\n\t\t\tnonscaling: nonscaling\n\t\t};\n\t},\n\n\t_getStrokeMatrix: function(matrix, options) {\n\t\tvar parent = this.getStrokeScaling() ? null\n\t\t\t\t: options && options.internal ? this\n\t\t\t\t\t: this._parent || this._symbol && this._symbol._item,\n\t\t\tmx = parent ? parent.getViewMatrix().invert() : matrix;\n\t\treturn mx && mx._shiftless();\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent && item) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_getBounds: function(items, matrix, options) {\n\t\t\tvar x1 = Infinity,\n\t\t\t\tx2 = -x1,\n\t\t\t\ty1 = x1,\n\t\t\t\ty2 = x2,\n\t\t\t\tnonscaling = false;\n\t\t\toptions = options || {};\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (item._visible && !item.isEmpty()) {\n\t\t\t\t\tvar bounds = item._getCachedBounds(\n\t\t\t\t\t\tmatrix && matrix.appended(item._matrix), options, true),\n\t\t\t\t\t\trect = bounds.rect;\n\t\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t\t\tif (bounds.nonscaling)\n\t\t\t\t\t\tnonscaling = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\trect: isFinite(x1)\n\t\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t\t: new Rectangle(),\n\t\t\t\tnonscaling: nonscaling\n\t\t\t};\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._applyMatrix\n\t\t\t? null\n\t\t\t: this._decomposed || (this._decomposed = this._matrix.decompose());\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decompose();\n\t\treturn decomposed ? decomposed.rotation : 0;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tif (decomposed) {\n\t\t\t\tdecomposed.rotation = rotation;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetScaling: function() {\n\t\tvar decomposed = this._decompose(),\n\t\t\ts = decomposed && decomposed.scaling;\n\t\treturn new LinkedPoint(s ? s.x : 1, s ? s.y : 1, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling(),\n\t\t\tscaling = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tif (current && scaling && !current.equals(scaling)) {\n\t\t\tvar rotation = this.getRotation(),\n\t\t\t\tdecomposed = this._decomposed,\n\t\t\t\tmatrix = new Matrix(),\n\t\t\t\tcenter = this.getPosition(true);\n\t\t\tmatrix.translate(center);\n\t\t\tif (rotation)\n\t\t\t\tmatrix.rotate(rotation);\n\t\t\tmatrix.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tif (rotation)\n\t\t\t\tmatrix.rotate(-rotation);\n\t\t\tmatrix.translate(center.negate());\n\t\t\tthis.transform(matrix);\n\t\t\tif (decomposed) {\n\t\t\t\tdecomposed.scaling = scaling;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.prepend(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetViewMatrix: function() {\n\t\treturn this.getGlobalMatrix().prepend(this.getView()._matrix);\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project._view;\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\t_getOwner: '#getParent',\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner && owner._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner && owner._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(options) {\n\t\tvar copy = new this.constructor(Item.NO_INSERT),\n\t\t\tchildren = this._children,\n\t\t\tinsert = Base.pick(options ? options.insert : undefined,\n\t\t\t\t\toptions === undefined || options === true),\n\t\t\tdeep = Base.pick(options ? options.deep : undefined, true);\n\t\tif (children)\n\t\t\tcopy.copyAttributes(this);\n\t\tif (!children || deep)\n\t\t\tcopy.copyContent(this);\n\t\tif (!children)\n\t\t\tcopy.copyAttributes(this);\n\t\tif (insert)\n\t\t\tcopy.insertAbove(this);\n\t\tvar name = this._name,\n\t\t\tparent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\tif (name !== orig)\n\t\t\t\tcopy.setName(name);\n\t\t}\n\t\treturn copy;\n\t},\n\n\tcopyContent: function(source) {\n\t\tvar children = source._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tthis.addChild(children[i].clone(false), true);\n\t\t}\n\t},\n\n\tcopyAttributes: function(source, excludeMatrix) {\n\t\tthis.setStyle(source._style);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (source.hasOwnProperty(key))\n\t\t\t\tthis[key] = source[key];\n\t\t}\n\t\tif (!excludeMatrix)\n\t\t\tthis._matrix.set(source._matrix, true);\n\t\tthis.setApplyMatrix(source._applyMatrix);\n\t\tthis.setPivot(source._pivot);\n\t\tthis.setSelection(source._selection);\n\t\tvar data = source._data,\n\t\t\tname = source._name;\n\t\tthis._data = data ? Base.clone(data) : null;\n\t\tif (name)\n\t\t\tthis.setName(name);\n\t},\n\n\trasterize: function(resolution, insert) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\tif (!size.isZero()) {\n\t\t\tvar canvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\t\tctx = canvas.getContext('2d'),\n\t\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\t\tctx.save();\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\t\tctx.restore();\n\t\t\traster.setCanvas(canvas);\n\t\t}\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\tif (insert === undefined || insert)\n\t\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\t\tif (children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t_matrix, true).length > 0;\n\t}\n},\nnew function() {\n\tfunction hitTest() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(arguments));\n\t}\n\n\tfunction hitTestAll() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(arguments),\n\t\t\tall = [];\n\t\tthis._hitTest(point, Base.set({ all: all }, options));\n\t\treturn all;\n\t}\n\n\tfunction hitTestChildren(point, options, viewMatrix, _exclude) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\t\tvar child = children[i];\n\t\t\t\tvar res = child !== _exclude && child._hitTest(point, options,\n\t\t\t\t\t\tviewMatrix);\n\t\t\t\tif (res && !options.all)\n\t\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tProject.inject({\n\t\thitTest: hitTest,\n\t\thitTestAll: hitTestAll,\n\t\t_hitTest: hitTestChildren\n\t});\n\n\treturn {\n\t\thitTest: hitTest,\n\t\thitTestAll: hitTestAll,\n\t\t_hitTestChildren: hitTestChildren,\n\t};\n}, {\n\n\t_hitTest: function(point, options, parentViewMatrix) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar matrix = this._matrix,\n\t\t\tviewMatrix = parentViewMatrix\n\t\t\t\t\t? parentViewMatrix.appended(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().prepend(this.getView()._matrix),\n\t\t\ttolerance = Math.max(options.tolerance, 1e-12),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\tPath._getStrokePadding(tolerance,\n\t\t\t\t\t\tmatrix._shiftless().invert()));\n\t\tpoint = matrix._inverseTransform(point);\n\t\tif (!point || !this._children &&\n\t\t\t!this.getBounds({ internal: true, stroke: true, handle: true })\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this.isSelected()\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tmatch = options.match,\n\t\t\tthat = this,\n\t\t\tbounds,\n\t\t\tres;\n\n\t\tfunction filter(hit) {\n\t\t\tif (hit && match && !match(hit))\n\t\t\t\thit = null;\n\t\t\tif (hit && options.all)\n\t\t\t\toptions.all.push(hit);\n\t\t\treturn hit;\n\t\t}\n\n\t\tfunction checkPoint(type, part) {\n\t\t\tvar pt = part ? bounds['get' + part]() : that.getPosition();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1) {\n\t\t\t\treturn new HitResult(type, that, {\n\t\t\t\t\tname: part ? Base.hyphenate(part) : type,\n\t\t\t\t\tpoint: pt\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar checkPosition = options.position,\n\t\t\tcheckCenter = options.center,\n\t\t\tcheckBounds = options.bounds;\n\t\tif (checkSelf && this._parent\n\t\t\t\t&& (checkPosition || checkCenter || checkBounds)) {\n\t\t\tif (checkCenter || checkBounds) {\n\t\t\t\tbounds = this.getInternalBounds();\n\t\t\t}\n\t\t\tres = checkPosition && checkPoint('position') ||\n\t\t\t\t\tcheckCenter && checkPoint('center', 'Center');\n\t\t\tif (!res && checkBounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++) {\n\t\t\t\t\tres = checkPoint('bounds', points[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tres = filter(res);\n\t\t}\n\n\t\tif (!res) {\n\t\t\tres = this._hitTestChildren(point, options, viewMatrix)\n\t\t\t\t|| checkSelf\n\t\t\t\t\t&& filter(this._hitTestSelf(point, options, viewMatrix,\n\t\t\t\t\t\tthis.getStrokeScaling() ? null\n\t\t\t\t\t\t\t: viewMatrix._shiftless().invert()))\n\t\t\t\t|| null;\n\t\t}\n\t\tif (res && res.point) {\n\t\t\tres.point = matrix.transform(res.point);\n\t\t}\n\t\treturn res;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else if (name === 'match') {\n\t\t\treturn compare(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (name === 'class') {\n\t\t\t\tif (typeof compare === 'function')\n\t\t\t\t\treturn this instanceof compare;\n\t\t\t\tvalue = this._class;\n\t\t\t}\n\t\t\tif (typeof compare === 'function') {\n\t\t\t\treturn !!compare(value);\n\t\t\t} else if (compare) {\n\t\t\t\tif (compare.test) {\n\t\t\t\t\treturn compare.test(value);\n\t\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\t\treturn matchObject(compare, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Base.equals(value, compare);\n\t\t}\n\t},\n\n\tgetItems: function(options) {\n\t\treturn Item._getItems(this, options, this._matrix);\n\t},\n\n\tgetItem: function(options) {\n\t\treturn Item._getItems(this, options, this._matrix, null, true)[0]\n\t\t\t\t|| null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(item, options, matrix, param, firstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar obj = typeof options === 'object' && options,\n\t\t\t\t\toverlapping = obj && obj.overlapping,\n\t\t\t\t\tinside = obj && obj.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\trecursive: obj && obj.recursive !== false,\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (obj) {\n\t\t\t\t\toptions = Base.filter({}, options, {\n\t\t\t\t\t\trecursive: true, inside: true, overlapping: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar children = item._children,\n\t\t\t\titems = param.items,\n\t\t\t\trect = param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.appended(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(rect.contains(bounds)\n\t\t\t\t\t\t\t|| param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(options)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (param.recursive !== false) {\n\t\t\t\t\t_getItems(child, options, childMatrix, param, firstOnly);\n\t\t\t\t}\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this ? this.addChild(res) : res;\n\t},\n\n\taddChild: function(item) {\n\t\treturn this.insertChild(undefined, item);\n\t},\n\n\tinsertChild: function(index, item) {\n\t\tvar res = item ? this.insertChildren(index, [item]) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items) {\n\t\treturn this.insertChildren(this._children.length, items);\n\t},\n\n\tinsertChildren: function(index, items) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Base.slice(items);\n\t\t\tvar inserted = {};\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i],\n\t\t\t\t\tid = item && item._id;\n\t\t\t\tif (!item || inserted[id]) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\titem._remove(false, true);\n\t\t\t\t\tinserted[id] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i],\n\t\t\t\t\tname = item._name;\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(project, true);\n\t\t\t\tif (name)\n\t\t\t\t\titem.setName(name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\titem._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertItem: '#insertChild',\n\n\t_insertAt: function(item, offset) {\n\t\tvar owner = item && item._getOwner(),\n\t\t\tres = item !== this && owner ? this : null;\n\t\tif (res) {\n\t\t\tres._remove(false, true);\n\t\t\towner._insertItem(item._index + offset, res);\n\t\t}\n\t\treturn res;\n\t},\n\n\tinsertAbove: function(item) {\n\t\treturn this._insertAt(item, 1);\n\t},\n\n\tinsertBelow: function(item) {\n\t\treturn this._insertAt(item, 0);\n\t},\n\n\tsendToBack: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner ? owner._insertItem(0, this) : null;\n\t},\n\n\tbringToFront: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner ? owner._insertItem(undefined, this) : null;\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\taddTo: function(owner) {\n\t\treturn owner._insertItem(undefined, this);\n\t},\n\n\tcopyTo: function(owner) {\n\t\treturn this.clone(false).addTo(owner);\n\t},\n\n\treduce: function(options) {\n\t\tvar children = this._children;\n\t\tif (children && children.length === 1) {\n\t\t\tvar child = children[0].reduce(options);\n\t\t\tif (this._parent) {\n\t\t\t\tchild.insertAbove(this);\n\t\t\t\tthis.remove();\n\t\t\t} else {\n\t\t\t\tchild.remove();\n\t\t\t}\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar owner = this._getOwner();\n\t\tif (owner) {\n\t\t\tvar children = owner._children,\n\t\t\t\tnamedChildren = owner._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[0];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar owner = this._getOwner(),\n\t\t\tproject = this._project,\n\t\t\tindex = this._index;\n\t\tif (owner) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (index != null) {\n\t\t\t\tif (project._activeLayer === this)\n\t\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\t\tBase.splice(owner._children, null, index, 1);\n\t\t\t}\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent)\n\t\t\t\towner._changed(11, this);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(start, end) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tstart = start || 0;\n\t\tend = Base.pick(end, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, start, end - start);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\tvar children = this._children;\n\t\treturn !children || !children.length;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent === item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisSibling: function(item) {\n\t\treturn this._parent === item._parent;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n}, Base.each(['rotate', 'scale', 'shear', 'skew'], function(key) {\n\tvar rotate = key === 'rotate';\n\tthis[key] = function() {\n\t\tvar value = (rotate ? Base : Point).read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[key](value,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tvar _matrix = this._matrix,\n\t\t\ttransform = matrix && !matrix.isIdentity(),\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || transform)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!transform && !applyMatrix)\n\t\t\treturn this;\n\t\tif (transform) {\n\t\t\tif (!matrix.isInvertible() && _matrix.isInvertible())\n\t\t\t\t_matrix._backup = _matrix.getValues();\n\t\t\t_matrix.prepend(matrix, true);\n\t\t\tvar style = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(matrix);\n\t\t}\n\t\tif (applyMatrix && (applyMatrix = this._transformContent(_matrix,\n\t\t\t\t_applyRecursively, _setApplyMatrix))) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tif (transform || applyMatrix) {\n\t\t\tthis._changed(9);\n\t\t}\n\t\tvar decomp = transform && bounds && matrix.decompose();\n\t\tif (decomp && decomp.skewing.isZero() && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar cache = bounds[key];\n\t\t\t\tif (cache.nonscaling) {\n\t\t\t\t\tdelete bounds[key];\n\t\t\t\t} else if (applyMatrix || !cache.internal) {\n\t\t\t\t\tvar rect = cache.rect;\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._bounds = bounds;\n\t\t\tvar cached = bounds[this._getBoundsCacheKey(\n\t\t\t\t\tthis._boundsOptions || {})];\n\t\t\tif (cached) {\n\t\t\t\tthis._position = cached.rect.getCenter(true);\n\t\t\t}\n\t\t} else if (transform && position && this._pivot) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t}\n}), {\n\n\t_setStyles: function(ctx, param, viewMatrix) {\n\t\tvar style = this._style,\n\t\t\tmatrix = this._matrix;\n\t\tif (style.hasFill()) {\n\t\t\tctx.fillStyle = style.getFillColor().toCanvasStyle(ctx, matrix);\n\t\t}\n\t\tif (style.hasStroke()) {\n\t\t\tctx.strokeStyle = style.getStrokeColor().toCanvasStyle(ctx, matrix);\n\t\t\tctx.lineWidth = style.getStrokeWidth();\n\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\tif (strokeJoin)\n\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\tif (strokeCap)\n\t\t\t\tctx.lineCap = strokeCap;\n\t\t\tif (miterLimit)\n\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\tif (paper.support.nativeDash) {\n\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style.hasShadow()) {\n\t\t\tvar pixelRatio = param.pixelRatio || 1,\n\t\t\t\tmx = viewMatrix._shiftless().prepend(\n\t\t\t\t\tnew Matrix().scale(pixelRatio, pixelRatio)),\n\t\t\t\tblur = mx.transform(new Point(style.getShadowBlur(), 0)),\n\t\t\t\toffset = mx.transform(this.getShadowOffset());\n\t\t\tctx.shadowColor = style.getShadowColor().toCanvasStyle(ctx);\n\t\t\tctx.shadowBlur = blur.getLength();\n\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\tctx.shadowOffsetY = offset.y;\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].appended(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tviewMatrix = viewMatrix ? viewMatrix.appended(globalMatrix)\n\t\t\t\t: globalMatrix;\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(viewMatrix);\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.appended(matrix)\n\t\t\t\t: this._canScaleStroke && !this.getStrokeScaling(true)\n\t\t\t\t\t&& viewMatrix,\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform) {\n\t\t\t(direct ? matrix : viewMatrix).applyToContext(ctx);\n\t\t}\n\t\tif (clip) {\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, viewMatrix, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectionItems, updateVersion) {\n\t\tvar selection = this._selection,\n\t\t\titemSelected = selection & 1,\n\t\t\tboundsSelected = selection & 2\n\t\t\t\t\t|| itemSelected && this._selectBounds,\n\t\t\tpositionSelected = selection & 4;\n\t\tif (!this._drawSelected)\n\t\t\titemSelected = false;\n\t\tif ((itemSelected || boundsSelected || positionSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar layer,\n\t\t\t\tcolor = this.getSelectedColor(true) || (layer = this.getLayer())\n\t\t\t\t\t&& layer.getSelectedColor(true),\n\t\t\t\tmx = matrix.appended(this.getGlobalMatrix(true)),\n\t\t\t\thalf = size / 2;\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (itemSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectionItems);\n\t\t\tif (positionSelected) {\n\t\t\t\tvar point = this.getPosition(true),\n\t\t\t\t\tx = point.x,\n\t\t\t\t\ty = point.y;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(x, y, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.stroke();\n\t\t\t\tvar deltas = [[0, -1], [1, 0], [0, 1], [-1, 0]],\n\t\t\t\t\tstart = half,\n\t\t\t\t\tend = size + 1;\n\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\tvar delta = deltas[i],\n\t\t\t\t\t\tdx = delta[0],\n\t\t\t\t\t\tdy = delta[1];\n\t\t\t\t\tctx.moveTo(x + dx * start, y + dy * start);\n\t\t\t\t\tctx.lineTo(x + dx * end, y + dy * end);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (boundsSelected) {\n\t\t\t\tvar coords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\t\tctx[!i ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(key) {\n\tthis['removeOn' + Base.capitalize(key)] = function() {\n\t\tvar hash = {};\n\t\thash[key] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectBounds: false,\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tif (children[i]._clipMask) {\n\t\t\t\t\tclipItem = children[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_getBounds: function _getBounds(matrix, options) {\n\t\tvar clipItem = this._getClipItem();\n\t\treturn clipItem\n\t\t\t? clipItem._getCachedBounds(\n\t\t\t\tmatrix && matrix.appended(clipItem._matrix),\n\t\t\t\tBase.set({}, options, { stroke: false }))\n\t\t\t: _getBounds.base.call(this, matrix, options);\n\t},\n\n\t_hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n\t\tvar clipItem = this._getClipItem();\n\t\treturn (!clipItem || clipItem.contains(point))\n\t\t\t\t&& _hitTestChildren.base.call(this, point, options, viewMatrix,\n\t\t\t\t\tclipItem);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem();\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tctx.beginPath();\n\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar item = children[i];\n\t\t\tif (item !== clipItem)\n\t\t\t\titem.draw(ctx, param);\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer() {\n\t\tGroup.apply(this, arguments);\n\t},\n\n\t_getOwner: function() {\n\t\treturn this._parent || this._index != null && this._project;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_hitTestSelf: function() {\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_canScaleStroke: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props, point) {\n\t\tthis._initialize(props, point);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setType(source._type);\n\t\tthis.setSize(source._size);\n\t\tthis.setRadius(source._radius);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tthis._radius.set(Size.min(this._radius, size.divide(2)));\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius._set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size._set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size._set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size._set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.copyAttributes(this);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\tif (insert === undefined || insert)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\ttoShape: '#clone',\n\n\t_asPathItem: function() {\n\t\treturn this.toPath(false);\n\t},\n\n\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\tstyle = this._style,\n\t\t\tstrokeWidth = options.stroke && style.hasStroke()\n\t\t\t\t\t&& style.getStrokeWidth();\n\t\tif (matrix)\n\t\t\trect = matrix._transformBounds(rect);\n\t\treturn strokeWidth\n\t\t\t\t? rect.expand(Path._getStrokePadding(strokeWidth,\n\t\t\t\t\tthis._getStrokeMatrix(matrix, options)))\n\t\t\t\t: rect;\n\t}\n},\nnew function() {\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var q = 1; q <= 4; q++) {\n\t\t\t\tvar dir = new Point(q > 1 && q < 4 ? -1 : 1, q > 2 ? -1 : 1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(\n\t\t\t\t\t\t\texpand ? corner.add(dir.multiply(expand)) : corner,\n\t\t\t\t\t\t\tcenter);\n\t\t\t\tif (rect.contains(point))\n\t\t\t\t\treturn { point: center, quadrant: q };\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction isOnEllipseStroke(point, radius, padding, quadrant) {\n\t\tvar vector = point.divide(radius);\n\t\treturn (!quadrant || vector.isInQuadrant(quadrant)) &&\n\t\t\t\tvector.subtract(vector.normalize()).multiply(radius)\n\t\t\t\t\t.divide(padding).length <= 1;\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center.point).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options, viewMatrix,\n\t\t\t\tstrokeMatrix) {\n\t\t\tvar hit = false,\n\t\t\t\tstyle = this._style,\n\t\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\t\thitFill = options.fill && style.hasFill();\n\t\t\tif (hitStroke || hitFill) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeRadius = hitStroke ? style.getStrokeWidth() / 2 : 0,\n\t\t\t\t\tstrokePadding = options._tolerancePadding.add(\n\t\t\t\t\t\tPath._getStrokePadding(strokeRadius,\n\t\t\t\t\t\t\t!style.getStrokeScaling() && strokeMatrix));\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar padding = strokePadding.multiply(2),\n\t\t\t\t\t\tcenter = getCornerCenter(this, point, padding);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\thit = isOnEllipseStroke(point.subtract(center.point),\n\t\t\t\t\t\t\t\tradius, strokePadding, center.quadrant);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(padding),\n\t\t\t\t\t\t\tinner = rect.expand(padding.negate());\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thit = isOnEllipseStroke(point, radius, strokePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit ? new HitResult(hitStroke ? 'stroke' : 'fill', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args), point);\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item;\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsOptions: { stroke: false, handle: false },\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\t_prioritize: ['crossOrigin'],\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tvar image = typeof object === 'string'\n\t\t\t\t\t? document.getElementById(object) : object;\n\t\t\tif (image) {\n\t\t\t\tthis.setImage(image);\n\t\t\t} else {\n\t\t\t\tthis.setSource(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tcopyContent: function(source) {\n\t\tvar image = source._image,\n\t\t\tcanvas = source._canvas;\n\t\tif (image) {\n\t\t\tthis._setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(source._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tthis._setImage(copyCanvas);\n\t\t}\n\t\tthis._crossOrigin = source._crossOrigin;\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis._setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tgetLoaded: function() {\n\t\treturn this._loaded;\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tvar that = this;\n\n\t\tfunction emit(event) {\n\t\t\tvar view = that.getView(),\n\t\t\t\ttype = event && event.type || 'load';\n\t\t\tif (view && that.responds(type)) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.emit(type, new Event(event));\n\t\t\t}\n\t\t}\n\n\t\tthis._setImage(image);\n\t\tif (this._loaded) {\n\t\t\tsetTimeout(emit, 0);\n\t\t} else if (image) {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: function(event) {\n\t\t\t\t\tthat._setImage(image);\n\t\t\t\t\temit(event);\n\t\t\t\t},\n\t\t\t\terror: emit\n\t\t\t});\n\t\t}\n\t},\n\n\t_setImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = !!(image && image.src && image.complete);\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\tvar image = this._image;\n\t\treturn image && image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar image = new self.Image(),\n\t\t\tcrossOrigin = this._crossOrigin;\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\timage.src = src;\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\tvar image = this._image;\n\t\treturn image && image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tvar image = this._image;\n\t\tif (image)\n\t\t\timage.crossOrigin = crossOrigin;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster._setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.prepend(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar image = this._image,\n\t\t\tsrc = image && image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (typeof object === 'object') {\n\t\t\tif ('width' in object) {\n\t\t\t\tbounds = new Rectangle(object);\n\t\t\t} else if ('x' in object) {\n\t\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t\t}\n\t\t}\n\t\tif (!bounds)\n\t\t\treturn null;\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar SymbolItem = Item.extend({\n\t_class: 'SymbolItem',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsOptions: { stroke: true },\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function SymbolItem(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setDefinition(arg0 instanceof SymbolDefinition ?\n\t\t\t\t\targ0 : new SymbolDefinition(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._definition === item._definition;\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setDefinition(source._definition);\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(definition) {\n\t\tthis._definition = definition;\n\t\tthis._changed(9);\n\t},\n\n\tgetSymbol: '#getDefinition',\n\tsetSymbol: '#setDefinition',\n\n\tisEmpty: function() {\n\t\treturn this._definition._item.isEmpty();\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar item = this._definition._item;\n\t\treturn item._getCachedBounds(item._matrix.prepended(matrix), options);\n\t},\n\n\t_hitTestSelf: function(point, options, viewMatrix) {\n\t\tvar res = this._definition._item._hitTest(point, options, viewMatrix);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis._definition._item.draw(ctx, param);\n\t}\n\n});\n\nvar SymbolDefinition = Base.extend({\n\t_class: 'SymbolDefinition',\n\n\tinitialize: function SymbolDefinition(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tif (item)\n\t\t\tthis.setItem(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._item],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8)\n\t\t\tItem._clearBoundsCache(this);\n\t\tif (flags & 1)\n\t\t\tthis.project._changed(flags);\n\t},\n\n\tgetItem: function() {\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item, _dontCenter) {\n\t\tif (item._symbol)\n\t\t\titem = item.clone();\n\t\tif (this._item)\n\t\t\tthis._item._symbol = null;\n\t\tthis._item = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._symbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tgetDefinition: '#getItem',\n\tsetDefinition: '#setItem',\n\n\tplace: function(position) {\n\t\treturn new SymbolItem(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new SymbolDefinition(this._item.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this._item.equals(symbol._item)\n\t\t\t\t|| false;\n\t}\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values)\n\t\t\tthis.inject(values);\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(args) {\n\t\t\tvar options = args && Base.read(args);\n\t\t\treturn Base.set({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tposition: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\t_selection: 0,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut, selection;\n\t\tif (count > 0) {\n\t\t\tif (arg0 == null || typeof arg0 === 'object') {\n\t\t\t\tif (count === 1 && arg0 && 'point' in arg0) {\n\t\t\t\t\tpoint = arg0.point;\n\t\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t\t\tselection = arg0.selection;\n\t\t\t\t} else {\n\t\t\t\t\tpoint = arg0;\n\t\t\t\t\thandleIn = arg1;\n\t\t\t\t\thandleOut = arg2;\n\t\t\t\t\tselection = arg3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpoint = [ arg0, arg1 ];\n\t\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t\t}\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t\tif (selection)\n\t\t\tthis.setSelection(selection);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar point = this._point,\n\t\t\tselection = this._selection,\n\t\t\tobj = selection || this.hasHandles()\n\t\t\t\t\t? [point, this._handleIn, this._handleOut]\n\t\t\t\t\t: point;\n\t\tif (selection)\n\t\t\tobj.push(selection);\n\t\treturn Base.serialize(obj, options, true, dictionary);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tthis._point.set(Point.read(arguments));\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tthis._handleIn.set(Point.read(arguments));\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tthis._handleOut.set(Point.read(arguments));\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t},\n\n\tisSmooth: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut;\n\t\treturn !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t&& handleIn.isCollinear(handleOut);\n\t},\n\n\tclearHandles: function() {\n\t\tthis._handleIn._set(0, 0);\n\t\tthis._handleOut._set(0, 0);\n\t},\n\n\tgetSelection: function() {\n\t\treturn this._selection;\n\t},\n\n\tsetSelection: function(selection) {\n\t\tvar oldSelection = this._selection,\n\t\t\tpath = this._path;\n\t\tthis._selection = selection = selection || 0;\n\t\tif (path && selection !== oldSelection) {\n\t\t\tpath._updateSelection(this, oldSelection, selection);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\t_changeSelection: function(flag, selected) {\n\t\tvar selection = this._selection;\n\t\tthis.setSelection(selected ? selection | flag : selection & ~flag);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._selection & 7);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._changeSelection(7, selected);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tsmooth: function(options, _first, _last) {\n\t\tvar opts = options || {},\n\t\t\ttype = opts.type,\n\t\t\tfactor = opts.factor,\n\t\t\tprev = this.getPrevious(),\n\t\t\tnext = this.getNext(),\n\t\t\tp0 = (prev || this)._point,\n\t\t\tp1 = this._point,\n\t\t\tp2 = (next || this)._point,\n\t\t\td1 = p0.getDistance(p1),\n\t\t\td2 = p1.getDistance(p2);\n\t\tif (!type || type === 'catmull-rom') {\n\t\t\tvar a = factor === undefined ? 0.5 : factor,\n\t\t\t\td1_a = Math.pow(d1, a),\n\t\t\t\td1_2a = d1_a * d1_a,\n\t\t\t\td2_a = Math.pow(d2, a),\n\t\t\t\td2_2a = d2_a * d2_a;\n\t\t\tif (!_first && prev) {\n\t\t\t\tvar A = 2 * d2_2a + 3 * d2_a * d1_a + d1_2a,\n\t\t\t\t\tN = 3 * d2_a * (d2_a + d1_a);\n\t\t\t\tthis.setHandleIn(N !== 0\n\t\t\t\t\t? new Point(\n\t\t\t\t\t\t(d2_2a * p0._x + A * p1._x - d1_2a * p2._x) / N - p1._x,\n\t\t\t\t\t\t(d2_2a * p0._y + A * p1._y - d1_2a * p2._y) / N - p1._y)\n\t\t\t\t\t: new Point());\n\t\t\t}\n\t\t\tif (!_last && next) {\n\t\t\t\tvar A = 2 * d1_2a + 3 * d1_a * d2_a + d2_2a,\n\t\t\t\t\tN = 3 * d1_a * (d1_a + d2_a);\n\t\t\t\tthis.setHandleOut(N !== 0\n\t\t\t\t\t? new Point(\n\t\t\t\t\t\t(d1_2a * p2._x + A * p1._x - d2_2a * p0._x) / N - p1._x,\n\t\t\t\t\t\t(d1_2a * p2._y + A * p1._y - d2_2a * p0._y) / N - p1._y)\n\t\t\t\t\t: new Point());\n\t\t\t}\n\t\t} else if (type === 'geometric') {\n\t\t\tif (prev && next) {\n\t\t\t\tvar vector = p0.subtract(p2),\n\t\t\t\t\tt = factor === undefined ? 0.4 : factor,\n\t\t\t\t\tk = t * d1 / (d1 + d2);\n\t\t\t\tif (!_first)\n\t\t\t\t\tthis.setHandleIn(vector.multiply(k));\n\t\t\t\tif (!_last)\n\t\t\t\t\tthis.setHandleOut(vector.multiply(k - t));\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error('Smoothing method \\'' + type + '\\' not supported.');\n\t\t}\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn !this._index;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._index === path._segments.length - 1 || false;\n\t},\n\n\treverse: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut,\n\t\t\ttmp = handleIn.clone();\n\t\thandleIn.set(handleOut);\n\t\thandleOut.set(tmp);\n\t},\n\n\treversed: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(from, to, factor) {\n\t\tvar u = 1 - factor,\n\t\t\tv = factor,\n\t\t\tpoint1 = from._point,\n\t\t\tpoint2 = to._point,\n\t\t\thandleIn1 = from._handleIn,\n\t\t\thandleIn2 = to._handleIn,\n\t\t\thandleOut2 = to._handleOut,\n\t\t\thandleOut1 = from._handleOut;\n\t\tthis._point._set(\n\t\t\t\tu * point1._x + v * point2._x,\n\t\t\t\tu * point1._y + v * point2._y, true);\n\t\tthis._handleIn._set(\n\t\t\t\tu * handleIn1._x + v * handleIn2._x,\n\t\t\t\tu * handleIn1._y + v * handleIn2._y, true);\n\t\tthis._handleOut._set(\n\t\t\t\tu * handleOut1._x + v * handleOut2._x,\n\t\t\t\tu * handleOut1._y + v * handleOut2._y, true);\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y,\n\t\t\tselected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\t_set: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this._x) && isZero(this._y);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._owner._selection & this._getSelection());\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner._changeSelection(this._getSelection(), selected);\n\t},\n\n\t_getSelection: function() {\n\t\tvar owner = this._owner;\n\t\treturn this === owner._point ? 1\n\t\t\t: this === owner._handleIn ? 2\n\t\t\t: this === owner._handleOut ? 4\n\t\t\t: 0;\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\tbeans: true,\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length,\n\t\t\tseg1, seg2,\n\t\t\tpoint1, point2,\n\t\t\thandle1, handle2;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tseg1 = arg1;\n\t\t\tseg2 = arg2;\n\t\t} else if (!count) {\n\t\t\tseg1 = new Segment();\n\t\t\tseg2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tif ('segment1' in arg0) {\n\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t} else if ('point1' in arg0) {\n\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\tpoint2 = arg0.point2;\n\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t}\n\t\t} else if (count === 2) {\n\t\t\tseg1 = new Segment(arg0);\n\t\t\tseg2 = new Segment(arg1);\n\t\t} else if (count === 4) {\n\t\t\tpoint1 = arg0;\n\t\t\thandle1 = arg1;\n\t\t\thandle2 = arg2;\n\t\t\tpoint2 = arg3;\n\t\t} else if (count === 8) {\n\t\t\tpoint1 = [arg0, arg1];\n\t\t\tpoint2 = [arg6, arg7];\n\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t}\n\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\toptions, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tclassify: function() {\n\t\treturn Curve.classify(this.getValues());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tthis._segment1._point.set(Point.read(arguments));\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tthis._segment2._point.set(Point.read(arguments));\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tthis._segment1._handleOut.set(Point.read(arguments));\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tthis._segment2._handleIn.set(Point.read(arguments));\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn !this._segment1._index;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t|| false;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t}\n}, {\n\tgetLength: function() {\n\t\tif (this._length == null)\n\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetLine: function() {\n\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tdivideAt: function(location) {\n\t\treturn this.divideAtTime(location && location.curve === this\n\t\t\t\t? location.time : this.getTimeAt(location));\n\t},\n\n\tdivideAtTime: function(time, _setHandles) {\n\t\tvar tMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tres = null;\n\t\tif (time >= tMin && time <= tMax) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), time),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1],\n\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\tseg1 = this._segment1,\n\t\t\t\tseg2 = this._segment2,\n\t\t\t\tpath = this._path;\n\t\t\tif (setHandles) {\n\t\t\t\tseg1._handleOut._set(left[2] - left[0], left[3] - left[1]);\n\t\t\t\tseg2._handleIn._set(right[4] - right[6],right[5] - right[7]);\n\t\t\t}\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\tif (path) {\n\t\t\t\tpath.insert(seg1._index + 1, segment);\n\t\t\t\tres = this.getNext();\n\t\t\t} else {\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tthis._changed();\n\t\t\t\tres = new Curve(segment, seg2);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplitAt: function(location) {\n\t\tvar path = this._path;\n\t\treturn path ? path.splitAt(location) : null;\n\t},\n\n\tsplitAtTime: function(time) {\n\t\treturn this.splitAt(this.getLocationAtTime(time));\n\t},\n\n\tdivide: function(offset, isTime) {\n\t\treturn this.divideAtTime(offset === undefined ? 0.5 : isTime ? offset\n\t\t\t\t: this.getTimeAt(offset));\n\t},\n\n\tsplit: function(offset, isTime) {\n\t\treturn this.splitAtTime(offset === undefined ? 0.5 : isTime ? offset\n\t\t\t\t: this.getTimeAt(offset));\n\t},\n\n\treversed: function() {\n\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t},\n\n\tclearHandles: function() {\n\t\tthis._segment1._handleOut._set(0, 0);\n\t\tthis._segment2._handleIn._set(0, 0);\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix, straight) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tx1 = p1.x, y1 = p1.y,\n\t\t\tx2 = p2.x, y2 = p2.y,\n\t\t\tvalues = straight\n\t\t\t\t? [ x1, y1, x1, y1, x2, y2, x2, y2 ]\n\t\t\t\t: [\n\t\t\t\t\tx1, y1,\n\t\t\t\t\tx1 + h1._x, y1 + h1._y,\n\t\t\t\t\tx2 + h2._x, y2 + h2._y,\n\t\t\t\t\tx2, y2\n\t\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tx4 = u * x0 + t * x1, y4 = u * y0 + t * y1,\n\t\t\tx5 = u * x1 + t * x2, y5 = u * y1 + t * y2,\n\t\t\tx6 = u * x2 + t * x3, y6 = u * y2 + t * y3,\n\t\t\tx7 = u * x4 + t * x5, y7 = u * y4 + t * y5,\n\t\t\tx8 = u * x5 + t * x6, y8 = u * y5 + t * y6,\n\t\t\tx9 = u * x7 + t * x8, y9 = u * y7 + t * y8;\n\t\treturn [\n\t\t\t[x0, y0, x4, y4, x7, y7, x9, y9],\n\t\t\t[x9, y9, x8, y8, x6, y6, x3, y3]\n\t\t];\n\t},\n\n\tgetMonoCurves: function(v, dir) {\n\t\tvar curves = [],\n\t\t\tio = dir ? 0 : 1,\n\t\t\to0 = v[io + 0],\n\t\t\to1 = v[io + 2],\n\t\t\to2 = v[io + 4],\n\t\t\to3 = v[io + 6];\n\t\tif ((o0 >= o1) === (o1 >= o2) && (o1 >= o2) === (o2 >= o3)\n\t\t\t\t|| Curve.isStraight(v)) {\n\t\t\tcurves.push(v);\n\t\t} else {\n\t\t\tvar a = 3 * (o1 - o2) - o0 + o3,\n\t\t\t\tb = 2 * (o0 + o2) - 4 * o1,\n\t\t\t\tc = o1 - o0,\n\t\t\t\ttMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\troots = [],\n\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\tif (!n) {\n\t\t\t\tcurves.push(v);\n\t\t\t} else {\n\t\t\t\troots.sort();\n\t\t\t\tvar t = roots[0],\n\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\tcurves.push(parts[0]);\n\t\t\t\tif (n > 1) {\n\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\tcurves.push(parts[0]);\n\t\t\t\t}\n\t\t\t\tcurves.push(parts[1]);\n\t\t\t}\n\t\t}\n\t\treturn curves;\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar v0 = v[coord],\n\t\t\tv1 = v[coord + 2],\n\t\t\tv2 = v[coord + 4],\n\t\t\tv3 = v[coord + 6],\n\t\t\tres = 0;\n\t\tif (  !(v0 < val && v3 < val && v1 < val && v2 < val ||\n\t\t\t\tv0 > val && v3 > val && v1 > val && v2 > val)) {\n\t\t\tvar c = 3 * (v1 - v0),\n\t\t\t\tb = 3 * (v2 - v1) - c,\n\t\t\t\ta = v3 - v0 - c - b;\n\t\t\tres = Numerical.solveCubic(a, b, c, v0 - val, roots, min, max);\n\t\t}\n\t\treturn res;\n\t},\n\n\tgetTimeOf: function(v, point) {\n\t\tvar p0 = new Point(v[0], v[1]),\n\t\t\tp3 = new Point(v[6], v[7]),\n\t\t\tepsilon = 1e-12,\n\t\t\tgeomEpsilon = 1e-7,\n\t\t\tt = point.isClose(p0, epsilon) ? 0\n\t\t\t  : point.isClose(p3, epsilon) ? 1\n\t\t\t  : null;\n\t\tif (t === null) {\n\t\t\tvar coords = [point.x, point.y],\n\t\t\t\troots = [];\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tvar u = roots[i];\n\t\t\t\t\tif (point.isClose(Curve.getPoint(v, u), geomEpsilon))\n\t\t\t\t\t\treturn u;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn point.isClose(p0, geomEpsilon) ? 0\n\t\t\t : point.isClose(p3, geomEpsilon) ? 1\n\t\t\t : null;\n\t},\n\n\tgetNearestTime: function(v, point) {\n\t\tif (Curve.isStraight(v)) {\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\tvx = x3 - x0, vy = y3 - y0,\n\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\tif (det === 0)\n\t\t\t\treturn 0;\n\t\t\tvar u = ((point.x - x0) * vx + (point.y - y0) * vy) / det;\n\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t : Curve.getTimeOf(v,\n\t\t\t\t\tnew Point(x0 + u * vx, y0 + u * vy));\n\t\t}\n\n\t\tvar count = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 1e-8) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\treturn minT;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tvar flip = from > to;\n\t\tif (flip) {\n\t\t\tvar tmp = from;\n\t\t\tfrom = to;\n\t\t\tto = tmp;\n\t\t}\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn flip\n\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t: v;\n\t},\n\n\tisFlatEnough: function(v, flatness) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\t\t\tux = 3 * x1 - 2 * x0 - x3,\n\t\t\tuy = 3 * y1 - 2 * y0 - y3,\n\t\t\tvx = 3 * x2 - 2 * x3 - x0,\n\t\t\tvy = 3 * y2 - 2 * y3 - y0;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t<= 16 * flatness * flatness;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\treturn 3 * ((y3 - y0) * (x1 + x2) - (x3 - x0) * (y1 + y2)\n\t\t\t\t+ y1 * (x0 - x2) - x1 * (y0 - y2)\n\t\t\t\t+ y3 * (x2 + x0 / 3) - x3 * (y2 + y0 / 3)) / 20;\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\n\t\tpadding /= 2;\n\t\tvar minPad = min[coord] - padding,\n\t\t\tmaxPad = max[coord] + padding;\n\t\tif (    v0 < minPad || v1 < minPad || v2 < minPad || v3 < minPad ||\n\t\t\t\tv0 > maxPad || v1 > maxPad || v2 > maxPad || v3 > maxPad) {\n\t\t\tif (v1 < v0 != v1 < v3 && v2 < v0 != v2 < v3) {\n\t\t\t\tadd(v0, padding);\n\t\t\t\tadd(v3, padding);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\t\t\tc = v1 - v0,\n\t\t\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\t\t\ttMin = 1e-8,\n\t\t\t\t\ttMax = 1 - tMin;\n\t\t\t\tadd(v3, 0);\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tvar t = roots[i],\n\t\t\t\t\t\tu = 1 - t;\n\t\t\t\t\tif (tMin <= t && t <= tMax)\n\t\t\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\t\t\tpadding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t[this._segment1, this._segment2], false, this._path);\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each({\n\tisStraight: function(p1, h1, h2, p2) {\n\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tvar v = p2.subtract(p1);\n\t\t\tif (v.isZero()) {\n\t\t\t\treturn false;\n\t\t\t} else if (v.isCollinear(h1) && v.isCollinear(h2)) {\n\t\t\t\tvar l = new Line(p1, p2),\n\t\t\t\t\tepsilon = 1e-7;\n\t\t\t\tif (l.getDistance(p1.add(h1)) < epsilon &&\n\t\t\t\t\tl.getDistance(p2.add(h2)) < epsilon) {\n\t\t\t\t\tvar div = v.dot(v),\n\t\t\t\t\t\ts1 = v.dot(h1) / div,\n\t\t\t\t\t\ts2 = v.dot(h2) / div;\n\t\t\t\t\treturn s1 >= 0 && s1 <= 1 && s2 <= 0 && s2 >= -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tisLinear: function(p1, h1, h2, p2) {\n\t\tvar third = p2.subtract(p1).divide(3);\n\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t}\n}, function(test, name) {\n\tthis[name] = function(epsilon) {\n\t\tvar seg1 = this._segment1,\n\t\t\tseg2 = this._segment2;\n\t\treturn test(seg1._point, seg1._handleOut, seg2._handleIn, seg2._point,\n\t\t\t\tepsilon);\n\t};\n\n\tthis.statics[name] = function(v, epsilon) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\treturn test(\n\t\t\t\tnew Point(x0, y0),\n\t\t\t\tnew Point(v[2] - x0, v[3] - y0),\n\t\t\t\tnew Point(v[4] - x3, v[5] - y3),\n\t\t\t\tnew Point(x3, y3), epsilon);\n\t};\n}, {\n\tstatics: {},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\thasLength: function(epsilon) {\n\t\treturn (!this.getPoint1().equals(this.getPoint2()) || this.hasHandles())\n\t\t\t\t&& this.getLength() > (epsilon || 0);\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t},\n\n\tisHorizontal: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAtTime(0.5).y)\n\t\t\t\t< 1e-8;\n\t},\n\n\tisVertical: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAtTime(0.5).x)\n\t\t\t\t< 1e-8;\n\t}\n}), {\n\tbeans: false,\n\n\tgetLocationAt: function(offset, _isTime) {\n\t\treturn this.getLocationAtTime(\n\t\t\t\t_isTime ? offset : this.getTimeAt(offset));\n\t},\n\n\tgetLocationAtTime: function(t) {\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetTimeAt: function(offset, start) {\n\t\treturn Curve.getTimeAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterAt: '#getTimeAt',\n\n\tgetOffsetAtTime: function(t) {\n\t\treturn this.getPartLength(0, t);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAtTime(this.getTimeOf(Point.read(arguments)));\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetTimeOf: function() {\n\t\treturn Curve.getTimeOf(this.getValues(), Point.read(arguments));\n\t},\n\n\tgetParameterOf: '#getTimeOf',\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tt = Curve.getNearestTime(values, point),\n\t\t\tpt = Curve.getPoint(values, t);\n\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\tvar loc = this.getNearestLocation.apply(this, arguments);\n\t\treturn loc ? loc.getPoint() : loc;\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\t\tfunction(name) {\n\t\t\tthis[name + 'At'] = function(location, _isTime) {\n\t\t\t\tvar values = this.getValues();\n\t\t\t\treturn Curve[name](values, _isTime ? location\n\t\t\t\t\t\t: Curve.getTimeAt(values, location));\n\t\t\t};\n\n\t\t\tthis[name + 'AtTime'] = function(time) {\n\t\t\t\treturn Curve[name](this.getValues(), time);\n\t\t\t};\n\t\t}, {\n\t\t\tstatics: {\n\t\t\t\t_evaluateMethods: methods\n\t\t\t}\n\t\t}\n\t);\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\n\t\t\tax = 9 * (x1 - x2) + 3 * (x3 - x0),\n\t\t\tbx = 6 * (x0 + x2) - 12 * x1,\n\t\t\tcx = 3 * (x1 - x0),\n\n\t\t\tay = 9 * (y1 - y2) + 3 * (y3 - y0),\n\t\t\tby = 6 * (y0 + y2) - 12 * y1,\n\t\t\tcy = 3 * (y1 - y0);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(x1 - x0) && isZero(y1 - y0)) {\n\t\t\tx1 = x0;\n\t\t\ty1 = y0;\n\t\t}\n\t\tif (isZero(x2 - x3) && isZero(y2 - y3)) {\n\t\t\tx2 = x3;\n\t\t\ty2 = y3;\n\t\t}\n\t\tvar cx = 3 * (x1 - x0),\n\t\t\tbx = 3 * (x2 - x1) - cx,\n\t\t\tax = x3 - x0 - cx - bx,\n\t\t\tcy = 3 * (y1 - y0),\n\t\t\tby = 3 * (y2 - y1) - cy,\n\t\t\tay = y3 - y0 - cy - by,\n\t\t\tx, y;\n\t\tif (type === 0) {\n\t\t\tx = t === 0 ? x0 : t === 1 ? x3\n\t\t\t\t\t: ((ax * t + bx) * t + cx) * t + x0;\n\t\t\ty = t === 0 ? y0 : t === 1 ? y3\n\t\t\t\t\t: ((ay * t + by) * t + cy) * t + y0;\n\t\t} else {\n\t\t\tvar tMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tif (t < tMin) {\n\t\t\t\tx = cx;\n\t\t\t\ty = cy;\n\t\t\t} else if (t > tMax) {\n\t\t\t\tx = 3 * (x3 - x2);\n\t\t\t\ty = 3 * (y3 - y2);\n\t\t\t} else {\n\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t}\n\t\t\tif (normalized) {\n\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\tx = x2 - x1;\n\t\t\t\t\ty = y2 - y1;\n\t\t\t\t}\n\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\tif (len) {\n\t\t\t\t\tx /= len;\n\t\t\t\t\ty /= len;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type === 3) {\n\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn { statics: {\n\n\t\tclassify: function(v) {\n\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx1 = v[2], y1 = v[3],\n\t\t\t\tx2 = v[4], y2 = v[5],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\ta1 = x0 * (y3 - y2) + y0 * (x2 - x3) + x3 * y2 - y3 * x2,\n\t\t\t\ta2 = x1 * (y0 - y3) + y1 * (x3 - x0) + x0 * y3 - y0 * x3,\n\t\t\t\ta3 = x2 * (y1 - y0) + y2 * (x0 - x1) + x1 * y0 - y1 * x0,\n\t\t\t\td3 = 3 * a3,\n\t\t\t\td2 = d3 - a2,\n\t\t\t\td1 = d2 - a2 + a1,\n\t\t\t\tl = Math.sqrt(d1 * d1 + d2 * d2 + d3 * d3),\n\t\t\t\ts = l !== 0 ? 1 / l : 0,\n\t\t\t\tisZero = Numerical.isZero,\n\t\t\t\tserpentine = 'serpentine';\n\t\t\td1 *= s;\n\t\t\td2 *= s;\n\t\t\td3 *= s;\n\n\t\t\tfunction type(type, t1, t2) {\n\t\t\t\tvar hasRoots = t1 !== undefined,\n\t\t\t\t\tt1Ok = hasRoots && t1 > 0 && t1 < 1,\n\t\t\t\t\tt2Ok = hasRoots && t2 > 0 && t2 < 1;\n\t\t\t\tif (hasRoots && (!(t1Ok || t2Ok)\n\t\t\t\t\t\t|| type === 'loop' && !(t1Ok && t2Ok))) {\n\t\t\t\t\ttype = 'arch';\n\t\t\t\t\tt1Ok = t2Ok = false;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttype: type,\n\t\t\t\t\troots: t1Ok || t2Ok\n\t\t\t\t\t\t\t? t1Ok && t2Ok\n\t\t\t\t\t\t\t\t? t1 < t2 ? [t1, t2] : [t2, t1]\n\t\t\t\t\t\t\t\t: [t1Ok ? t1 : t2]\n\t\t\t\t\t\t\t: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (isZero(d1)) {\n\t\t\t\treturn isZero(d2)\n\t\t\t\t\t\t? type(isZero(d3) ? 'line' : 'quadratic')\n\t\t\t\t\t\t: type(serpentine, d3 / (3 * d2));\n\t\t\t}\n\t\t\tvar d = 3 * d2 * d2 - 4 * d1 * d3;\n\t\t\tif (isZero(d)) {\n\t\t\t\treturn type('cusp', d2 / (2 * d1));\n\t\t\t}\n\t\t\tvar f1 = d > 0 ? Math.sqrt(d / 3) : Math.sqrt(-d),\n\t\t\t\tf2 = 2 * d1;\n\t\t\treturn type(d > 0 ? serpentine : 'loop',\n\t\t\t\t\t(d2 + f1) / f2,\n\t\t\t\t\t(d2 - f1) / f2);\n\t\t},\n\n\t\tgetLength: function(v, a, b, ds) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tvar c = v;\n\t\t\t\tif (b < 1) {\n\t\t\t\t\tc = Curve.subdivide(c, b)[0];\n\t\t\t\t\ta /= b;\n\t\t\t\t}\n\t\t\t\tif (a > 0) {\n\t\t\t\t\tc = Curve.subdivide(c, a)[1];\n\t\t\t\t}\n\t\t\t\tvar dx = c[6] - c[0],\n\t\t\t\t\tdy = c[7] - c[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\treturn Numerical.integrate(ds || getLengthIntegrand(v), a, b,\n\t\t\t\t\tgetIterations(a, b));\n\t\t},\n\n\t\tgetTimeAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0;\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar abs = Math.abs,\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Curve.getLength(v, a, b, ds),\n\t\t\t\tdiff = abs(offset) - rangeLength;\n\t\t\tif (abs(diff) < epsilon) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (diff > epsilon) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t1e-12);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t},\n\n\t\tgetPeaks: function(v) {\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx1 = v[2], y1 = v[3],\n\t\t\t\tx2 = v[4], y2 = v[5],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\tax =     -x0 + 3 * x1 - 3 * x2 + x3,\n\t\t\t\tbx =  3 * x0 - 6 * x1 + 3 * x2,\n\t\t\t\tcx = -3 * x0 + 3 * x1,\n\t\t\t\tay =     -y0 + 3 * y1 - 3 * y2 + y3,\n\t\t\t\tby =  3 * y0 - 6 * y1 + 3 * y2,\n\t\t\t\tcy = -3 * y0 + 3 * y1,\n\t\t\t\ttMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\troots = [];\n\t\t\tNumerical.solveCubic(\n\t\t\t\t\t9 * (ax * ax + ay * ay),\n\t\t\t\t\t9 * (ax * bx + by * ay),\n\t\t\t\t\t2 * (bx * bx + by * by) + 3 * (cx * ax + cy * ay),\n\t\t\t\t\t(cx * bx + by * cy),\n\t\t\t\t\troots, tMin, tMax);\n\t\t\treturn roots.sort();\n\t\t}\n\t}};\n},\nnew function() {\n\n\tfunction addLocation(locations, include, c1, t1, c2, t2, overlap) {\n\t\tvar excludeStart = !overlap && c1.getPrevious() === c2,\n\t\t\texcludeEnd = !overlap && c1 !== c2 && c1.getNext() === c2,\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 !== null && t1 >= (excludeStart ? tMin : 0) &&\n\t\t\tt1 <= (excludeEnd ? tMax : 1)) {\n\t\t\tif (t2 !== null && t2 >= (excludeEnd ? tMin : 0) &&\n\t\t\t\tt2 <= (excludeStart ? tMax : 1)) {\n\t\t\t\tvar loc1 = new CurveLocation(c1, t1, null, overlap),\n\t\t\t\t\tloc2 = new CurveLocation(c2, t2, null, overlap);\n\t\t\t\tloc1._intersection = loc2;\n\t\t\t\tloc2._intersection = loc1;\n\t\t\t\tif (!include || include(loc1)) {\n\t\t\t\t\tCurveLocation.insert(locations, loc1, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addCurveIntersections(v1, v2, c1, c2, locations, include, flip,\n\t\t\trecursion, calls, tMin, tMax, uMin, uMax) {\n\t\tif (++calls >= 4096 || ++recursion >= 40)\n\t\t\treturn calls;\n\t\tvar fatLineEpsilon = 1e-9,\n\t\t\tq0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\ttop = hull[0],\n\t\t\tbottom = hull[1],\n\t\t\ttMinClip,\n\t\t\ttMaxClip;\n\t\tif (d1 === 0 && d2 === 0\n\t\t\t\t&& dp0 === 0 && dp1 === 0 && dp2 === 0 && dp3 === 0\n\t\t\t|| (tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null\n\t\t\t|| (tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\tdMin, dMax)) == null)\n\t\t\treturn calls;\n\t\tvar tMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\tif (Math.max(uMax - uMin, tMaxNew - tMinNew) < fatLineEpsilon) {\n\t\t\tvar t = (tMinNew + tMaxNew) / 2,\n\t\t\t\tu = (uMin + uMax) / 2;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tflip ? c2 : c1, flip ? u : t,\n\t\t\t\t\tflip ? c1 : c2, flip ? t : u);\n\t\t} else {\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\tif (tMaxClip - tMinClip > 0.8) {\n\t\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\t\tt = (tMinNew + tMaxNew) / 2;\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, parts[0], c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, tMinNew, t);\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, parts[1], c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, t, tMaxNew);\n\t\t\t\t} else {\n\t\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\t\tu = (uMin + uMax) / 2;\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tparts[0], v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, u, tMinNew, tMaxNew);\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tparts[1], v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, u, uMax, tMinNew, tMaxNew);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (uMax - uMin >= fatLineEpsilon) {\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, tMinNew, tMaxNew);\n\t\t\t\t} else {\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv1, v2, c1, c2, locations, include, flip,\n\t\t\t\t\t\t\trecursion, calls, tMinNew, tMaxNew, uMin, uMax);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn calls;\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t} else {\n\t\t\tvar distRatio = dist1 / dist2;\n\t\t\thull = [\n\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t: distRatio <= 0.5 ? [p0, p2, p3]\n\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t[p0, p3]\n\t\t\t];\n\t\t}\n\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t}\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction getCurveLineIntersections(v, px, py, vx, vy) {\n\t\tvar isZero = Numerical.isZero;\n\t\tif (isZero(vx) && isZero(vy)) {\n\t\t\tvar t = Curve.getTimeOf(v, new Point(px, py));\n\t\t\treturn t === null ? [] : [t];\n\t\t}\n\t\tvar angle = Math.atan2(-vy, vx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trv = [],\n\t\t\troots = [];\n\t\tfor (var i = 0; i < 8; i += 2) {\n\t\t\tvar x = v[i] - px,\n\t\t\t\ty = v[i + 1] - py;\n\t\t\trv.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\tx * sin + y * cos);\n\t\t}\n\t\tCurve.solveCubic(rv, 1, 0, roots, 0, 1);\n\t\treturn roots;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, include,\n\t\t\tflip) {\n\t\tvar x1 = v2[0], y1 = v2[1],\n\t\t\tx2 = v2[6], y2 = v2[7],\n\t\t\troots = getCurveLineIntersections(v1, x1, y1, x2 - x1, y2 - y1);\n\t\tfor (var i = 0, l = roots.length; i < l; i++) {\n\t\t\tvar t1 = roots[i],\n\t\t\t\tp1 = Curve.getPoint(v1, t1),\n\t\t\t\tt2 = Curve.getTimeOf(v2, p1);\n\t\t\tif (t2 !== null) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tflip ? c2 : c1, flip ? t2 : t1,\n\t\t\t\t\t\tflip ? c1 : c2, flip ? t1 : t2);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, c1, c2, locations, include) {\n\t\tvar pt = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (pt) {\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tc1, Curve.getTimeOf(v1, pt),\n\t\t\t\t\tc2, Curve.getTimeOf(v2, pt));\n\t\t}\n\t}\n\n\tfunction getCurveIntersections(v1, v2, c1, c2, locations, include) {\n\t\tvar epsilon = 1e-12,\n\t\t\tmin = Math.min,\n\t\t\tmax = Math.max;\n\n\t\tif (max(v1[0], v1[2], v1[4], v1[6]) + epsilon >\n\t\t\tmin(v2[0], v2[2], v2[4], v2[6]) &&\n\t\t\tmin(v1[0], v1[2], v1[4], v1[6]) - epsilon <\n\t\t\tmax(v2[0], v2[2], v2[4], v2[6]) &&\n\t\t\tmax(v1[1], v1[3], v1[5], v1[7]) + epsilon >\n\t\t\tmin(v2[1], v2[3], v2[5], v2[7]) &&\n\t\t\tmin(v1[1], v1[3], v1[5], v1[7]) - epsilon <\n\t\t\tmax(v2[1], v2[3], v2[5], v2[7])) {\n\t\t\tvar overlaps = getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\t\tc1, overlap[0],\n\t\t\t\t\t\t\tc2, overlap[1], true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\t\tflip = straight1 && !straight2,\n\t\t\t\t\tbefore = locations.length;\n\t\t\t\t(straight\n\t\t\t\t\t? addLineIntersection\n\t\t\t\t\t: straight1 || straight2\n\t\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\t\tflip ? v2 : v1, flip ? v1 : v2,\n\t\t\t\t\t\t\tflip ? c2 : c1, flip ? c1 : c2,\n\t\t\t\t\t\t\tlocations, include, flip,\n\t\t\t\t\t\t\t0, 0, 0, 1, 0, 1);\n\t\t\t\tif (!straight || locations.length === before) {\n\t\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\t\tvar t1 = i >> 1,\n\t\t\t\t\t\t\tt2 = i & 1,\n\t\t\t\t\t\t\ti1 = t1 * 6,\n\t\t\t\t\t\t\ti2 = t2 * 6,\n\t\t\t\t\t\t\tp1 = new Point(v1[i1], v1[i1 + 1]),\n\t\t\t\t\t\t\tp2 = new Point(v2[i2], v2[i2 + 1]);\n\t\t\t\t\t\tif (p1.isClose(p2, epsilon)) {\n\t\t\t\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\t\t\t\tc1, t1,\n\t\t\t\t\t\t\t\t\tc2, t2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn locations;\n\t}\n\n\tfunction getLoopIntersection(v1, c1, locations, include) {\n\t\tvar info = Curve.classify(v1);\n\t\tif (info.type === 'loop') {\n\t\t\tvar roots = info.roots;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tc1, roots[0],\n\t\t\t\t\tc1, roots[1]);\n\t\t}\n\t  return locations;\n\t}\n\n\tfunction getIntersections(curves1, curves2, include, matrix1, matrix2,\n\t\t\t_returnFirst) {\n\t\tvar self = !curves2;\n\t\tif (self)\n\t\t\tcurves2 = curves1;\n\t\tvar length1 = curves1.length,\n\t\t\tlength2 = curves2.length,\n\t\t\tvalues2 = [],\n\t\t\tarrays = [],\n\t\t\tlocations,\n\t\t\tcurrent;\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = self ? values2[i] : curve1.getValues(matrix1),\n\t\t\t\tpath1 = curve1.getPath();\n\t\t\tif (path1 !== current) {\n\t\t\t\tcurrent = path1;\n\t\t\t\tlocations = [];\n\t\t\t\tarrays.push(locations);\n\t\t\t}\n\t\t\tif (self) {\n\t\t\t\tgetLoopIntersection(values1, curve1, locations, include);\n\t\t\t}\n\t\t\tfor (var j = self ? i + 1 : 0; j < length2; j++) {\n\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\treturn locations;\n\t\t\t\tgetCurveIntersections(values1, values2[j], curve1, curves2[j],\n\t\t\t\t\t\tlocations, include);\n\t\t\t}\n\t\t}\n\t\tlocations = [];\n\t\tfor (var i = 0, l = arrays.length; i < l; i++) {\n\t\t\tlocations.push.apply(locations, arrays[i]);\n\t\t}\n\t\treturn locations;\n\t}\n\n\tfunction getOverlaps(v1, v2) {\n\n\t\tfunction getSquaredLineLength(v) {\n\t\t\tvar x = v[6] - v[0],\n\t\t\t\ty = v[7] - v[1];\n\t\t\treturn x * x + y * y;\n\t\t}\n\n\t\tvar abs = Math.abs,\n\t\t\tgetDistance = Line.getDistance,\n\t\t\ttimeEpsilon = 1e-8,\n\t\t\tgeomEpsilon = 1e-7,\n\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\tstraightBoth = straight1 && straight2,\n\t\t\tflip = getSquaredLineLength(v1) < getSquaredLineLength(v2),\n\t\t\tl1 = flip ? v2 : v1,\n\t\t\tl2 = flip ? v1 : v2,\n\t\t\tpx = l1[0], py = l1[1],\n\t\t\tvx = l1[6] - px, vy = l1[7] - py;\n\t\tif (getDistance(px, py, vx, vy, l2[0], l2[1], true) < geomEpsilon &&\n\t\t\tgetDistance(px, py, vx, vy, l2[6], l2[7], true) < geomEpsilon) {\n\t\t\tif (!straightBoth &&\n\t\t\t\tgetDistance(px, py, vx, vy, l1[2], l1[3], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l1[4], l1[5], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l2[2], l2[3], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l2[4], l2[5], true) < geomEpsilon) {\n\t\t\t\tstraight1 = straight2 = straightBoth = true;\n\t\t\t}\n\t\t} else if (straightBoth) {\n\t\t\treturn null;\n\t\t}\n\t\tif (straight1 ^ straight2) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar v = [v1, v2],\n\t\t\tpairs = [];\n\t\tfor (var i = 0; i < 4 && pairs.length < 2; i++) {\n\t\t\tvar i1 = i & 1,\n\t\t\t\ti2 = i1 ^ 1,\n\t\t\t\tt1 = i >> 1,\n\t\t\t\tt2 = Curve.getTimeOf(v[i1], new Point(\n\t\t\t\t\tv[i2][t1 ? 6 : 0],\n\t\t\t\t\tv[i2][t1 ? 7 : 1]));\n\t\t\tif (t2 != null) {\n\t\t\t\tvar pair = i1 ? [t1, t2] : [t2, t1];\n\t\t\t\tif (!pairs.length ||\n\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon) {\n\t\t\t\t\tpairs.push(pair);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i > 2 && !pairs.length)\n\t\t\t\tbreak;\n\t\t}\n\t\tif (pairs.length !== 2) {\n\t\t\tpairs = null;\n\t\t} else if (!straightBoth) {\n\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\tpairs = null;\n\t\t}\n\t\treturn pairs;\n\t}\n\n\treturn {\n\t\tgetIntersections: function(curve) {\n\t\t\tvar v1 = this.getValues(),\n\t\t\t\tv2 = curve && curve !== this && curve.getValues();\n\t\t\treturn v2 ? getCurveIntersections(v1, v2, this, curve, [])\n\t\t\t\t\t  : getLoopIntersection(v1, this, []);\n\t\t},\n\n\t\tstatics: {\n\t\t\tgetOverlaps: getOverlaps,\n\t\t\tgetIntersections: getIntersections,\n\t\t\tgetCurveLineIntersections: getCurveLineIntersections\n\t\t}\n\t};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\n\tinitialize: function CurveLocation(curve, time, point, _overlap, _distance) {\n\t\tif (time >= 0.99999999) {\n\t\t\tvar next = curve.getNext();\n\t\t\tif (next) {\n\t\t\t\ttime = 0;\n\t\t\t\tcurve = next;\n\t\t\t}\n\t\t}\n\t\tthis._setCurve(curve);\n\t\tthis._time = time;\n\t\tthis._point = point || curve.getPointAtTime(time);\n\t\tthis._overlap = _overlap;\n\t\tthis._distance = _distance;\n\t\tthis._intersection = this._next = this._previous = null;\n\t},\n\n\t_setCurve: function(curve) {\n\t\tvar path = curve._path;\n\t\tthis._path = path;\n\t\tthis._version = path ? path._version : 0;\n\t\tthis._curve = curve;\n\t\tthis._segment = null;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\t_setSegment: function(segment) {\n\t\tthis._setCurve(segment.getCurve());\n\t\tthis._segment = segment;\n\t\tthis._time = segment === this._segment1 ? 0 : 1;\n\t\tthis._point = segment._point.clone();\n\t},\n\n\tgetSegment: function() {\n\t\tvar segment = this._segment;\n\t\tif (!segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\ttime = this.getTime();\n\t\t\tif (time === 0) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (time === 1) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else if (time != null) {\n\t\t\t\tsegment = curve.getPartLength(0, time)\n\t\t\t\t\t< curve.getPartLength(time, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tthis._segment = segment;\n\t\t}\n\t\treturn segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tthat = this;\n\t\tif (path && path._version !== this._version) {\n\t\t\tthis._time = this._offset = this._curveOffset = this._curve = null;\n\t\t}\n\n\t\tfunction trySegment(segment) {\n\t\t\tvar curve = segment && segment.getCurve();\n\t\t\tif (curve && (that._time = curve.getTimeOf(that._point)) != null) {\n\t\t\t\tthat._setCurve(curve);\n\t\t\t\treturn curve;\n\t\t\t}\n\t\t}\n\n\t\treturn this._curve\n\t\t\t|| trySegment(this._segment)\n\t\t\t|| trySegment(this._segment1)\n\t\t\t|| trySegment(this._segment2.getPrevious());\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetTime: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\ttime = this._time;\n\t\treturn curve && time == null\n\t\t\t? this._time = curve.getTimeOf(this._point)\n\t\t\t: time;\n\t},\n\n\tgetParameter: '#getTime',\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar offset = this._offset;\n\t\tif (offset == null) {\n\t\t\toffset = 0;\n\t\t\tvar path = this.getPath(),\n\t\t\t\tindex = this.getIndex();\n\t\t\tif (path && index != null) {\n\t\t\t\tvar curves = path.getCurves();\n\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t}\n\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar offset = this._curveOffset;\n\t\tif (offset == null) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\ttime = this.getTime();\n\t\t\tthis._curveOffset = offset = time != null && curve\n\t\t\t\t\t&& curve.getPartLength(0, time);\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetIntersection: function() {\n\t\treturn this._intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tres = curve && curve.divideAtTime(this.getTime());\n\t\tif (res) {\n\t\t\tthis._setSegment(res._segment1);\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tpath = curve._path,\n\t\t\tres = curve && curve.splitAtTime(this.getTime());\n\t\tif (res) {\n\t\t\tthis._setSegment(path.getLastSegment());\n\t\t}\n\t\treturn  res;\n\t},\n\n\tequals: function(loc, _ignoreOther) {\n\t\tvar res = this === loc;\n\t\tif (!res && loc instanceof CurveLocation) {\n\t\t\tvar c1 = this.getCurve(),\n\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\tp1 = c1._path,\n\t\t\t\tp2 = c2._path;\n\t\t\tif (p1 === p2) {\n\t\t\t\tvar abs = Math.abs,\n\t\t\t\t\tepsilon = 1e-7,\n\t\t\t\t\tdiff = abs(this.getOffset() - loc.getOffset()),\n\t\t\t\t\ti1 = !_ignoreOther && this._intersection,\n\t\t\t\t\ti2 = !_ignoreOther && loc._intersection;\n\t\t\t\tres = (diff < epsilon\n\t\t\t\t\t\t|| p1 && abs(p1.getLength() - diff) < epsilon)\n\t\t\t\t\t&& (!i1 && !i2 || i1 && i2 && i1.equals(i2, true));\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar time = this.getTime();\n\t\tif (time != null)\n\t\t\tparts.push('time: ' + f.number(time));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tisTouching: function() {\n\t\tvar inter = this._intersection;\n\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\tcurve2 = inter.getCurve();\n\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t}\n\t\treturn false;\n\t},\n\n\tisCrossing: function() {\n\t\tvar inter = this._intersection;\n\t\tif (!inter)\n\t\t\treturn false;\n\t\tvar t1 = this.getTime(),\n\t\t\tt2 = inter.getTime(),\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tt1Inside = t1 >= tMin && t1 <= tMax,\n\t\t\tt2Inside = t2 >= tMin && t2 <= tMax;\n\t\tif (t1Inside && t2Inside)\n\t\t\treturn !this.isTouching();\n\t\tvar c2 = this.getCurve(),\n\t\t\tc1 = t1 < tMin ? c2.getPrevious() : c2,\n\t\t\tc4 = inter.getCurve(),\n\t\t\tc3 = t2 < tMin ? c4.getPrevious() : c4;\n\t\tif (t1 > tMax)\n\t\t\tc2 = c2.getNext();\n\t\tif (t2 > tMax)\n\t\t\tc4 = c4.getNext();\n\t\tif (!c1 || !c2 || !c3 || !c4)\n\t\t\treturn false;\n\n\t\tvar offsets = [];\n\n\t\tfunction addOffsets(curve, end) {\n\t\t\tvar v = curve.getValues(),\n\t\t\t\troots = Curve.classify(v).roots || Curve.getPeaks(v),\n\t\t\t\tcount = roots.length,\n\t\t\t\tt = end && count > 1 ? roots[count - 1]\n\t\t\t\t\t\t: count > 0 ? roots[0]\n\t\t\t\t\t\t: 0.5;\n\t\t\toffsets.push(Curve.getLength(v, end ? t : 0, end ? 1 : t) / 2);\n\t\t}\n\n\t\tfunction isInRange(angle, min, max) {\n\t\t\treturn min < max\n\t\t\t\t\t? angle > min && angle < max\n\t\t\t\t\t: angle > min || angle < max;\n\t\t}\n\n\t\tif (!t1Inside) {\n\t\t\taddOffsets(c1, true);\n\t\t\taddOffsets(c2, false);\n\t\t}\n\t\tif (!t2Inside) {\n\t\t\taddOffsets(c3, true);\n\t\t\taddOffsets(c4, false);\n\t\t}\n\t\tvar pt = this.getPoint(),\n\t\t\toffset = Math.min.apply(Math, offsets),\n\t\t\tv2 = t1Inside ? c2.getTangentAtTime(t1)\n\t\t\t\t\t: c2.getPointAt(offset).subtract(pt),\n\t\t\tv1 = t1Inside ? v2.negate()\n\t\t\t\t\t: c1.getPointAt(-offset).subtract(pt),\n\t\t\tv4 = t2Inside ? c4.getTangentAtTime(t2)\n\t\t\t\t\t: c4.getPointAt(offset).subtract(pt),\n\t\t\tv3 = t2Inside ? v4.negate()\n\t\t\t\t\t: c3.getPointAt(-offset).subtract(pt),\n\t\t\ta1 = v1.getAngle(),\n\t\t\ta2 = v2.getAngle(),\n\t\t\ta3 = v3.getAngle(),\n\t\t\ta4 = v4.getAngle();\n\t\treturn !!(t1Inside\n\t\t\t\t? (isInRange(a1, a3, a4) ^ isInRange(a2, a3, a4)) &&\n\t\t\t\t  (isInRange(a1, a4, a3) ^ isInRange(a2, a4, a3))\n\t\t\t\t: (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2)) &&\n\t\t\t\t  (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1)));\n\t},\n\n\thasOverlap: function() {\n\t\treturn !!this._overlap;\n\t}\n}, Base.each(Curve._evaluateMethods, function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar curve = this.getCurve(),\n\t\t\ttime = this.getTime();\n\t\treturn time != null && curve && curve[get](time, true);\n\t};\n}, {\n\tpreserve: true\n}),\nnew function() {\n\n\tfunction insert(locations, loc, merge) {\n\t\tvar length = locations.length,\n\t\t\tl = 0,\n\t\t\tr = length - 1;\n\n\t\tfunction search(index, dir) {\n\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t1e-7))\n\t\t\t\t\tbreak;\n\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\treturn loc2;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (l <= r) {\n\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\tloc2 = locations[m],\n\t\t\t\tfound;\n\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\tif (loc._overlap) {\n\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t}\n\t\t\t\treturn found;\n\t\t\t}\n\t\tvar path1 = loc.getPath(),\n\t\t\tpath2 = loc2.getPath(),\n\t\t\tdiff = path1 !== path2\n\t\t\t\t? path1._id - path2._id\n\t\t\t\t: (loc.getIndex() + loc.getTime())\n\t\t\t\t- (loc2.getIndex() + loc2.getTime());\n\t\t\tif (diff < 0) {\n\t\t\t\tr = m - 1;\n\t\t\t} else {\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t}\n\t\tlocations.splice(l, 0, loc);\n\t\treturn loc;\n\t}\n\n\treturn { statics: {\n\t\tinsert: insert,\n\n\t\texpand: function(locations) {\n\t\t\tvar expanded = locations.slice();\n\t\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t}\n\t\t\treturn expanded;\n\t\t}\n\t}};\n});\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\t_selectBounds: false,\n\t_canScaleStroke: true,\n\tbeans: true,\n\n\tinitialize: function PathItem() {\n\t},\n\n\tstatics: {\n\t\tcreate: function(arg) {\n\t\t\tvar data,\n\t\t\t\tsegments,\n\t\t\t\tcompound;\n\t\t\tif (Base.isPlainObject(arg)) {\n\t\t\t\tsegments = arg.segments;\n\t\t\t\tdata = arg.pathData;\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tsegments = arg;\n\t\t\t} else if (typeof arg === 'string') {\n\t\t\t\tdata = arg;\n\t\t\t}\n\t\t\tif (segments) {\n\t\t\t\tvar first = segments[0];\n\t\t\t\tcompound = first && Array.isArray(first[0]);\n\t\t\t} else if (data) {\n\t\t\t\tcompound = (data.match(/m/gi) || []).length > 1\n\t\t\t\t\t\t|| /z\\s*\\S+/i.test(data);\n\t\t\t}\n\t\t\tvar ctor = compound ? CompoundPath : Path;\n\t\t\treturn new ctor(arg);\n\t\t}\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tisClockwise: function() {\n\t\treturn this.getArea() >= 0;\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data && data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis[move ? 'moveTo' : 'lineTo'](current = getPoint(j));\n\t\t\t\t\tif (move) {\n\t\t\t\t\t\tstart = current;\n\t\t\t\t\t\tmove = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tcurrent = current.clone();\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(1e-12);\n\t\t\t\tcurrent = start;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = point.isInside(\n\t\t\t\tthis.getBounds({ internal: true, handle: true }))\n\t\t\t\t\t? this._getWinding(point)\n\t\t\t\t\t: {};\n\t\treturn winding.onPath || !!(this.getFillRule() === 'evenodd'\n\t\t\t\t? winding.windingL & 1 || winding.windingR & 1\n\t\t\t\t: winding.winding);\n\t},\n\n\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\tvar self = this === path || !path,\n\t\t\tmatrix1 = this._matrix._orNullIfIdentity(),\n\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t: (_matrix || path._matrix)._orNullIfIdentity();\n\t\treturn self || this.getBounds(matrix1).intersects(\n\t\t\t\tpath.getBounds(matrix2), 1e-12)\n\t\t\t\t? Curve.getIntersections(\n\t\t\t\t\t\tthis.getCurves(), !self && path.getCurves(), include,\n\t\t\t\t\t\tmatrix1, matrix2, _returnFirst)\n\t\t\t\t: [];\n\t},\n\n\tgetCrossings: function(path) {\n\t\treturn this.getIntersections(path, function(inter) {\n\t\t\treturn inter.hasOverlap() || inter.isCrossing();\n\t\t});\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\tvar loc = this.getNearestLocation.apply(this, arguments);\n\t\treturn loc ? loc.getPoint() : loc;\n\t},\n\n\tinterpolate: function(from, to, factor) {\n\t\tvar isPath = !this._children,\n\t\t\tname = isPath ? '_segments' : '_children',\n\t\t\titemsFrom = from[name],\n\t\t\titemsTo = to[name],\n\t\t\titems = this[name];\n\t\tif (!itemsFrom || !itemsTo || itemsFrom.length !== itemsTo.length) {\n\t\t\tthrow new Error('Invalid operands in interpolate() call: ' +\n\t\t\t\t\tfrom + ', ' + to);\n\t\t}\n\t\tvar current = items.length,\n\t\t\tlength = itemsTo.length;\n\t\tif (current < length) {\n\t\t\tvar ctor = isPath ? Segment : Path;\n\t\t\tfor (var i = current; i < length; i++) {\n\t\t\t\tthis.add(new ctor());\n\t\t\t}\n\t\t} else if (current > length) {\n\t\t\tthis[isPath ? 'removeSegments' : 'removeChildren'](length, current);\n\t\t}\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\titems[i].interpolate(itemsFrom[i], itemsTo[i], factor);\n\t\t}\n\t\tif (isPath) {\n\t\t\tthis.setClosed(from._closed);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tcompare: function(path) {\n\t\tvar ok = false;\n\t\tif (path) {\n\t\t\tvar paths1 = this._children || [this],\n\t\t\t\tpaths2 = path._children ? path._children.slice() : [path],\n\t\t\t\tlength1 = paths1.length,\n\t\t\t\tlength2 = paths2.length,\n\t\t\t\tmatched = [],\n\t\t\t\tcount = 0;\n\t\t\tok = true;\n\t\t\tfor (var i1 = length1 - 1; i1 >= 0 && ok; i1--) {\n\t\t\t\tvar path1 = paths1[i1];\n\t\t\t\tok = false;\n\t\t\t\tfor (var i2 = length2 - 1; i2 >= 0 && !ok; i2--) {\n\t\t\t\t\tif (path1.compare(paths2[i2])) {\n\t\t\t\t\t\tif (!matched[i2]) {\n\t\t\t\t\t\t\tmatched[i2] = true;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tok = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tok = ok && count === length2;\n\t\t}\n\t\treturn ok;\n\t},\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._segmentSelection = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setSegments(source._segments);\n\t\tthis._closed = source._closed;\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tthis._length = this._area = undefined;\n\t\t\tif (flags & 16) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected(),\n\t\t\tlength = segments && segments.length;\n\t\tthis._segments.length = 0;\n\t\tthis._segmentSelection = 0;\n\t\tthis._curves = undefined;\n\t\tif (length) {\n\t\t\tvar last = segments[length - 1];\n\t\t\tif (typeof last === 'boolean') {\n\t\t\t\tthis.setClosed(last);\n\t\t\t\tlength--;\n\t\t\t}\n\t\t\tthis._add(Segment.readList(segments, 0, {}, length));\n\t\t}\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine) {\n\t\t\t\t\t\tvar dx = curX - prevX,\n\t\t\t\t\t\t\tdy = curY - prevY;\n\t\t\t\t\t\tparts.push(\n\t\t\t\t\t\t\t  dx === 0 ? 'v' + f.number(dy)\n\t\t\t\t\t\t\t: dy === 0 ? 'h' + f.number(dx)\n\t\t\t\t\t\t\t: 'l' + f.pair(dx, dy));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t + ' ' + f.pair( inX - prevX,  inY - prevY)\n\t\t\t\t\t\t\t + ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (!length)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._segments.length;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar segments = this._segments,\n\t\t\tcoords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selection)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selection);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves) {\n\t\t\tvar total = this._countCurves(),\n\t\t\t\tstart = index > 0 && index + amount - 1 === total ? index - 1\n\t\t\t\t\t: index,\n\t\t\t\tinsert = start,\n\t\t\t\tend = Math.min(start + amount, total);\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [start, 0].concat(segs._curves));\n\t\t\t\tinsert += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = insert; i < end; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(start, end);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(start, end) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && !start ? segments.length - 1\n\t\t\t\t: start - 1]) {\n\t\t\tcurve._segment2 = segments[start] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[end]) {\n\t\t\tcurve._segment1 = segments[end];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readList(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readList(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readList(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readList(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(start, end, _includeCurves) {\n\t\tstart = start || 0;\n\t\tend = Base.pick(end, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(start, end - start),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selection)\n\t\t\t\tthis._updateSelection(segment, segment._selection, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = start, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = start > 0 && end === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? start - 1\n\t\t\t\t\t: start,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tfor (var i = curves.length - 1; i >= 0; i--)\n\t\t\t\tcurves[i]._path = null;\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tclearHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i].clearHandles();\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tlength += curves[i].getLength();\n\t\t\tthis._length = length;\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar area = this._area;\n\t\tif (area == null) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tclosed = this._closed;\n\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar last = i + 1 === l;\n\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\tsegments[i], segments[last ? 0 : i + 1],\n\t\t\t\t\t\tnull, last && !closed));\n\t\t\t}\n\t\t\tthis._area = area;\n\t\t}\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this.isSelected() && length > 0 && this._segmentSelection\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelection: function setSelection(selection) {\n\t\tif (!(selection & 1))\n\t\t\tthis._selectSegments(false);\n\t\tsetSelection.base.call(this, selection);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tselection = selected ? 7 : 0;\n\t\tthis._segmentSelection = selection * length;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tsegments[i]._selection = selection;\n\t},\n\n\t_updateSelection: function(segment, oldSelection, newSelection) {\n\t\tsegment._selection = newSelection;\n\t\tvar selection = this._segmentSelection += newSelection - oldSelection;\n\t\tif (selection > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tdivideAt: function(location) {\n\t\tvar loc = this.getLocationAt(location),\n\t\t\tcurve;\n\t\treturn loc && (curve = loc.getCurve().divideAt(loc.getCurveOffset()))\n\t\t\t\t? curve._segment1\n\t\t\t\t: null;\n\t},\n\n\tsplitAt: function(location) {\n\t\tvar loc = this.getLocationAt(location),\n\t\t\tindex = loc && loc.index,\n\t\t\ttime = loc && loc.time,\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin;\n\t\tif (time > tMax) {\n\t\t\tindex++;\n\t\t\ttime = 0;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (time >= tMin) {\n\t\t\t\tcurves[index++].divideAtTime(time);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this);\n\t\t\t\tpath.copyAttributes(this);\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tsplit: function(index, time) {\n\t\tvar curve,\n\t\t\tlocation = time === undefined ? index\n\t\t\t\t: (curve = this.getCurves()[index])\n\t\t\t\t\t&& curve.getLocationAtTime(time);\n\t\treturn location != null ? this.splitAt(location) : null;\n\t},\n\n\tjoin: function(path, tolerance) {\n\t\tvar epsilon = tolerance || 0;\n\t\tif (path && path !== this) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.isClose(last2._point, epsilon))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.isClose(first2._point, epsilon)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.isClose(first2._point, epsilon))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.isClose(last2._point, epsilon)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.isClose(last._point, epsilon)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\treduce: function(options) {\n\t\tvar curves = this.getCurves(),\n\t\t\tsimplify = options && options.simplify,\n\t\t\ttolerance = simplify ? 1e-7 : 0;\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (!curve.hasHandles() && (!curve.hasLength(tolerance)\n\t\t\t\t\t|| simplify && curve.isCollinear(curve.getNext())))\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tthis._changed(9);\n\t},\n\n\tflatten: function(flatness) {\n\t\tvar flattener = new PathFlattener(this, flatness || 0.25, 256, true),\n\t\t\tparts = flattener.parts,\n\t\t\tlength = parts.length,\n\t\t\tsegments = [];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tsegments.push(new Segment(parts[i].curve.slice(0, 2)));\n\t\t}\n\t\tif (!this._closed && length > 0) {\n\t\t\tsegments.push(new Segment(parts[length - 1].curve.slice(6)));\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tvar segments = new PathFitter(this).fit(tolerance || 2.5);\n\t\tif (segments)\n\t\t\tthis.setSegments(segments);\n\t\treturn !!segments;\n\t},\n\n\tsmooth: function(options) {\n\t\tvar that = this,\n\t\t\topts = options || {},\n\t\t\ttype = opts.type || 'asymmetric',\n\t\t\tsegments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tclosed = this._closed;\n\n\t\tfunction getIndex(value, _default) {\n\t\t\tvar index = value && value.index;\n\t\t\tif (index != null) {\n\t\t\t\tvar path = value.path;\n\t\t\t\tif (path && path !== that)\n\t\t\t\t\tthrow new Error(value._class + ' ' + index + ' of ' + path\n\t\t\t\t\t\t\t+ ' is not part of ' + that);\n\t\t\t\tif (_default && value instanceof Curve)\n\t\t\t\t\tindex++;\n\t\t\t} else {\n\t\t\t\tindex = typeof value === 'number' ? value : _default;\n\t\t\t}\n\t\t\treturn Math.min(index < 0 && closed\n\t\t\t\t\t? index % length\n\t\t\t\t\t: index < 0 ? index + length : index, length - 1);\n\t\t}\n\n\t\tvar loop = closed && opts.from === undefined && opts.to === undefined,\n\t\t\tfrom = getIndex(opts.from, 0),\n\t\t\tto = getIndex(opts.to, length - 1);\n\n\t\tif (from > to) {\n\t\t\tif (closed) {\n\t\t\t\tfrom -= length;\n\t\t\t} else {\n\t\t\t\tvar tmp = from;\n\t\t\t\tfrom = to;\n\t\t\t\tto = tmp;\n\t\t\t}\n\t\t}\n\t\tif (/^(?:asymmetric|continuous)$/.test(type)) {\n\t\t\tvar asymmetric = type === 'asymmetric',\n\t\t\t\tmin = Math.min,\n\t\t\t\tamount = to - from + 1,\n\t\t\t\tn = amount - 1,\n\t\t\t\tpadding = loop ? min(amount, 4) : 1,\n\t\t\t\tpaddingLeft = padding,\n\t\t\t\tpaddingRight = padding,\n\t\t\t\tknots = [];\n\t\t\tif (!closed) {\n\t\t\t\tpaddingLeft = min(1, from);\n\t\t\t\tpaddingRight = min(1, length - to - 1);\n\t\t\t}\n\t\t\tn += paddingLeft + paddingRight;\n\t\t\tif (n <= 1)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0, j = from - paddingLeft; i <= n; i++, j++) {\n\t\t\t\tknots[i] = segments[(j < 0 ? j + length : j) % length]._point;\n\t\t\t}\n\n\t\t\tvar x = knots[0]._x + 2 * knots[1]._x,\n\t\t\t\ty = knots[0]._y + 2 * knots[1]._y,\n\t\t\t\tf = 2,\n\t\t\t\tn_1 = n - 1,\n\t\t\t\trx = [x],\n\t\t\t\try = [y],\n\t\t\t\trf = [f],\n\t\t\t\tpx = [],\n\t\t\t\tpy = [];\n\t\t\tfor (var i = 1; i < n; i++) {\n\t\t\t\tvar internal = i < n_1,\n\t\t\t\t\ta = internal ? 1 : asymmetric ? 1 : 2,\n\t\t\t\t\tb = internal ? 4 : asymmetric ? 2 : 7,\n\t\t\t\t\tu = internal ? 4 : asymmetric ? 3 : 8,\n\t\t\t\t\tv = internal ? 2 : asymmetric ? 0 : 1,\n\t\t\t\t\tm = a / f;\n\t\t\t\tf = rf[i] = b - m;\n\t\t\t\tx = rx[i] = u * knots[i]._x + v * knots[i + 1]._x - m * x;\n\t\t\t\ty = ry[i] = u * knots[i]._y + v * knots[i + 1]._y - m * y;\n\t\t\t}\n\n\t\t\tpx[n_1] = rx[n_1] / rf[n_1];\n\t\t\tpy[n_1] = ry[n_1] / rf[n_1];\n\t\t\tfor (var i = n - 2; i >= 0; i--) {\n\t\t\t\tpx[i] = (rx[i] - px[i + 1]) / rf[i];\n\t\t\t\tpy[i] = (ry[i] - py[i + 1]) / rf[i];\n\t\t\t}\n\t\t\tpx[n] = (3 * knots[n]._x - px[n_1]) / 2;\n\t\t\tpy[n] = (3 * knots[n]._y - py[n_1]) / 2;\n\n\t\t\tfor (var i = paddingLeft, max = n - paddingRight, j = from;\n\t\t\t\t\ti <= max; i++, j++) {\n\t\t\t\tvar segment = segments[j < 0 ? j + length : j],\n\t\t\t\t\tpt = segment._point,\n\t\t\t\t\thx = px[i] - pt._x,\n\t\t\t\t\thy = py[i] - pt._y;\n\t\t\t\tif (loop || i < max)\n\t\t\t\t\tsegment.setHandleOut(hx, hy);\n\t\t\t\tif (loop || i > paddingLeft)\n\t\t\t\t\tsegment.setHandleIn(-hx, -hy);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = from; i <= to; i++) {\n\t\t\t\tsegments[i < 0 ? i + length : i].smooth(opts,\n\t\t\t\t\t\t!loop && i === from, !loop && i === to);\n\t\t\t}\n\t\t}\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\tseg3 = segments[j],\n\t\t\t\tseg4 = seg3.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\tvar seg2 = segments[i],\n\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\tseg3 = seg2.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.copyAttributes(this, true);\n\t\t\tshape._matrix.prepend(this._matrix);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tif (insert === undefined || insert)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\ttoPath: '#clone',\n\n\tcompare: function compare(path) {\n\t\tif (!path || path instanceof CompoundPath)\n\t\t\treturn compare.base.call(this, path);\n\t\tvar curves1 = this.getCurves(),\n\t\t\tcurves2 = path.getCurves(),\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = curves2.length;\n\t\tif (!length1 || !length2) {\n\t\t\treturn length1 == length2;\n\t\t}\n\t\tvar v1 = curves1[0].getValues(),\n\t\t\tvalues2 = [],\n\t\t\tpos1 = 0, pos2,\n\t\t\tend1 = 0, end2;\n\t\tfor (var i = 0; i < length2; i++) {\n\t\t\tvar v2 = curves2[i].getValues();\n\t\t\tvalues2.push(v2);\n\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tpos2 = !i && overlaps[0][0] > 0 ? length2 - 1 : i;\n\t\t\t\tend2 = overlaps[0][1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar abs = Math.abs,\n\t\t\tepsilon = 1e-8,\n\t\t\tv2 = values2[pos2],\n\t\t\tstart2;\n\t\twhile (v1 && v2) {\n\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tvar t1 = overlaps[0][0];\n\t\t\t\tif (abs(t1 - end1) < epsilon) {\n\t\t\t\t\tend1 = overlaps[1][0];\n\t\t\t\t\tif (end1 === 1) {\n\t\t\t\t\t\tv1 = ++pos1 < length1 ? curves1[pos1].getValues() : null;\n\t\t\t\t\t\tend1 = 0;\n\t\t\t\t\t}\n\t\t\t\t\tvar t2 = overlaps[0][1];\n\t\t\t\t\tif (abs(t2 - end2) < epsilon) {\n\t\t\t\t\t\tif (!start2)\n\t\t\t\t\t\t\tstart2 = [pos2, t2];\n\t\t\t\t\t\tend2 = overlaps[1][1];\n\t\t\t\t\t\tif (end2 === 1) {\n\t\t\t\t\t\t\tif (++pos2 >= length2)\n\t\t\t\t\t\t\t\tpos2 = 0;\n\t\t\t\t\t\t\tv2 = values2[pos2] || curves2[pos2].getValues();\n\t\t\t\t\t\t\tend2 = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!v1) {\n\t\t\t\t\t\t\treturn start2[0] === pos2 && start2[1] === end2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t},\n\n\t_hitTestSelf: function(point, options, viewMatrix, strokeMatrix) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tstrokeRadius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (strokeRadius !== null) {\n\t\t\tif (strokeRadius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tstrokePadding = strokePadding.add(\n\t\t\t\t\tPath._getStrokePadding(strokeRadius, strokeMatrix));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tvar isJoin = closed || segment._index > 0\n\t\t\t\t\t&& segment._index < numSegments - 1;\n\t\t\tif ((isJoin ? join : cap) === 'round') {\n\t\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t\t} else {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (isJoin) {\n\t\t\t\t\tif (!segment.isSmooth()) {\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, strokeRadius,\n\t\t\t\t\t\t\t   miterLimit, null, strokeMatrix, addToArea, true);\n\t\t\t\t\t}\n\t\t\t\t} else if (cap === 'square') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, strokeRadius, null,\n\t\t\t\t\t\t\tstrokeMatrix, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (strokeRadius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar time = loc.getTime();\n\t\t\t\tif (time === 0 || time === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point)\n\t\t\t\t\t\t\t<= miterLimit * strokeRadius\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve._evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\tvar loc = this.getLocationAt(offset);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset) {\n\t\tif (typeof offset === 'number') {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar start = length,\n\t\t\t\t\tcurve = curves[i];\n\t\t\t\tlength += curve.getLength();\n\t\t\t\tif (length > offset) {\n\t\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (curves.length > 0 && offset <= this.getLength()) {\n\t\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\t\t}\n\t\t} else if (offset && offset.getPath && offset.getPath() === this) {\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t}\n\n}),\nnew function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2,\n\t\t\tcoords = new Array(6),\n\t\t\tpX, pY;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i],\n\t\t\t\tselection = segment._selection;\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tpX = coords[0];\n\t\t\tpY = coords[1];\n\t\t\tif (selection & 2)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (selection & 4)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(selection & 1)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar flattener = new PathFlattener(this, 0.25, 32, false,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = flattener.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\tflattener.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (!segments.length)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar abs = Math.abs,\n\t\t\t\tsqrt = Math.sqrt,\n\t\t\t\tcurrent = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments),\n\t\t\t\t\tisZero = Numerical.isZero;\n\t\t\t\tif (isZero(radius.width) || isZero(radius.height))\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq = x * x,\n\t\t\t\t\tySq = y * y;\n\t\t\t\tvar factor = sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1) * sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar epsilon = 1e-7,\n\t\t\t\text = abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil((ext - epsilon) / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!i) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(tolerance) {\n\t\t\tthis.setClosed(true);\n\t\t\tthis.join(this, tolerance);\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(matrix, options) {\n\t\tvar method = options.handle\n\t\t\t\t? 'getHandleBounds'\n\t\t\t\t: options.stroke\n\t\t\t\t? 'getStrokeBounds'\n\t\t\t\t: 'getBounds';\n\t\treturn Path[method](this._segments, this._closed, this, matrix, options);\n\t},\n\nstatics: {\n\tgetBounds: function(segments, closed, path, matrix, options, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6)),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, path, matrix, options) {\n\t\tvar style = path.getStyle(),\n\t\t\tstroke = style.hasStroke(),\n\t\t\tstrokeWidth = style.getStrokeWidth(),\n\t\t\tstrokeMatrix = stroke && path._getStrokeMatrix(matrix, options),\n\t\t\tstrokePadding = stroke && Path._getStrokePadding(strokeWidth,\n\t\t\t\tstrokeMatrix),\n\t\t\tbounds = Path.getBounds(segments, closed, path, matrix, options,\n\t\t\t\tstrokePadding);\n\t\tif (!stroke)\n\t\t\treturn bounds;\n\t\tvar strokeRadius = strokeWidth / 2,\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = style.getMiterLimit(),\n\t\t\tjoinBounds = new Rectangle(new Size(strokePadding));\n\n\t\tfunction addPoint(point) {\n\t\t\tbounds = bounds.include(point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(\n\t\t\t\t\tjoinBounds.setCenter(segment._point.transform(matrix)));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tif (join === 'round' || segment.isSmooth()) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, strokeRadius, miterLimit,\n\t\t\t\t\t\tmatrix, strokeMatrix, addPoint);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, strokeRadius, matrix,\n\t\t\t\t\t\tstrokeMatrix, addPoint);\n\t\t\t}\n\t\t}\n\n\t\tvar length = segments.length - (closed ? 0 : 1);\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getStrokePadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar hor = new Point(radius, 0).transform(matrix),\n\t\t\tver = new Point(0, radius).transform(matrix),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = Math.atan2(b * tan, a),\n\t\t\tty = Math.atan2(b, tan * a);\n\t\treturn [Math.abs(a * Math.cos(tx) * cos + b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, matrix,\n\t\t\tstrokeMatrix, addPoint, isArea) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPoint1().transform(matrix),\n\t\t\tnormal1 = curve1.getNormalAtTime(1).multiply(radius)\n\t\t\t\t.transform(strokeMatrix),\n\t\t\tnormal2 = curve2.getNormalAtTime(0).multiply(radius)\n\t\t\t\t.transform(strokeMatrix);\n\t\tif (normal1.getDirectedAngle(normal2) < 0) {\n\t\t\tnormal1 = normal1.negate();\n\t\t\tnormal2 = normal2.negate();\n\t\t}\n\t\tif (isArea)\n\t\t\taddPoint(point);\n\t\taddPoint(point.add(normal1));\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(point.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(point.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit * radius) {\n\t\t\t\taddPoint(corner);\n\t\t\t}\n\t\t}\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, matrix, strokeMatrix,\n\t\t\taddPoint, isArea) {\n\t\tvar point = segment._point.transform(matrix),\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal()\n\t\t\t\t\t.multiply(loc.getTime() === 0 ? radius : -radius)\n\t\t\t\t\t.transform(strokeMatrix);\n\t\tif (cap === 'square') {\n\t\t\tif (isArea) {\n\t\t\t\taddPoint(point.subtract(normal));\n\t\t\t\taddPoint(point.add(normal));\n\t\t\t}\n\t\t\tpoint = point.add(normal.rotate(-90));\n\t\t}\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, path, matrix, options) {\n\t\tvar style = path.getStyle(),\n\t\t\tstroke = options.stroke && style.hasStroke(),\n\t\t\tstrokePadding,\n\t\t\tjoinPadding;\n\t\tif (stroke) {\n\t\t\tvar strokeMatrix = path._getStrokeMatrix(matrix, options),\n\t\t\t\tstrokeRadius = style.getStrokeWidth() / 2,\n\t\t\t\tjoinRadius = strokeRadius;\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.SQRT2);\n\t\t\tstrokePadding = Path._getStrokePadding(strokeRadius, strokeMatrix);\n\t\t\tjoinPadding = Path._getStrokePadding(joinRadius, strokeMatrix);\n\t\t}\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = !j ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert == false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props, { insert: true });\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert == false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = sides % 3 === 0,\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\tbeans: true,\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items) {\n\t\tvar list = items,\n\t\t\tfirst = list[0];\n\t\tif (first && typeof first[0] === 'number')\n\t\t\tlist = [list];\n\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\tvar item = list[i];\n\t\t\tif (list === items && !(item instanceof Path))\n\t\t\t\tlist = Base.slice(list);\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tlist[i] = new Path({ segments: item, insert: false });\n\t\t\t} else if (item instanceof CompoundPath) {\n\t\t\t\tlist.splice.apply(list, [i, 1].concat(item.removeChildren()));\n\t\t\t\titem.remove();\n\t\t\t}\n\t\t}\n\t\treturn insertChildren.base.call(this, index, list);\n\t},\n\n\treduce: function reduce(options) {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\tvar path = children[i].reduce(options);\n\t\t\tif (path.isEmpty())\n\t\t\t\tpath.remove();\n\t\t}\n\t\tif (!children.length) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.copyAttributes(this);\n\t\t\tpath.insertAbove(this);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t}\n\t\treturn reduce.base.call(this);\n\t},\n\n\tisClosed: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tif (!children[i]._closed)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tchildren[i].setClosed(closed);\n\t\t}\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t},\n\n\tgetLength: function() {\n\t\tvar children = this._children,\n\t\t\tlength = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tlength += children[i].getLength();\n\t\treturn length;\n\t},\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.appended(mx) : _matrix, _precision));\n\t\t}\n\t\treturn paths.join('');\n\t},\n\n\t_hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n\t\treturn _hitTestChildren.base.call(this, point,\n\t\t\t\toptions.class === Path || options.type === 'path' ? options\n\t\t\t\t\t: Base.set({}, options, { fill: false }),\n\t\t\t\tviewMatrix);\n\t},\n\n\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (!children.length)\n\t\t\treturn;\n\n\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\tctx.beginPath();\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectionItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectionItems[child._id]) {\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.appended(mx));\n\t\t\t}\n\t\t}\n\t}\n},\nnew function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && !children.length)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\treturn Base.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo',\n\t\t\t'arcTo', 'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy',\n\t\t\t'arcBy'],\n\t\tfunction(key) {\n\t\t\tthis[key] = function() {\n\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t};\n\t\t}, {\n\t\t\tmoveTo: function() {\n\t\t\t\tvar current = getCurrentPath(this),\n\t\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\t\tif (path !== current)\n\t\t\t\t\tthis.addChild(path);\n\t\t\t\tpath.moveTo.apply(path, arguments);\n\t\t\t},\n\n\t\t\tmoveBy: function() {\n\t\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\t\tpoint = Point.read(arguments);\n\t\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t\t},\n\n\t\t\tclosePath: function(tolerance) {\n\t\t\t\tgetCurrentPath(this, true).closePath(tolerance);\n\t\t\t}\n\t\t}\n\t);\n}, Base.each(['reverse', 'flatten', 'simplify', 'smooth'], function(key) {\n\tthis[key] = function(param) {\n\t\tvar children = this._children,\n\t\t\tres;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tres = children[i][key](param) || res;\n\t\t}\n\t\treturn res;\n\t};\n}, {}));\n\nPathItem.inject(new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\toperators = {\n\t\t\tunite:     { '1': true, '2': true },\n\t\t\tintersect: { '2': true },\n\t\t\tsubtract:  { '1': true },\n\t\t\texclude:   { '1': true, '-1': true }\n\t\t};\n\n\tfunction preparePath(path, resolve) {\n\t\tvar res = path.clone(false).reduce({ simplify: true })\n\t\t\t\t.transform(null, true, true);\n\t\treturn resolve\n\t\t\t\t? res.resolveCrossings().reorient(\n\t\t\t\t\tres.getFillRule() === 'nonzero', true)\n\t\t\t\t: res;\n\t}\n\n\tfunction createResult(paths, simplify, path1, path2, options) {\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.addChildren(paths, true);\n\t\tresult = result.reduce({ simplify: simplify });\n\t\tif (!(options && options.insert == false)) {\n\t\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t\t&& path1.getIndex() < path2.getIndex() ? path2 : path1);\n\t\t}\n\t\tresult.copyAttributes(path1, true);\n\t\treturn result;\n\t}\n\n\tfunction traceBoolean(path1, path2, operation, options) {\n\t\tif (options && (options.trace == false || options.stroke) &&\n\t\t\t\t/^(subtract|intersect)$/.test(operation))\n\t\t\treturn splitBoolean(path1, path2, operation);\n\t\tvar _path1 = preparePath(path1, true),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true),\n\t\t\toperator = operators[operation];\n\t\toperator[operation] = true;\n\t\tif (_path2 && (operator.subtract || operator.exclude)\n\t\t\t\t^ (_path2.isClockwise() ^ _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tvar crossings = divideLocations(\n\t\t\t\tCurveLocation.expand(_path1.getCrossings(_path2))),\n\t\t\tpaths1 = _path1._children || [_path1],\n\t\t\tpaths2 = _path2 && (_path2._children || [_path2]),\n\t\t\tsegments = [],\n\t\t\tcurves = [],\n\t\t\tpaths;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tcurves.push.apply(curves, path.getCurves());\n\t\t\t\tpath._overlapsOnly = true;\n\t\t\t}\n\t\t}\n\n\t\tif (crossings.length) {\n\t\t\tcollect(paths1);\n\t\t\tif (paths2)\n\t\t\t\tcollect(paths2);\n\t\t\tfor (var i = 0, l = crossings.length; i < l; i++) {\n\t\t\t\tpropagateWinding(crossings[i]._segment, _path1, _path2, curves,\n\t\t\t\t\t\toperator);\n\t\t\t}\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar segment = segments[i],\n\t\t\t\t\tinter = segment._intersection;\n\t\t\t\tif (!segment._winding) {\n\t\t\t\t\tpropagateWinding(segment, _path1, _path2, curves, operator);\n\t\t\t\t}\n\t\t\t\tif (!(inter && inter._overlap))\n\t\t\t\t\tsegment._path._overlapsOnly = false;\n\t\t\t}\n\t\t\tpaths = tracePaths(segments, operator);\n\t\t} else {\n\t\t\tpaths = reorientPaths(\n\t\t\t\t\tpaths2 ? paths1.concat(paths2) : paths1.slice(),\n\t\t\t\t\tfunction(w) {\n\t\t\t\t\t\treturn !!operator[w];\n\t\t\t\t\t});\n\t\t}\n\n\t\treturn createResult(paths, true, path1, path2, options);\n\t}\n\n\tfunction splitBoolean(path1, path2, operation) {\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = preparePath(path2),\n\t\t\tcrossings = _path1.getCrossings(_path2),\n\t\t\tsubtract = operation === 'subtract',\n\t\t\tdivide = operation === 'divide',\n\t\t\tadded = {},\n\t\t\tpaths = [];\n\n\t\tfunction addPath(path) {\n\t\t\tif (!added[path._id] && (divide ||\n\t\t\t\t\t_path2.contains(path.getPointAt(path.getLength() / 2))\n\t\t\t\t\t\t^ subtract)) {\n\t\t\t\tpaths.unshift(path);\n\t\t\t\treturn added[path._id] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = crossings.length - 1; i >= 0; i--) {\n\t\t\tvar path = crossings[i].split();\n\t\t\tif (path) {\n\t\t\t\tif (addPath(path))\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t}\n\t\t}\n\t\taddPath(_path1);\n\t\treturn createResult(paths, false, path1, path2);\n\t}\n\n\tfunction linkIntersections(from, to) {\n\t\tvar prev = from;\n\t\twhile (prev) {\n\t\t\tif (prev === to)\n\t\t\t\treturn;\n\t\t\tprev = prev._previous;\n\t\t}\n\t\twhile (from._next && from._next !== to)\n\t\t\tfrom = from._next;\n\t\tif (!from._next) {\n\t\t\twhile (to._previous)\n\t\t\t\tto = to._previous;\n\t\t\tfrom._next = to;\n\t\t\tto._previous = from;\n\t\t}\n\t}\n\n\tfunction clearCurveHandles(curves) {\n\t\tfor (var i = curves.length - 1; i >= 0; i--)\n\t\t\tcurves[i].clearHandles();\n\t}\n\n\tfunction reorientPaths(paths, isInside, clockwise) {\n\t\tvar length = paths && paths.length;\n\t\tif (length) {\n\t\t\tvar lookup = Base.each(paths, function (path, i) {\n\t\t\t\t\tthis[path._id] = {\n\t\t\t\t\t\tcontainer: null,\n\t\t\t\t\t\twinding: path.isClockwise() ? 1 : -1,\n\t\t\t\t\t\tindex: i\n\t\t\t\t\t};\n\t\t\t\t}, {}),\n\t\t\t\tsorted = paths.slice().sort(function (a, b) {\n\t\t\t\t\treturn abs(b.getArea()) - abs(a.getArea());\n\t\t\t\t}),\n\t\t\t\tfirst = sorted[0];\n\t\t\tif (clockwise == null)\n\t\t\t\tclockwise = first.isClockwise();\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar path1 = sorted[i],\n\t\t\t\t\tentry1 = lookup[path1._id],\n\t\t\t\t\tpoint = path1.getInteriorPoint(),\n\t\t\t\t\tcontainerWinding = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tvar path2 = sorted[j];\n\t\t\t\t\tif (path2.contains(point)) {\n\t\t\t\t\t\tvar entry2 = lookup[path2._id];\n\t\t\t\t\t\tcontainerWinding = entry2.winding;\n\t\t\t\t\t\tentry1.winding += containerWinding;\n\t\t\t\t\t\tentry1.container = entry2.exclude ? entry2.container\n\t\t\t\t\t\t\t\t: path2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isInside(entry1.winding) === isInside(containerWinding)) {\n\t\t\t\t\tentry1.exclude = true;\n\t\t\t\t\tpaths[entry1.index] = null;\n\t\t\t\t} else {\n\t\t\t\t\tvar container = entry1.container;\n\t\t\t\t\tpath1.setClockwise(container ? !container.isClockwise()\n\t\t\t\t\t\t\t: clockwise);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\tfunction divideLocations(locations, include, clearLater) {\n\t\tvar results = include && [],\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tclearHandles = false,\n\t\t\tclearCurves = clearLater || [],\n\t\t\tclearLookup = clearLater && {},\n\t\t\trenormalizeLocs,\n\t\t\tprevCurve,\n\t\t\tprevTime;\n\n\t\tfunction getId(curve) {\n\t\t\treturn curve._path._id + '.' + curve._segment1._index;\n\t\t}\n\n\t\tfor (var i = (clearLater && clearLater.length) - 1; i >= 0; i--) {\n\t\t\tvar curve = clearLater[i];\n\t\t\tif (curve._path)\n\t\t\t\tclearLookup[getId(curve)] = true;\n\t\t}\n\n\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\tvar loc = locations[i],\n\t\t\t\ttime = loc._time,\n\t\t\t\torigTime = time,\n\t\t\t\texclude = include && !include(loc),\n\t\t\t\tcurve = loc._curve,\n\t\t\t\tsegment;\n\t\t\tif (curve) {\n\t\t\t\tif (curve !== prevCurve) {\n\t\t\t\t\tclearHandles = !curve.hasHandles()\n\t\t\t\t\t\t\t|| clearLookup && clearLookup[getId(curve)];\n\t\t\t\t\trenormalizeLocs = [];\n\t\t\t\t\tprevTime = null;\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t} else if (prevTime >= tMin) {\n\t\t\t\t\ttime /= prevTime;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (exclude) {\n\t\t\t\tif (renormalizeLocs)\n\t\t\t\t\trenormalizeLocs.push(loc);\n\t\t\t\tcontinue;\n\t\t\t} else if (include) {\n\t\t\t\tresults.unshift(loc);\n\t\t\t}\n\t\t\tprevTime = origTime;\n\t\t\tif (time < tMin) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (time > tMax) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else {\n\t\t\t\tvar newCurve = curve.divideAtTime(time, true);\n\t\t\t\tif (clearHandles)\n\t\t\t\t\tclearCurves.push(curve, newCurve);\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tfor (var j = renormalizeLocs.length - 1; j >= 0; j--) {\n\t\t\t\t\tvar l = renormalizeLocs[j];\n\t\t\t\t\tl._time = (l._time - time) / (1 - time);\n\t\t\t\t}\n\t\t\t}\n\t\t\tloc._setSegment(segment);\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tdest = loc._intersection;\n\t\t\tif (inter) {\n\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\tvar other = inter;\n\t\t\t\twhile (other) {\n\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\tother = other._next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegment._intersection = dest;\n\t\t\t}\n\t\t}\n\t\tif (!clearLater)\n\t\t\tclearCurveHandles(clearCurves);\n\t\treturn results || locations;\n\t}\n\n\tfunction getWinding(point, curves, dir, closed, dontFlip) {\n\t\tvar ia = dir ? 1 : 0,\n\t\t\tio = ia ^ 1,\n\t\t\tpv = [point.x, point.y],\n\t\t\tpa = pv[ia],\n\t\t\tpo = pv[io],\n\t\t\twindingEpsilon = 1e-9,\n\t\t\tqualityEpsilon = 1e-6,\n\t\t\tpaL = pa - windingEpsilon,\n\t\t\tpaR = pa + windingEpsilon,\n\t\t\twindingL = 0,\n\t\t\twindingR = 0,\n\t\t\tpathWindingL = 0,\n\t\t\tpathWindingR = 0,\n\t\t\tonPath = false,\n\t\t\tonAnyPath = false,\n\t\t\tquality = 1,\n\t\t\troots = [],\n\t\t\tvPrev,\n\t\t\tvClose;\n\n\t\tfunction addWinding(v) {\n\t\t\tvar o0 = v[io + 0],\n\t\t\t\to3 = v[io + 6];\n\t\t\tif (po < min(o0, o3) || po > max(o0, o3)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar a0 = v[ia + 0],\n\t\t\t\ta1 = v[ia + 2],\n\t\t\t\ta2 = v[ia + 4],\n\t\t\t\ta3 = v[ia + 6];\n\t\t\tif (o0 === o3) {\n\t\t\t\tif (a0 < paR && a3 > paL || a3 < paR && a0 > paL) {\n\t\t\t\t\tonPath = true;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar t =   po === o0 ? 0\n\t\t\t\t\t: po === o3 ? 1\n\t\t\t\t\t: paL > max(a0, a1, a2, a3) || paR < min(a0, a1, a2, a3)\n\t\t\t\t\t? 1\n\t\t\t\t\t: Curve.solveCubic(v, io, po, roots, 0, 1) > 0\n\t\t\t\t\t\t? roots[0]\n\t\t\t\t\t\t: 1,\n\t\t\t\ta =   t === 0 ? a0\n\t\t\t\t\t: t === 1 ? a3\n\t\t\t\t\t: Curve.getPoint(v, t)[dir ? 'y' : 'x'],\n\t\t\t\twinding = o0 > o3 ? 1 : -1,\n\t\t\t\twindingPrev = vPrev[io] > vPrev[io + 6] ? 1 : -1,\n\t\t\t\ta3Prev = vPrev[ia + 6];\n\t\t\tif (po !== o0) {\n\t\t\t\tif (a < paL) {\n\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t} else if (a > paR) {\n\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t} else {\n\t\t\t\t\tonPath = true;\n\t\t\t\t}\n\t\t\t\tif (a > pa - qualityEpsilon && a < pa + qualityEpsilon)\n\t\t\t\t\tquality /= 2;\n\t\t\t} else {\n\t\t\t\tif (winding !== windingPrev) {\n\t\t\t\t\tif (a0 < paL) {\n\t\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t\t} else if (a0 > paR) {\n\t\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t\t}\n\t\t\t\t} else if (a0 != a3Prev) {\n\t\t\t\t\tif (a3Prev < paR && a > paR) {\n\t\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t\t\tonPath = true;\n\t\t\t\t\t} else if (a3Prev > paL && a < paL) {\n\t\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t\t\tonPath = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tquality = 0;\n\t\t\t}\n\t\t\tvPrev = v;\n\t\t\treturn !dontFlip && a > paL && a < paR\n\t\t\t\t\t&& Curve.getTangent(v, t)[dir ? 'x' : 'y'] === 0\n\t\t\t\t\t&& getWinding(point, curves, !dir, closed, true);\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tvar o0 = v[io + 0],\n\t\t\t\to1 = v[io + 2],\n\t\t\t\to2 = v[io + 4],\n\t\t\t\to3 = v[io + 6];\n\t\t\tif (po <= max(o0, o1, o2, o3) && po >= min(o0, o1, o2, o3)) {\n\t\t\t\tvar a0 = v[ia + 0],\n\t\t\t\t\ta1 = v[ia + 2],\n\t\t\t\t\ta2 = v[ia + 4],\n\t\t\t\t\ta3 = v[ia + 6],\n\t\t\t\t\tmonoCurves = paL > max(a0, a1, a2, a3) ||\n\t\t\t\t\t\t\t\t paR < min(a0, a1, a2, a3)\n\t\t\t\t\t\t\t? [v] : Curve.getMonoCurves(v, dir),\n\t\t\t\t\tres;\n\t\t\t\tfor (var i = 0, l = monoCurves.length; i < l; i++) {\n\t\t\t\t\tif (res = addWinding(monoCurves[i]))\n\t\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar curve = curves[i],\n\t\t\t\tpath = curve._path,\n\t\t\t\tv = curve.getValues(),\n\t\t\t\tres;\n\t\t\tif (!i || curves[i - 1]._path !== path) {\n\t\t\t\tvPrev = null;\n\t\t\t\tif (!path._closed) {\n\t\t\t\t\tvClose = Curve.getValues(\n\t\t\t\t\t\t\tpath.getLastCurve().getSegment2(),\n\t\t\t\t\t\t\tcurve.getSegment1(),\n\t\t\t\t\t\t\tnull, !closed);\n\t\t\t\t\tif (vClose[io] !== vClose[io + 6]) {\n\t\t\t\t\t\tvPrev = vClose;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!vPrev) {\n\t\t\t\t\tvPrev = v;\n\t\t\t\t\tvar prev = path.getLastCurve();\n\t\t\t\t\twhile (prev && prev !== curve) {\n\t\t\t\t\t\tvar v2 = prev.getValues();\n\t\t\t\t\t\tif (v2[io] !== v2[io + 6]) {\n\t\t\t\t\t\t\tvPrev = v2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprev = prev.getPrevious();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (res = handleCurve(v))\n\t\t\t\treturn res;\n\n\t\t\tif (i + 1 === l || curves[i + 1]._path !== path) {\n\t\t\t\tif (vClose && (res = handleCurve(vClose)))\n\t\t\t\t\treturn res;\n\t\t\t\tif (onPath && !pathWindingL && !pathWindingR) {\n\t\t\t\t\tpathWindingL = pathWindingR = path.isClockwise(closed) ^ dir\n\t\t\t\t\t\t\t? 1 : -1;\n\t\t\t\t}\n\t\t\t\twindingL += pathWindingL;\n\t\t\t\twindingR += pathWindingR;\n\t\t\t\tpathWindingL = pathWindingR = 0;\n\t\t\t\tif (onPath) {\n\t\t\t\t\tonAnyPath = true;\n\t\t\t\t\tonPath = false;\n\t\t\t\t}\n\t\t\t\tvClose = null;\n\t\t\t}\n\t\t}\n\t\twindingL = abs(windingL);\n\t\twindingR = abs(windingR);\n\t\treturn {\n\t\t\twinding: max(windingL, windingR),\n\t\t\twindingL: windingL,\n\t\t\twindingR: windingR,\n\t\t\tquality: quality,\n\t\t\tonPath: onAnyPath\n\t\t};\n\t}\n\n\tfunction propagateWinding(segment, path1, path2, curves, operator) {\n\t\tvar chain = [],\n\t\t\tstart = segment,\n\t\t\ttotalLength = 0,\n\t\t\twinding;\n\t\tdo {\n\t\t\tvar curve = segment.getCurve(),\n\t\t\t\tlength = curve.getLength();\n\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\ttotalLength += length;\n\t\t\tsegment = segment.getNext();\n\t\t} while (segment && !segment._intersection && segment !== start);\n\t\tvar offsets = [0.5, 0.25, 0.75],\n\t\t\twinding = { winding: 0, quality: -1 },\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0; i < offsets.length && winding.quality < 0.5; i++) {\n\t\t\tvar length = totalLength * offsets[i];\n\t\t\tfor (var j = 0, l = chain.length; j < l; j++) {\n\t\t\t\tvar entry = chain[j],\n\t\t\t\t\tcurveLength = entry.length;\n\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\tvar curve = entry.curve,\n\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\toperand = parent instanceof CompoundPath ? parent : path,\n\t\t\t\t\t\tt = Numerical.clamp(curve.getTimeAt(length), tMin, tMax),\n\t\t\t\t\t\tpt = curve.getPointAtTime(t),\n\t\t\t\t\t\tdir = abs(curve.getTangentAtTime(t).y) < Math.SQRT1_2;\n\t\t\t\t\tvar wind = !(operator.subtract && path2 && (\n\t\t\t\t\t\t\toperand === path1 &&\n\t\t\t\t\t\t\t\tpath2._getWinding(pt, dir, true).winding ||\n\t\t\t\t\t\t\toperand === path2 &&\n\t\t\t\t\t\t\t\t!path1._getWinding(pt, dir, true).winding))\n\t\t\t\t\t\t\t? getWinding(pt, curves, dir, true)\n\t\t\t\t\t\t\t: { winding: 0, quality: 1 };\n\t\t\t\t\tif (wind.quality > winding.quality)\n\t\t\t\t\t\twinding = wind;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlength -= curveLength;\n\t\t\t}\n\t\t}\n\t\tfor (var j = chain.length - 1; j >= 0; j--) {\n\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t}\n\n\tfunction tracePaths(segments, operator) {\n\t\tvar paths = [],\n\t\t\tstarts;\n\n\t\tfunction isValid(seg) {\n\t\t\tvar winding;\n\t\t\treturn !!(seg && !seg._visited && (!operator\n\t\t\t\t\t|| operator[(winding = seg._winding || {}).winding]\n\t\t\t\t\t\t&& !(operator.unite && winding.winding === 2\n\t\t\t\t\t\t\t&& winding.windingL && winding.windingR)));\n\t\t}\n\n\t\tfunction isStart(seg) {\n\t\t\tif (seg) {\n\t\t\t\tfor (var i = 0, l = starts.length; i < l; i++) {\n\t\t\t\t\tif (seg === starts[i])\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction visitPath(path) {\n\t\t\tvar segments = path._segments;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tsegments[i]._visited = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction getCrossingSegments(segment, collectStarts) {\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tstart = inter,\n\t\t\t\tcrossings = [];\n\t\t\tif (collectStarts)\n\t\t\t\tstarts = [segment];\n\n\t\t\tfunction collect(inter, end) {\n\t\t\t\twhile (inter && inter !== end) {\n\t\t\t\t\tvar other = inter._segment,\n\t\t\t\t\t\tpath = other && other._path;\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tvar next = other.getNext() || path.getFirstSegment(),\n\t\t\t\t\t\t\tnextInter = next._intersection;\n\t\t\t\t\t\tif (other !== segment && (isStart(other)\n\t\t\t\t\t\t\t|| isStart(next)\n\t\t\t\t\t\t\t|| next && (isValid(other) && (isValid(next)\n\t\t\t\t\t\t\t\t|| nextInter && isValid(nextInter._segment))))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcrossings.push(other);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (collectStarts)\n\t\t\t\t\t\t\tstarts.push(other);\n\t\t\t\t\t}\n\t\t\t\t\tinter = inter._next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (inter) {\n\t\t\t\tcollect(inter);\n\t\t\t\twhile (inter && inter._prev)\n\t\t\t\t\tinter = inter._prev;\n\t\t\t\tcollect(inter, start);\n\t\t\t}\n\t\t\treturn crossings;\n\t\t}\n\n\t\tsegments.sort(function(seg1, seg2) {\n\t\t\tvar inter1 = seg1._intersection,\n\t\t\t\tinter2 = seg2._intersection,\n\t\t\t\tover1 = !!(inter1 && inter1._overlap),\n\t\t\t\tover2 = !!(inter2 && inter2._overlap),\n\t\t\t\tpath1 = seg1._path,\n\t\t\t\tpath2 = seg2._path;\n\t\t\treturn over1 ^ over2\n\t\t\t\t\t? over1 ? 1 : -1\n\t\t\t\t\t: !inter1 ^ !inter2\n\t\t\t\t\t\t? inter1 ? 1 : -1\n\t\t\t\t\t\t: path1 !== path2\n\t\t\t\t\t\t\t? path1._id - path2._id\n\t\t\t\t\t\t\t: seg1._index - seg2._index;\n\t\t});\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar seg = segments[i],\n\t\t\t\tvalid = isValid(seg),\n\t\t\t\tpath = null,\n\t\t\t\tfinished = false,\n\t\t\t\tclosed = true,\n\t\t\t\tbranches = [],\n\t\t\t\tbranch,\n\t\t\t\tvisited,\n\t\t\t\thandleIn;\n\t\t\tif (valid && seg._path._overlapsOnly) {\n\t\t\t\tvar path1 = seg._path,\n\t\t\t\t\tpath2 = seg._intersection._segment._path;\n\t\t\t\tif (path1.compare(path2)) {\n\t\t\t\t\tif (path1.getArea())\n\t\t\t\t\t\tpaths.push(path1.clone(false));\n\t\t\t\t\tvisitPath(path1);\n\t\t\t\t\tvisitPath(path2);\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (valid) {\n\t\t\t\tvar first = !path,\n\t\t\t\t\tcrossings = getCrossingSegments(seg, first),\n\t\t\t\t\tother = crossings.shift(),\n\t\t\t\t\tfinished = !first && (isStart(seg) || isStart(other)),\n\t\t\t\t\tcross = !finished && other;\n\t\t\t\tif (first) {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tbranch = null;\n\t\t\t\t}\n\t\t\t\tif (finished) {\n\t\t\t\t\tif (seg.isFirst() || seg.isLast())\n\t\t\t\t\t\tclosed = seg._path._closed;\n\t\t\t\t\tseg._visited = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (cross && branch) {\n\t\t\t\t\tbranches.push(branch);\n\t\t\t\t\tbranch = null;\n\t\t\t\t}\n\t\t\t\tif (!branch) {\n\t\t\t\t\tif (cross)\n\t\t\t\t\t\tcrossings.push(seg);\n\t\t\t\t\tbranch = {\n\t\t\t\t\t\tstart: path._segments.length,\n\t\t\t\t\t\tcrossings: crossings,\n\t\t\t\t\t\tvisited: visited = [],\n\t\t\t\t\t\thandleIn: handleIn\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (cross)\n\t\t\t\t\tseg = other;\n\t\t\t\tif (!isValid(seg)) {\n\t\t\t\t\tpath.removeSegments(branch.start);\n\t\t\t\t\tfor (var j = 0, k = visited.length; j < k; j++) {\n\t\t\t\t\t\tvisited[j]._visited = false;\n\t\t\t\t\t}\n\t\t\t\t\tvisited.length = 0;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tseg = branch && branch.crossings.shift();\n\t\t\t\t\t\tif (!seg || !seg._path) {\n\t\t\t\t\t\t\tseg = null;\n\t\t\t\t\t\t\tbranch = branches.pop();\n\t\t\t\t\t\t\tif (branch) {\n\t\t\t\t\t\t\t\tvisited = branch.visited;\n\t\t\t\t\t\t\t\thandleIn = branch.handleIn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (branch && !isValid(seg));\n\t\t\t\t\tif (!seg)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvar next = seg.getNext();\n\t\t\t\tpath.add(new Segment(seg._point, handleIn,\n\t\t\t\t\t\tnext && seg._handleOut));\n\t\t\t\tseg._visited = true;\n\t\t\t\tvisited.push(seg);\n\t\t\t\tseg = next || seg._path.getFirstSegment();\n\t\t\t\thandleIn = next && next._handleIn;\n\t\t\t}\n\t\t\tif (finished) {\n\t\t\t\tif (closed) {\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(handleIn);\n\t\t\t\t\tpath.setClosed(closed);\n\t\t\t\t}\n\t\t\t\tif (path.getArea() !== 0) {\n\t\t\t\t\tpaths.push(path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, dir, closed) {\n\t\t\treturn getWinding(point, this.getCurves(), dir, closed);\n\t\t},\n\n\t\tunite: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'unite', options);\n\t\t},\n\n\t\tintersect: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'intersect', options);\n\t\t},\n\n\t\tsubtract: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'subtract', options);\n\t\t},\n\n\t\texclude: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'exclude', options);\n\t\t},\n\n\t\tdivide: function(path, options) {\n\t\t\treturn options && (options.trace == false || options.stroke)\n\t\t\t\t\t? splitBoolean(this, path, 'divide')\n\t\t\t\t\t: createResult([\n\t\t\t\t\t\tthis.subtract(path, options),\n\t\t\t\t\t\tthis.intersect(path, options)\n\t\t\t\t\t], true, this, path, options);\n\t\t},\n\n\t\tresolveCrossings: function() {\n\t\t\tvar children = this._children,\n\t\t\t\tpaths = children || [this];\n\n\t\t\tfunction hasOverlap(seg, path) {\n\t\t\t\tvar inter = seg && seg._intersection;\n\t\t\t\treturn inter && inter._overlap && inter._path === path;\n\t\t\t}\n\n\t\t\tvar hasOverlaps = false,\n\t\t\t\thasCrossings = false,\n\t\t\t\tintersections = this.getIntersections(null, function(inter) {\n\t\t\t\t\treturn inter.hasOverlap() && (hasOverlaps = true) ||\n\t\t\t\t\t\t\tinter.isCrossing() && (hasCrossings = true);\n\t\t\t\t}),\n\t\t\t\tclearCurves = hasOverlaps && hasCrossings && [];\n\t\t\tintersections = CurveLocation.expand(intersections);\n\t\t\tif (hasOverlaps) {\n\t\t\t\tvar overlaps = divideLocations(intersections, function(inter) {\n\t\t\t\t\treturn inter.hasOverlap();\n\t\t\t\t}, clearCurves);\n\t\t\t\tfor (var i = overlaps.length - 1; i >= 0; i--) {\n\t\t\t\t\tvar overlap = overlaps[i],\n\t\t\t\t\t\tpath = overlap._path,\n\t\t\t\t\t\tseg = overlap._segment,\n\t\t\t\t\t\tprev = seg.getPrevious(),\n\t\t\t\t\t\tnext = seg.getNext();\n\t\t\t\t\tif (hasOverlap(prev, path) && hasOverlap(next, path)) {\n\t\t\t\t\t\tseg.remove();\n\t\t\t\t\t\tprev._handleOut._set(0, 0);\n\t\t\t\t\t\tnext._handleIn._set(0, 0);\n\t\t\t\t\t\tif (prev !== seg && !prev.getCurve().hasLength()) {\n\t\t\t\t\t\t\tnext._handleIn.set(prev._handleIn);\n\t\t\t\t\t\t\tprev.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasCrossings) {\n\t\t\t\tdivideLocations(intersections, hasOverlaps && function(inter) {\n\t\t\t\t\tvar curve1 = inter.getCurve(),\n\t\t\t\t\t\tseg1 = inter.getSegment(),\n\t\t\t\t\t\tother = inter._intersection,\n\t\t\t\t\t\tcurve2 = other._curve,\n\t\t\t\t\t\tseg2 = other._segment;\n\t\t\t\t\tif (curve1 && curve2 && curve1._path && curve2._path)\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif (seg1)\n\t\t\t\t\t\tseg1._intersection = null;\n\t\t\t\t\tif (seg2)\n\t\t\t\t\t\tseg2._intersection = null;\n\t\t\t\t}, clearCurves);\n\t\t\t\tif (clearCurves)\n\t\t\t\t\tclearCurveHandles(clearCurves);\n\t\t\t\tpaths = tracePaths(Base.each(paths, function(path) {\n\t\t\t\t\tthis.push.apply(this, path._segments);\n\t\t\t\t}, []));\n\t\t\t}\n\t\t\tvar length = paths.length,\n\t\t\t\titem;\n\t\t\tif (length > 1 && children) {\n\t\t\t\tif (paths !== children)\n\t\t\t\t\tthis.setChildren(paths);\n\t\t\t\titem = this;\n\t\t\t} else if (length === 1 && !children) {\n\t\t\t\tif (paths[0] !== this)\n\t\t\t\t\tthis.setSegments(paths[0].removeSegments());\n\t\t\t\titem = this;\n\t\t\t}\n\t\t\tif (!item) {\n\t\t\t\titem = new CompoundPath(Item.NO_INSERT);\n\t\t\t\titem.addChildren(paths);\n\t\t\t\titem = item.reduce();\n\t\t\t\titem.copyAttributes(this);\n\t\t\t\tthis.replaceWith(item);\n\t\t\t}\n\t\t\treturn item;\n\t\t},\n\n\t\treorient: function(nonZero, clockwise) {\n\t\t\tvar children = this._children;\n\t\t\tif (children && children.length) {\n\t\t\t\tthis.setChildren(reorientPaths(this.removeChildren(),\n\t\t\t\t\t\tfunction(w) {\n\t\t\t\t\t\t\treturn !!(nonZero ? w : w & 1);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclockwise));\n\t\t\t} else if (clockwise !== undefined) {\n\t\t\t\tthis.setClockwise(clockwise);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\tgetInteriorPoint: function() {\n\t\t\tvar bounds = this.getBounds(),\n\t\t\t\tpoint = bounds.getCenter(true);\n\t\t\tif (!this.contains(point)) {\n\t\t\t\tvar curves = this.getCurves(),\n\t\t\t\t\ty = point.y,\n\t\t\t\t\tintercepts = [],\n\t\t\t\t\troots = [];\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\t\tvar v = curves[i].getValues(),\n\t\t\t\t\t\to0 = v[1],\n\t\t\t\t\t\to1 = v[3],\n\t\t\t\t\t\to2 = v[5],\n\t\t\t\t\t\to3 = v[7];\n\t\t\t\t\tif (y >= min(o0, o1, o2, o3) && y <= max(o0, o1, o2, o3)) {\n\t\t\t\t\t\tvar monoCurves = Curve.getMonoCurves(v);\n\t\t\t\t\t\tfor (var j = 0, m = monoCurves.length; j < m; j++) {\n\t\t\t\t\t\t\tvar mv = monoCurves[j],\n\t\t\t\t\t\t\t\tmo0 = mv[1],\n\t\t\t\t\t\t\t\tmo3 = mv[7];\n\t\t\t\t\t\t\tif ((mo0 !== mo3) &&\n\t\t\t\t\t\t\t\t(y >= mo0 && y <= mo3 || y >= mo3 && y <= mo0)){\n\t\t\t\t\t\t\t\tvar x = y === mo0 ? mv[0]\n\t\t\t\t\t\t\t\t\t: y === mo3 ? mv[6]\n\t\t\t\t\t\t\t\t\t: Curve.solveCubic(mv, 1, y, roots, 0, 1)\n\t\t\t\t\t\t\t\t\t\t=== 1\n\t\t\t\t\t\t\t\t\t\t? Curve.getPoint(mv, roots[0]).x\n\t\t\t\t\t\t\t\t\t\t: (mv[0] + mv[6]) / 2;\n\t\t\t\t\t\t\t\tintercepts.push(x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (intercepts.length > 1) {\n\t\t\t\t\tintercepts.sort(function(a, b) { return a - b; });\n\t\t\t\t\tpoint.x = (intercepts[0] + intercepts[1]) / 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn point;\n\t\t}\n\t};\n});\n\nvar PathFlattener = Base.extend({\n\t_class: 'PathFlattener',\n\n\tinitialize: function(path, flatness, maxRecursion, ignoreStraight, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminSpan = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, t1, t2) {\n\t\t\tif ((t2 - t1) > minSpan\n\t\t\t\t\t&& !(ignoreStraight && Curve.isStraight(curve))\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, flatness || 0.25)) {\n\t\t\t\tvar halves = Curve.subdivide(curve, 0.5),\n\t\t\t\t\ttMid = (t1 + t2) / 2;\n\t\t\t\tcomputeParts(halves[0], index, t1, tMid);\n\t\t\t\tcomputeParts(halves[1], index, tMid, t2);\n\t\t\t} else {\n\t\t\t\tvar dx = curve[6] - curve[0],\n\t\t\t\t\tdy = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tif (dist > 0) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tcurve: curve,\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\ttime: t2,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\t_get: function(offset) {\n\t\tvar parts = this.parts,\n\t\t\tlength = parts.length,\n\t\t\tstart,\n\t\t\ti, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (!j || parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (; i < length; i++) {\n\t\t\tvar part = parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = parts[i - 1],\n\t\t\t\t\tprevTime = prev && prev.index === part.index ? prev.time : 0,\n\t\t\t\t\tprevOffset = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tindex: part.index,\n\t\t\t\t\ttime: prevTime + (part.time - prevTime)\n\t\t\t\t\t\t* (offset - prevOffset) / (part.offset - prevOffset)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tindex: parts[length - 1].index,\n\t\t\ttime: 1\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tvar start = this._get(from),\n\t\t\tend = this._get(to);\n\t\tfor (var i = start.index, l = end.index; i <= l; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti === start.index ? start.time : 0,\n\t\t\t\t\ti === end.index ? end.time : 1);\n\t\t\tif (i === start.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve._evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\tvar param = this._get(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.time);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tclosed = path._closed;\n\t\tfor (var i = 0, prev, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point;\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(prev = point.clone());\n\t\t\t}\n\t\t}\n\t\tif (closed) {\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\t\tthis.closed = closed;\n\t},\n\n\tfit: function(error) {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = null;\n\t\tif (length > 0) {\n\t\t\tsegments = [new Segment(points[0])];\n\t\t\tif (length > 1) {\n\t\t\t\tthis.fitCubic(segments, error, 0, length - 1,\n\t\t\t\t\t\tpoints[1].subtract(points[0]),\n\t\t\t\t\t\tpoints[length - 2].subtract(points[length - 1]));\n\t\t\t\tif (this.closed) {\n\t\t\t\t\tsegments.shift();\n\t\t\t\t\tsegments.pop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(segments, error, first, last, tan1, tan2) {\n\t\tvar points = this.points;\n\t\tif (last - first === 1) {\n\t\t\tvar pt1 = points[first],\n\t\t\t\tpt2 = points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve(segments, [pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(error, error * error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < error && parametersInOrder) {\n\t\t\t\tthis.addCurve(segments, curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar tanCenter = points[split - 1].subtract(points[split + 1]);\n\t\tthis.fitCubic(segments, error, first, split, tan1, tanCenter);\n\t\tthis.fitCubic(segments, error, split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(segments, curve) {\n\t\tvar prev = segments[segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tsegments.push(new Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tabs = Math.abs,\n\t\t\tpoints = this.points,\n\t\t\tpt1 = points[first],\n\t\t\tpt2 = points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1,\n\t\t\talpha2;\n\t\tif (abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X = C[0][0] * X[1]    - C[1][0] * X[0],\n\t\t\t\tdetXC1 = X[0]    * C[1][1] - X[1]    * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\talpha1 = alpha2 = abs(c0) > epsilon ? X[0] / c0\n\t\t\t\t\t\t\t: abs(c1) > epsilon ? X[1] / c1\n\t\t\t\t\t\t\t: 0;\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1,\n\t\t\t\tpt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)),\n\t\t\t\tpt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\treturn Numerical.isZero(df) ? u : u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsOptions: { stroke: false, handle: false },\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setContent(source._content);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx, param, viewMatrix) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\tvar lines = this._lines,\n\t\t\tstyle = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar rect = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(rect, rect) : rect;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else if (window) {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t} else {\n\t\t\tcomponents = [0, 0, 0];\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:   ( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:            (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:   ( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:            (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar args = arguments,\n\t\t\t\treading = this.__read,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (reading)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = Base.slice(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (reading) {\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = Base.slice(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && !i && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (reading && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (reading)\n\t\t\t\tthis.__read = read;\n\t\t\treturn this;\n\t\t},\n\n\t\tset: '#initialize',\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this.getAlpha() === col.getAlpha()\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx, matrix) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\thighlight = components[3],\n\t\t\t\tinverse = matrix && matrix.inverted(),\n\t\t\t\tcanvasGradient;\n\t\t\tif (inverse) {\n\t\t\t\torigin = inverse._transformPoint(origin);\n\t\t\t\tdestination = inverse._transformPoint(destination);\n\t\t\t\tif (highlight)\n\t\t\t\t\thighlight = inverse._transformPoint(highlight);\n\t\t\t}\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin);\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\toffset = stop._offset;\n\t\t\t\tcanvasGradient.addColorStop(\n\t\t\t\t\t\toffset == null ? i / (l - 1) : offset,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n},\nnew function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && Base.isPlainObject(stops)) {\n\t\t\tthis.set(stops);\n\t\t\tstops = radial = null;\n\t\t}\n\t\tif (this._stops == null) {\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\t}\n\t\tif (this._radial == null) {\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t\t}\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++) {\n\t\t\tthis._owners[i]._changed();\n\t\t}\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (!this._owners.length)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tstops[i] = this._stops[i].clone();\n\t\t}\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (stops.length < 2) {\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\t}\n\t\tvar _stops = this._stops;\n\t\tif (_stops) {\n\t\t\tfor (var i = 0, l = _stops.length; i < l; i++)\n\t\t\t\t_stops[i]._owner = undefined;\n\t\t}\n\t\t_stops = this._stops = GradientStop.readList(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = _stops.length; i < l; i++)\n\t\t\t_stops[i]._owner = this;\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class) {\n\t\t\tvar stops1 = this._stops,\n\t\t\t\tstops2 = gradient._stops,\n\t\t\t\tlength = stops1.length;\n\t\t\tif (length === stops2.length) {\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tif (!stops1[i].equals(stops2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tvar color = arg0,\n\t\t\toffset = arg1;\n\t\tif (typeof arg0 === 'object' && arg1 === undefined) {\n\t\t\tif (Array.isArray(arg0) && typeof arg0[0] !== 'number') {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\toffset = arg0[1];\n\t\t\t} else if ('color' in arg0 || 'offset' in arg0\n\t\t\t\t\t|| 'rampPoint' in arg0) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\toffset = arg0.offset || arg0.rampPoint || 0;\n\t\t\t}\n\t\t}\n\t\tthis.setColor(color);\n\t\tthis.setOffset(offset);\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._offset);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar color = this._color,\n\t\t\toffset = this._offset;\n\t\treturn Base.serialize(offset == null ? [color] : [color, offset],\n\t\t\t\toptions, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetOffset: function() {\n\t\treturn this._offset;\n\t},\n\n\tsetOffset: function(offset) {\n\t\tthis._offset = offset;\n\t\tthis._changed();\n\t},\n\n\tgetRampPoint: '#getOffset',\n\tsetRampPoint: '#setOffset',\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function() {\n\t\tvar color = Color.read(arguments, 0, { clone: true });\n\t\tif (color)\n\t\t\tcolor._owner = this;\n\t\tthis._color = color;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._offset == stop._offset\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar itemDefaults = {\n\t\tfillColor: null,\n\t\tfillRule: 'nonzero',\n\t\tstrokeColor: null,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\tshadowColor: null,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: null\n\t},\n\tgroupDefaults = Base.set({}, itemDefaults, {\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tleading: null,\n\t\tjustification: 'left'\n\t}),\n\ttextDefaults = Base.set({}, groupDefaults, {\n\t\tfillColor: new Color()\n\t}),\n\tflags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t},\n\titem = {\n\t\tbeans: true\n\t},\n\tfields = {\n\t\t_class: 'Style',\n\t\tbeans: true,\n\n\t\tinitialize: function Style(style, _owner, _project) {\n\t\t\tthis._values = {};\n\t\t\tthis._owner = _owner;\n\t\t\tthis._project = _owner && _owner._project || _project\n\t\t\t\t\t|| paper.project;\n\t\t\tthis._defaults = !_owner || _owner instanceof Group ? groupDefaults\n\t\t\t\t\t: _owner instanceof TextItem ? textDefaults\n\t\t\t\t\t: itemDefaults;\n\t\t\tif (style)\n\t\t\t\tthis.set(style);\n\t\t}\n\t};\n\n\tBase.each(groupDefaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else if (key in this._defaults) {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old && old._owner !== undefined)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (key in this._defaults && (!children || !children.length\n\t\t\t\t\t|| _dontMerge || owner instanceof CompoundPath)) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (children) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\t\tif (!i) {\n\t\t\t\t\t\tvalue = childValue;\n\t\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tBase.each({\n\t\tFont: 'FontFamily',\n\t\tWindingRule: 'FillRule'\n\t}, function(value, key) {\n\t\tvar get = 'get' + key,\n\t\t\tset = 'set' + key;\n\t\tfields[get] = item[get] = '#get' + value;\n\t\tfields[set] = item[set] = '#set' + value;\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\tfunction compare(style1, style2, secondary) {\n\t\t\tvar values1 = style1._values,\n\t\t\t\tvalues2 = style2._values,\n\t\t\t\tdefaults2 = style2._defaults;\n\t\t\tfor (var key in values1) {\n\t\t\t\tvar value1 = values1[key],\n\t\t\t\t\tvalue2 = values2[key];\n\t\t\t\tif (!(secondary && key in values2) && !Base.equals(value1,\n\t\t\t\t\t\tvalue2 === undefined ? defaults2[key] : value2))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& compare(this, style)\n\t\t\t\t&& compare(style, this, true)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\tvar color = this.getFillColor();\n\t\treturn !!color && color.alpha > 0;\n\t},\n\n\thasStroke: function() {\n\t\tvar color = this.getStrokeColor();\n\t\treturn !!color && color.alpha > 0 && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\tvar color = this.getShadowColor();\n\t\treturn !!color && color.alpha > 0 && (this.getShadowBlur() > 0\n\t\t\t\t|| !this.getShadowOffset().isZero());\n\t},\n\n\tgetView: function() {\n\t\treturn this._project._view;\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tisInserted: function(el) {\n\t\t\treturn document.body.contains(el);\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn el && handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tif (el) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t\t}\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tif (el) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t\t}\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\ttimer;\n\n\tfunction handleCallbacks() {\n\t\tvar functions = callbacks;\n\t\tcallbacks = [];\n\t\tfor (var i = 0, l = functions.length; i < l; i++)\n\t\t\tfunctions[i]();\n\t\trequested = nativeRequest && callbacks.length;\n\t\tif (requested)\n\t\t\tnativeRequest(handleCallbacks);\n\t}\n\n\treturn function(callback) {\n\t\tcallbacks.push(callback);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t}\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t}\n\n\t\tvar size;\n\t\tif (window && element) {\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserDrag: none,\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsize = getCanvasSize();\n\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\t\t} else {\n\t\t\tsize = new Size(element);\n\t\t\telement = null;\n\t\t}\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window && window.devicePixelRatio || 1;\n\t\tthis._setElementSize(size.width, size.height);\n\t\tthis._viewSize = size;\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t\tthis._itemEvents = { native: {}, virtual: {} };\n\t\tthis._autoUpdate = !paper.agent.node;\n\t\tthis._needsUpdate = false;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tvar project = this._project;\n\t\tif (project._view === this)\n\t\t\tproject._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: Base.each(\n\t\tItem._itemHandlers.concat(['onResize', 'onKeyDown', 'onKeyUp']),\n\t\tfunction(name) {\n\t\t\tthis[name] = {};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.play();\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t),\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\tgetAutoUpdate: function() {\n\t\treturn this._autoUpdate;\n\t},\n\n\tsetAutoUpdate: function(autoUpdate) {\n\t\tthis._autoUpdate = autoUpdate;\n\t\tif (autoUpdate)\n\t\t\tthis.requestUpdate();\n\t},\n\n\tupdate: function() {\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\trequestUpdate: function() {\n\t\tif (!this._requested) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\t\tthat._requested = false;\n\t\t\t\tif (that._animate) {\n\t\t\t\t\tthat.requestUpdate();\n\t\t\t\t\tvar element = that._element;\n\t\t\t\t\tif ((!DomElement.getPrefixed(document, 'hidden')\n\t\t\t\t\t\t\t|| PaperScope.getAttribute(element, 'keepalive')\n\t\t\t\t\t\t\t\t=== 'true') && DomElement.isInView(element)) {\n\t\t\t\t\t\tthat._handleFrame();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (that._autoUpdate)\n\t\t\t\t\tthat.update();\n\t\t\t});\n\t\t\tthis._requested = true;\n\t\t}\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tthis.requestUpdate();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._last ? now - this._last : 0;\n\t\tthis._last = now;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._project._changed(2049);\n\t\tthis._bounds = this._decomposed = undefined;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._setElementSize(size.width, size.height);\n\t\tthis._viewSize.set(size);\n\t\tthis._changed();\n\t\tthis.emit('resize', { size: size, delta: delta });\n\t\tif (this._autoUpdate) {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_setElementSize: function(width, height) {\n\t\tvar element = this._element;\n\t\tif (element) {\n\t\t\tif (element.width !== width)\n\t\t\t\telement.width = width;\n\t\t\tif (element.height !== height)\n\t\t\t\telement.height = height;\n\t\t}\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tisInserted: function() {\n\t\treturn DomElement.isInserted(this._element);\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixels;\n\t\tif (element) {\n\t\t\tvar parent = element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tpixels = parseFloat(pixels);\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\treturn 0;\n\t}\n}, Base.each(['rotate', 'scale', 'shear', 'skew'], function(key) {\n\tvar rotate = key === 'rotate';\n\tthis[key] = function() {\n\t\tvar value = (rotate ? Base : Point).read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[key](value,\n\t\t\t\tcenter || this.getCenter(true)));\n\t};\n}, {\n\t_decompose: function() {\n\t\treturn this._decomposed || (this._decomposed = this._matrix.decompose());\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.translate(this.getCenter().subtract(center));\n\t},\n\n\tgetZoom: function() {\n\t\tvar decomposed = this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling;\n\t\treturn scaling ? (scaling.x + scaling.y) / 2 : 0;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis.transform(new Matrix().scale(zoom / this.getZoom(),\n\t\t\tthis.getCenter()));\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tthis.rotate(rotation - current);\n\t\t}\n\t},\n\n\tgetScaling: function() {\n\t\tvar decomposed = this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling;\n\t\treturn scaling\n\t\t\t\t? new LinkedPoint(scaling.x, scaling.y, this, 'setScaling')\n\t\t\t\t: undefined;\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling(),\n\t\t\tscaling = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tif (current && scaling) {\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._matrix.append(matrix);\n\t},\n\n\tscrollBy: function() {\n\t\tthis.translate(Point.read(arguments).negate());\n\t}\n}), {\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tgetEventPoint: function(event) {\n\t\treturn this.viewToProject(DomEvent.getOffset(event, this._element));\n\t},\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (document && typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\tvar ctor = window ? CanvasView : View;\n\t\t\treturn new ctor(project, element);\n\t\t}\n\t}\n},\nnew function() {\n\tif (!window)\n\t\treturn;\n\tvar prevFocus,\n\t\ttempFocus,\n\t\tdragging = false,\n\t\tmouseDown = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[\n\t\t\t\ttarget.getAttribute('id')];\n\t}\n\n\tfunction updateFocus() {\n\t\tvar view = View._focused;\n\t\tif (!view || !view.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tif ((view = View._views[i]).isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, event, point) {\n\t\tview._handleMouseEvent('mousemove', event, point);\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {},\n\t\tdocEvents = {\n\t\t\tmouseout: function(event) {\n\t\t\t\tvar view = View._focused,\n\t\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\t\tif (view && (!target || target.nodeName === 'HTML')) {\n\t\t\t\t\tvar offset = DomEvent.getOffset(event, view._element),\n\t\t\t\t\t\tx = offset.x,\n\t\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\t\tax = abs(x),\n\t\t\t\t\t\tmax = 1 << 25,\n\t\t\t\t\t\tdiff = ax - max;\n\t\t\t\t\toffset.x = abs(diff) < ax ? diff * (x < 0 ? -1 : 1) : x;\n\t\t\t\t\thandleMouseMove(view, event, view.viewToProject(offset));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tscroll: updateFocus\n\t\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event);\n\t\tif (!dragging) {\n\t\t\tdragging = true;\n\t\t\tview._handleMouseEvent('mousedown', event);\n\t\t}\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!mouseDown) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target) {\n\t\t\t\t\tif (view)\n\t\t\t\t\t\thandleMouseMove(view, event);\n\t\t\t\t\tif (!prevFocus)\n\t\t\t\t\t\tprevFocus = view;\n\t\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t\t}\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tif (prevFocus && !prevFocus.isInserted())\n\t\t\t\t\tprevFocus = null;\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tprevFocus = null;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view)\n\t\t\thandleMouseMove(view, event);\n\t};\n\n\tdocEvents[mousedown] = function() {\n\t\tmouseDown = true;\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (view && dragging)\n\t\t\tview._handleMouseEvent('mouseup', event);\n\t\tmouseDown = dragging = false;\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\tvar called = false,\n\t\tprevented = false,\n\t\tfallbacks = {\n\t\t\tdoubleclick: 'click',\n\t\t\tmousedrag: 'mousemove'\n\t\t},\n\t\twasInView = false,\n\t\toverView,\n\t\tdownPoint,\n\t\tlastPoint,\n\t\tdownItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tclickItem,\n\t\tclickTime,\n\t\tdblClick;\n\n\tfunction emitMouseEvent(obj, target, type, event, point, prevPoint,\n\t\t\tstopItem) {\n\t\tvar stopped = false,\n\t\t\tmouseEvent;\n\n\t\tfunction emit(obj, type) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point,\n\t\t\t\t\t\t\ttarget || obj,\n\t\t\t\t\t\t\tprevPoint ? point.subtract(prevPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent)) {\n\t\t\t\t\tcalled = true;\n\t\t\t\t\tif (mouseEvent.prevented)\n\t\t\t\t\t\tprevented = true;\n\t\t\t\t\tif (mouseEvent.stopped)\n\t\t\t\t\t\treturn stopped = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar fallback = fallbacks[type];\n\t\t\t\tif (fallback)\n\t\t\t\t\treturn emit(obj, fallback);\n\t\t\t}\n\t\t}\n\n\t\twhile (obj && obj !== stopItem) {\n\t\t\tif (emit(obj, type))\n\t\t\t\tbreak;\n\t\t\tobj = obj._parent;\n\t\t}\n\t\treturn stopped;\n\t}\n\n\tfunction emitMouseEvents(view, hitItem, type, event, point, prevPoint) {\n\t\tview._project.removeOn(type);\n\t\tprevented = called = false;\n\t\treturn (dragItem && emitMouseEvent(dragItem, null, type, event,\n\t\t\t\t\tpoint, prevPoint)\n\t\t\t|| hitItem && hitItem !== dragItem\n\t\t\t\t&& !hitItem.isDescendant(dragItem)\n\t\t\t\t&& emitMouseEvent(hitItem, null, type, event, point, prevPoint,\n\t\t\t\t\tdragItem)\n\t\t\t|| emitMouseEvent(view, dragItem || hitItem || view, type, event,\n\t\t\t\t\tpoint, prevPoint));\n\t}\n\n\tvar itemEventsMap = {\n\t\tmousedown: {\n\t\t\tmousedown: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmouseup: {\n\t\t\tmouseup: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmousemove: {\n\t\t\tmousedrag: 1,\n\t\t\tmousemove: 1,\n\t\t\tmouseenter: 1,\n\t\t\tmouseleave: 1\n\t\t}\n\t};\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleMouseEvent: function(type, event, point) {\n\t\t\tvar itemEvents = this._itemEvents,\n\t\t\t\thitItems = itemEvents.native[type],\n\t\t\t\tnativeMove = type === 'mousemove',\n\t\t\t\ttool = this._scope.tool,\n\t\t\t\tview = this;\n\n\t\t\tfunction responds(type) {\n\t\t\t\treturn itemEvents.virtual[type] || view.responds(type)\n\t\t\t\t\t\t|| tool && tool.responds(type);\n\t\t\t}\n\n\t\t\tif (nativeMove && dragging && responds('mousedrag'))\n\t\t\t\ttype = 'mousedrag';\n\t\t\tif (!point)\n\t\t\t\tpoint = this.getEventPoint(event);\n\n\t\t\tvar inView = this.getBounds().contains(point),\n\t\t\t\thit = hitItems && inView && view._project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\thitItem = hit && hit.item || null,\n\t\t\t\thandle = false,\n\t\t\t\tmouse = {};\n\t\t\tmouse[type.substr(5)] = true;\n\n\t\t\tif (hitItems && hitItem !== overItem) {\n\t\t\t\tif (overItem) {\n\t\t\t\t\temitMouseEvent(overItem, null, 'mouseleave', event, point);\n\t\t\t\t}\n\t\t\t\tif (hitItem) {\n\t\t\t\t\temitMouseEvent(hitItem, null, 'mouseenter', event, point);\n\t\t\t\t}\n\t\t\t\toverItem = hitItem;\n\t\t\t}\n\t\t\tif (wasInView ^ inView) {\n\t\t\t\temitMouseEvent(this, null, inView ? 'mouseenter' : 'mouseleave',\n\t\t\t\t\t\tevent, point);\n\t\t\t\toverView = inView ? this : null;\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\tif ((inView || mouse.drag) && !point.equals(lastPoint)) {\n\t\t\t\temitMouseEvents(this, hitItem, nativeMove ? type : 'mousemove',\n\t\t\t\t\t\tevent, point, lastPoint);\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\twasInView = inView;\n\t\t\tif (mouse.down && inView || mouse.up && downPoint) {\n\t\t\t\temitMouseEvents(this, hitItem, type, event, point, downPoint);\n\t\t\t\tif (mouse.down) {\n\t\t\t\t\tdblClick = hitItem === clickItem\n\t\t\t\t\t\t&& (Date.now() - clickTime < 300);\n\t\t\t\t\tdownItem = clickItem = hitItem;\n\t\t\t\t\tif (!prevented && hitItem) {\n\t\t\t\t\t\tvar item = hitItem;\n\t\t\t\t\t\twhile (item && !item.responds('mousedrag'))\n\t\t\t\t\t\t\titem = item._parent;\n\t\t\t\t\t\tif (item)\n\t\t\t\t\t\t\tdragItem = hitItem;\n\t\t\t\t\t}\n\t\t\t\t\tdownPoint = point;\n\t\t\t\t} else if (mouse.up) {\n\t\t\t\t\tif (!prevented && hitItem === downItem) {\n\t\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\t\temitMouseEvents(this, hitItem, dblClick ? 'doubleclick'\n\t\t\t\t\t\t\t\t: 'click', event, point, downPoint);\n\t\t\t\t\t\tdblClick = false;\n\t\t\t\t\t}\n\t\t\t\t\tdownItem = dragItem = null;\n\t\t\t\t}\n\t\t\t\twasInView = false;\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\tlastPoint = point;\n\t\t\tif (handle && tool) {\n\t\t\t\tcalled = tool._handleMouseEvent(type, event, point, mouse)\n\t\t\t\t\t|| called;\n\t\t\t}\n\n\t\t\tif (called && !mouse.move || mouse.down && responds('mouseup'))\n\t\t\t\tevent.preventDefault();\n\t\t},\n\n\t\t_handleKeyEvent: function(type, event, key, character) {\n\t\t\tvar scope = this._scope,\n\t\t\t\ttool = scope.tool,\n\t\t\t\tkeyEvent;\n\n\t\t\tfunction emit(obj) {\n\t\t\t\tif (obj.responds(type)) {\n\t\t\t\t\tpaper = scope;\n\t\t\t\t\tobj.emit(type, keyEvent = keyEvent\n\t\t\t\t\t\t\t|| new KeyEvent(type, event, key, character));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isVisible()) {\n\t\t\t\temit(this);\n\t\t\t\tif (tool && tool.responds(type))\n\t\t\t\t\temit(tool);\n\t\t\t}\n\t\t},\n\n\t\t_countItemEvent: function(type, sign) {\n\t\t\tvar itemEvents = this._itemEvents,\n\t\t\t\tnative = itemEvents.native,\n\t\t\t\tvirtual = itemEvents.virtual;\n\t\t\tfor (var key in itemEventsMap) {\n\t\t\t\tnative[key] = (native[key] || 0)\n\t\t\t\t\t\t+ (itemEventsMap[key][type] || 0) * sign;\n\t\t\t}\n\t\t\tvirtual[type] = (virtual[type] || 0) + sign;\n\t\t},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif (!(canvas instanceof window.HTMLCanvasElement)) {\n\t\t\tvar size = Size.read(arguments, 1);\n\t\t\tif (size.isZero())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t+ Base.slice(arguments, 1));\n\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t}\n\t\tvar ctx = this._context = canvas.getContext('2d');\n\t\tctx.save();\n\t\tthis._pixelRatio = 1;\n\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(ctx,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t\tthis._needsUpdate = true;\n\t},\n\n\tremove: function remove() {\n\t\tthis._context.restore();\n\t\treturn remove.base.call(this);\n\t},\n\n\t_setElementSize: function _setElementSize(width, height) {\n\t\tvar pixelRatio = this._pixelRatio;\n\t\t_setElementSize.base.call(this, width * pixelRatio, height * pixelRatio);\n\t\tif (pixelRatio !== 1) {\n\t\t\tvar element = this._element,\n\t\t\t\tctx = this._context;\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tctx.restore();\n\t\t\tctx.save();\n\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function getPixelSize(size) {\n\t\tvar agent = paper.agent,\n\t\t\tpixels;\n\t\tif (agent && agent.firefox) {\n\t\t\tpixels = getPixelSize.base.call(this, size);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tif (!this._needsUpdate)\n\t\t\treturn false;\n\t\tvar project = this._project,\n\t\t\tctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tif (project)\n\t\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tthis._needsUpdate = false;\n\t\treturn true;\n\t}\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t\tthis.type = event && event.type;\n\t},\n\n\tprevented: false,\n\tstopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.prevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.stopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetTimeStamp: function() {\n\t\treturn this.event.timeStamp;\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(type, event, key, character) {\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tvar keyLookup = {\n\t\t\t'\\t': 'tab',\n\t\t\t' ': 'space',\n\t\t\t'\\b': 'backspace',\n\t\t\t'\\x7f': 'delete',\n\t\t\t'Spacebar': 'space',\n\t\t\t'Del': 'delete',\n\t\t\t'Win': 'meta',\n\t\t\t'Esc': 'escape'\n\t\t},\n\n\t\tcharLookup = {\n\t\t\t'tab': '\\t',\n\t\t\t'space': ' ',\n\t\t\t'enter': '\\r'\n\t\t},\n\n\t\tkeyMap = {},\n\t\tcharMap = {},\n\t\tmetaFixMap,\n\t\tdownKey,\n\n\t\tmodifiers = new Base({\n\t\t\tshift: false,\n\t\t\tcontrol: false,\n\t\t\talt: false,\n\t\t\tmeta: false,\n\t\t\tcapsLock: false,\n\t\t\tspace: false\n\t\t}).inject({\n\t\t\toption: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.alt;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tcommand: {\n\t\t\t\tget: function() {\n\t\t\t\t\tvar agent = paper && paper.agent;\n\t\t\t\t\treturn agent && agent.mac ? this.meta : this.control;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\tfunction getKey(event) {\n\t\tvar key = event.key || event.keyIdentifier;\n\t\tkey = /^U\\+/.test(key)\n\t\t\t\t? String.fromCharCode(parseInt(key.substr(2), 16))\n\t\t\t\t: /^Arrow[A-Z]/.test(key) ? key.substr(5)\n\t\t\t\t: key === 'Unidentified'  || key === undefined\n\t\t\t\t\t? String.fromCharCode(event.keyCode)\n\t\t\t\t\t: key;\n\t\treturn keyLookup[key] ||\n\t\t\t\t(key.length > 1 ? Base.hyphenate(key) : key.toLowerCase());\n\t}\n\n\tfunction handleKey(down, key, character, event) {\n\t\tvar type = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharMap[key] = character;\n\t\t} else {\n\t\t\tdelete charMap[key];\n\t\t}\n\t\tif (key.length > 1 && (name = Base.camelize(key)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar agent = paper && paper.agent;\n\t\t\tif (name === 'meta' && agent && agent.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tmetaFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var k in metaFixMap) {\n\t\t\t\t\t\tif (k in charMap)\n\t\t\t\t\t\t\thandleKey(false, k, metaFixMap[k], event);\n\t\t\t\t\t}\n\t\t\t\t\tmetaFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && metaFixMap) {\n\t\t\tmetaFixMap[key] = character;\n\t\t}\n\t\tif (view) {\n\t\t\tview._handleKeyEvent(down ? 'keydown' : 'keyup', event, key,\n\t\t\t\t\tcharacter);\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar key = getKey(event),\n\t\t\t\tagent = paper && paper.agent;\n\t\t\tif (key.length > 1 || agent && (agent.chrome && (event.altKey\n\t\t\t\t\t\t|| agent.mac && event.metaKey\n\t\t\t\t\t\t|| !agent.mac && event.ctrlKey))) {\n\t\t\t\thandleKey(true, key,\n\t\t\t\t\t\tcharLookup[key] || (key.length > 1 ? '' : key), event);\n\t\t\t} else {\n\t\t\t\tdownKey = key;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downKey) {\n\t\t\t\tvar key = getKey(event),\n\t\t\t\t\tcode = event.charCode,\n\t\t\t\t\tcharacter = code >= 32 ? String.fromCharCode(code)\n\t\t\t\t\t\t: key.length > 1 ? '' : key;\n\t\t\t\tif (key !== downKey) {\n\t\t\t\t\tkey = character.toLowerCase();\n\t\t\t\t}\n\t\t\t\thandleKey(true, key, character, event);\n\t\t\t\tdownKey = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar key = getKey(event);\n\t\t\tif (key in charMap)\n\t\t\t\thandleKey(false, key, charMap[key], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var key in charMap)\n\t\t\t\thandleKey(false, key, charMap[key], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn this.tool[/^mouse(down|up)$/.test(this.type)\n\t\t\t\t? '_downCount' : '_moveCount'];\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onActivate', 'onDeactivate', 'onEditOptions', 'onKeyDown',\n\t\t\t'onKeyUp'],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._moveCount = -1;\n\t\tthis._downCount = -1;\n\t\tthis.set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = this._maxDistance = distance;\n\t},\n\n\t_handleMouseEvent: function(type, event, point, mouse) {\n\t\tpaper = this._scope;\n\t\tif (mouse.drag && !this.responds(type))\n\t\t\ttype = 'mousemove';\n\t\tvar move = mouse.move || mouse.drag,\n\t\t\tresponds = this.responds(type),\n\t\t\tminDistance = this.minDistance,\n\t\t\tmaxDistance = this.maxDistance,\n\t\t\tcalled = false,\n\t\t\ttool = this;\n\t\tfunction update(minDistance, maxDistance) {\n\t\t\tvar pt = point,\n\t\t\t\ttoolPoint = move ? tool._point : (tool._downPoint || pt);\n\t\t\tif (move) {\n\t\t\t\tif (tool._moveCount && pt.equals(toolPoint)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (toolPoint && (minDistance != null || maxDistance != null)) {\n\t\t\t\t\tvar vector = pt.subtract(toolPoint),\n\t\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\t\tif (distance < (minDistance || 0))\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tif (maxDistance) {\n\t\t\t\t\t\tpt = toolPoint.add(vector.normalize(\n\t\t\t\t\t\t\t\tMath.min(distance, maxDistance)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttool._moveCount++;\n\t\t\t}\n\t\t\ttool._point = pt;\n\t\t\ttool._lastPoint = toolPoint || pt;\n\t\t\tif (mouse.down) {\n\t\t\t\ttool._moveCount = -1;\n\t\t\t\ttool._downPoint = pt;\n\t\t\t\ttool._downCount++;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tfunction emit() {\n\t\t\tif (responds) {\n\t\t\t\tcalled = tool.emit(type, new ToolEvent(tool, type, event))\n\t\t\t\t\t\t|| called;\n\t\t\t}\n\t\t}\n\n\t\tif (mouse.down) {\n\t\t\tupdate();\n\t\t\temit();\n\t\t} else if (mouse.up) {\n\t\t\tupdate(null, maxDistance);\n\t\t\temit();\n\t\t} else if (responds) {\n\t\t\twhile (update(minDistance, maxDistance))\n\t\t\t\temit();\n\t\t}\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(options) {\n\t\tvar xhr = new self.XMLHttpRequest();\n\t\txhr.open((options.method || 'get').toUpperCase(), options.url,\n\t\t\t\tBase.pick(options.async, true));\n\t\tif (options.mimeType)\n\t\t\txhr.overrideMimeType(options.mimeType);\n\t\txhr.onload = function() {\n\t\t\tvar status = xhr.status;\n\t\t\tif (status === 0 || status === 200) {\n\t\t\t\tif (options.onLoad) {\n\t\t\t\t\toptions.onLoad.call(xhr, xhr.responseText);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\txhr.onerror();\n\t\t\t}\n\t\t};\n\t\txhr.onerror = function() {\n\t\t\tvar status = xhr.status,\n\t\t\t\tmessage = 'Could not load \"' + options.url + '\" (Status: '\n\t\t\t\t\t\t+ status + ')';\n\t\t\tif (options.onError) {\n\t\t\t\toptions.onError(message, status);\n\t\t\t} else {\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tif (!window)\n\t\t\treturn null;\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t\tclear = false;\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (!ctx) {\n\t\t\tthrow new Error('Canvas ' + canvas +\n\t\t\t\t\t' is unable to provide a 2D context.');\n\t\t}\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\tvar canvas = this.getCanvas(width, height);\n\t\treturn canvas ? canvas.getContext('2d') : null;\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj && obj.canvas ? obj.canvas : obj;\n\t\tif (canvas && canvas.getContext) {\n\t\t\tcanvas.getContext('2d').restore();\n\t\t\tthis.canvases.push(canvas);\n\t\t}\n\t}\n};\n\nvar BlendMode = new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tif (ctx) {\n\t\tBase.each(modes, function(func, mode) {\n\t\t\tvar darken = mode === 'darken',\n\t\t\t\tok = false;\n\t\t\tctx.save();\n\t\t\ttry {\n\t\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tctx.globalCompositeOperation = mode;\n\t\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken\n\t\t\t\t\t\t\t? 170 : 51;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t\tctx.restore();\n\t\t\tnativeModes[mode] = ok;\n\t\t});\n\t\tCanvasProvider.release(ctx);\n\t}\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SvgElement = new function() {\n\tvar svg = 'http://www.w3.org/2000/svg',\n\t\txmlns = 'http://www.w3.org/2000/xmlns',\n\t\txlink = 'http://www.w3.org/1999/xlink',\n\t\tattributeNamespace = {\n\t\t\thref: xlink,\n\t\t\txlink: xmlns,\n\t\t\txmlns: xmlns + '/',\n\t\t\t'xmlns:xlink': xmlns + '/'\n\t\t};\n\n\tfunction create(tag, attributes, formatter) {\n\t\treturn set(document.createElementNS(svg, tag), attributes, formatter);\n\t}\n\n\tfunction get(node, name) {\n\t\tvar namespace = attributeNamespace[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\treturn value === 'null' ? null : value;\n\t}\n\n\tfunction set(node, attributes, formatter) {\n\t\tfor (var name in attributes) {\n\t\t\tvar value = attributes[name],\n\t\t\t\tnamespace = attributeNamespace[name];\n\t\t\tif (typeof value === 'number' && formatter)\n\t\t\t\tvalue = formatter.number(value);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, name, value);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(name, value);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\treturn {\n\t\tsvg: svg,\n\t\txmlns: xmlns,\n\t\txlink: xlink,\n\n\t\tcreate: create,\n\t\tget: get,\n\t\tset: set\n\t};\n};\n\nvar SvgStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tfillRule: ['fill-rule', 'string'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'style']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nnew function() {\n\tvar formatter;\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix._shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling,\n\t\t\t\t\tskew = decomposed.skewing;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (skew.x)\n\t\t\t\t\tparts.push('skewX(' + formatter.number(skew.x) + ')');\n\t\t\t\tif (skew.y)\n\t\t\t\t\tparts.push('skewY(' + formatter.number(skew.y) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = SvgElement.create('g', attrs, formatter);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = SvgElement.create('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tSvgElement.set(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages == false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn SvgElement.create('image', attrs, formatter);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\tlength = segments.length,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (matchShapes && length >= 2 && !item.hasHandles()) {\n\t\t\tif (length > 2) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\t}\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar start = segments[0]._point,\n\t\t\t\t\tend = segments[1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: start.x,\n\t\t\t\t\ty1: start.y,\n\t\t\t\t\tx2: end.x,\n\t\t\t\t\ty2: end.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn SvgElement.create(type, attrs, formatter);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn SvgElement.create(type, attrs, formatter);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn SvgElement.create('path', attrs, formatter);\n\t}\n\n\tfunction exportSymbolItem(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tdefinition = item._definition,\n\t\t\tnode = getDefinition(definition, 'symbol'),\n\t\t\tdefinitionItem = definition._item,\n\t\t\tbounds = definitionItem.getBounds();\n\t\tif (!node) {\n\t\t\tnode = SvgElement.create('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tnode.appendChild(exportSVG(definitionItem, options));\n\t\t\tsetDefinition(definition, node, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + node.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = bounds.width;\n\t\tattrs.height = bounds.height;\n\t\tattrs.overflow = 'visible';\n\t\treturn SvgElement.create('use', attrs, formatter);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin(),\n\t\t\t\tdestination = color.getDestination(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = SvgElement.create((radial ? 'radial' : 'linear')\n\t\t\t\t\t+ 'Gradient', attrs, formatter);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha(),\n\t\t\t\t\toffset = stop._offset;\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: offset == null ? i / (l - 1) : offset\n\t\t\t\t};\n\t\t\t\tif (stopColor)\n\t\t\t\t\tattrs['stop-color'] = stopColor.toCSS(true);\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(\n\t\t\t\t\t\tSvgElement.create('stop', attrs, formatter));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = SvgElement.create('text', getTransform(item._matrix, true),\n\t\t\t\tformatter);\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tSymbolItem: exportSymbolItem,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent(),\n\t\t\tstyle = [];\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SvgStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tif (type === 'style') {\n\t\t\t\t\tstyle.push(entry.attribute + ': ' + value);\n\t\t\t\t} else {\n\t\t\t\t\tattrs[entry.attribute] = value == null ? 'none'\n\t\t\t\t\t\t\t: type === 'color' ? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array' ? value.join(',')\n\t\t\t\t\t\t\t: type === 'lookup' ? entry.toSVG[value]\n\t\t\t\t\t\t\t: value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (style.length)\n\t\t\tattrs.style = style.join(';');\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn SvgElement.set(node, attrs, formatter);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-'\n\t\t\t\t+ (item._id || item.__id || (item.__id = UID.get('svg')))];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar typeId = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + typeId;\n\t\tdefinitions.svgs[type + '-' + (item._id || item.__id)] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = SvgElement.create('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(SvgElement.create('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new self.XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar children = this._children,\n\t\t\t\tview = this.getView(),\n\t\t\t\tbounds = Base.pick(options.bounds, 'view'),\n\t\t\t\tmx = options.matrix || bounds === 'view' && view._matrix,\n\t\t\t\tmatrix = mx && Matrix.read([mx]),\n\t\t\t\trect = bounds === 'view'\n\t\t\t\t\t? new Rectangle([0, 0], view.getViewSize())\n\t\t\t\t\t: bounds === 'content'\n\t\t\t\t\t\t? Item._getBounds(children, matrix, { stroke: true })\n\t\t\t\t\t\t\t.rect\n\t\t\t\t\t\t: Rectangle.read([bounds], 0, { readNull: true }),\n\t\t\t\tattrs = {\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: SvgElement.svg,\n\t\t\t\t\t'xmlns:xlink': SvgElement.xlink,\n\t\t\t\t};\n\t\t\tif (rect) {\n\t\t\t\tattrs.width = rect.width;\n\t\t\t\tattrs.height = rect.height;\n\t\t\t\tif (rect.x || rect.y)\n\t\t\t\t\tattrs.viewBox = formatter.rectangle(rect);\n\t\t\t}\n\t\t\tvar node = SvgElement.create('svg', attrs, formatter),\n\t\t\t\tparent = node;\n\t\t\tif (matrix && !matrix.isIdentity()) {\n\t\t\t\tparent = node.appendChild(SvgElement.create('g',\n\t\t\t\t\t\tgetTransform(matrix), formatter));\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tparent.appendChild(exportSVG(children[i], options, true));\n\t\t\t}\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tvar definitions = {},\n\t\trootSize;\n\n\tfunction getValue(node, name, isString, allowNull, allowPercent) {\n\t\tvar value = SvgElement.get(node, name),\n\t\t\tres = value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString ? '' : 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t\treturn /%\\s*$/.test(value)\n\t\t\t? (res / 100) * (allowPercent ? 1\n\t\t\t\t: rootSize[/x|^width/.test(name) ? 'width' : 'height'])\n\t\t\t: res;\n\t}\n\n\tfunction getPoint(node, x, y, allowNull, allowPercent) {\n\t\tx = getValue(node, x || 'x', false, allowNull, allowPercent);\n\t\ty = getValue(node, y || 'y', false, allowNull, allowPercent);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull, allowPercent) {\n\t\tw = getValue(node, w || 'width', false, allowNull, allowPercent);\n\t\th = getValue(node, h || 'height', false, allowNull, allowPercent);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none' ? null\n\t\t\t\t: type === 'number' ? parseFloat(value)\n\t\t\t\t: type === 'array' ?\n\t\t\t\t\tvalue ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t: type === 'color' ? getDefinition(value) || value\n\t\t\t\t: type === 'lookup' ? lookup[value]\n\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\tisDefs = type === 'defs',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip && !isDefs) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportNode(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& !/^defs$/i.test(childNode.nodeName)\n\t\t\t\t\t&& (child = importNode(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof SymbolDefinition))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || isDefs) {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\treturn PathItem.create(node.getAttribute('d'));\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tradial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t\tif (gradient._radial ^ radial) {\n\t\t\t\tgradient = gradient.clone();\n\t\t\t\tgradient._radial = radial;\n\t\t\t}\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, radial);\n\t\t}\n\t\tvar origin, destination, highlight,\n\t\t\tscaleToBounds = getValue(node, 'gradientUnits', true) !==\n\t\t\t\t'userSpaceOnUse';\n\t\tif (radial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy', false, scaleToBounds);\n\t\t\tdestination = origin.add(\n\t\t\t\t\tgetValue(node, 'r', false, false, scaleToBounds), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true, scaleToBounds);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1', false, scaleToBounds);\n\t\t\tdestination = getPoint(node, 'x2', 'y2', false, scaleToBounds);\n\t\t}\n\t\tvar color = applyAttributes(\n\t\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\tcolor._scaleToBounds = scaleToBounds;\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\treturn importNode(child, options, isRoot);\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node);\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node).add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new SymbolDefinition(\n\t\t\t\t\timportGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node);\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof SymbolDefinition\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(\n\t\t\t\t\tgetPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\treturn new Shape.Rectangle(new Rectangle(\n\t\t\t\t\t\tgetPoint(node),\n\t\t\t\t\t\tgetSize(node)\n\t\t\t\t\t), getSize(node, 'rx', 'ry'));\n\t\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(\n\t\t\t\t\tgetPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node).add(\n\t\t\t\t\tgetPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tif (item.transform) {\n\t\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\t\tmatrix = new Matrix();\n\t\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\t\tvar transform = transforms[i];\n\t\t\t\tif (!transform)\n\t\t\t\t\tbreak;\n\t\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\t\tcommand = parts[0],\n\t\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\t\tswitch (command) {\n\t\t\t\tcase 'matrix':\n\t\t\t\t\tmatrix.append(\n\t\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'translate':\n\t\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'scale':\n\t\t\t\t\tmatrix.scale(v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewX':\n\t\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewY':\n\t\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\titem.transform(matrix);\n\t\t}\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar key = name === 'fill-opacity' ? 'getFillColor' : 'getStrokeColor',\n\t\t\tcolor = item[key] && item[key]();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SvgStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\tif (item[entry.set]) {\n\t\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\t\tif (entry.type === 'color') {\n\t\t\t\t\tvar color = item[entry.get]();\n\t\t\t\t\tif (color) {\n\t\t\t\t\t\tif (color._scaleToBounds) {\n\t\t\t\t\t\t\tvar bounds = item.getBounds();\n\t\t\t\t\t\t\tcolor.transform(new Matrix()\n\t\t\t\t\t\t\t\t.translate(bounds.getPoint())\n\t\t\t\t\t\t\t\t.scale(bounds.getSize()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\tif (item.setVisible)\n\t\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\tif (item.setVisible)\n\t\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tif (item.setOffset) {\n\t\t\t\tvar percent = value.match(/(.*)%$/);\n\t\t\t\titem.setOffset(percent ? percent[1] / 100 : parseFloat(value));\n\t\t\t}\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, null, null, true),\n\t\t\t\tgroup,\n\t\t\t\tmatrix;\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? size.divide(rect.getSize()) : 1,\n\t\t\t\tmatrix = new Matrix().scale(scale)\n\t\t\t\t\t\t.translate(rect.getPoint().negate());\n\t\t\t\tgroup = item;\n\t\t\t} else if (item instanceof SymbolDefinition) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tgroup = item._item;\n\t\t\t}\n\t\t\tif (group)  {\n\t\t\t\tif (getAttribute(node, 'overflow', styles) !== 'visible') {\n\t\t\t\t\tvar clip = new Shape.Rectangle(rect);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t\tif (matrix)\n\t\t\t\t\tgroup.transform(matrix);\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value ? undefined\n\t\t\t\t: value === 'none' ? null\n\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tif (node.style) {\n\t\t\tvar parent = node.parentNode,\n\t\t\t\tstyles = {\n\t\t\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\t\t\tparent: !isRoot && !/^defs$/i.test(parent.tagName)\n\t\t\t\t\t\t\t&& DomElement.getStyles(parent) || {}\n\t\t\t\t};\n\t\t\tBase.each(attributes, function(apply, name) {\n\t\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\t\titem = value !== undefined\n\t\t\t\t\t\t&& apply(item, value, name, node, styles) || item;\n\t\t\t});\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:[\"'#]*)([^\"')]+)/),\n\t\t\tname = match && match[1],\n\t\t\tres = name && definitions[window\n\t\t\t\t\t? name.replace(window.location.href.split('#')[0] + '#', '')\n\t\t\t\t\t: name];\n\t\tif (res && res._scaleToBounds) {\n\t\t\tres = res.clone();\n\t\t\tres._scaleToBounds = true;\n\t\t}\n\t\treturn res;\n\t}\n\n\tfunction importNode(node, options, isRoot) {\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\tisElement = type !== '#document',\n\t\t\tbody = document.body,\n\t\t\tcontainer,\n\t\t\tparent,\n\t\t\tnext;\n\t\tif (isRoot && isElement) {\n\t\t\trootSize = paper.getView().getSize();\n\t\t\trootSize = getSize(node, null, null, true) || rootSize;\n\t\t\tcontainer = SvgElement.create('svg', {\n\t\t\t\tstyle: 'stroke-width: 1px; stroke-miterlimit: 10'\n\t\t\t});\n\t\t\tparent = node.parentNode;\n\t\t\tnext = node.nextSibling;\n\t\t\tcontainer.appendChild(node);\n\t\t\tbody.appendChild(container);\n\t\t}\n\t\tvar settings = paper.settings,\n\t\t\tapplyMatrix = settings.applyMatrix,\n\t\t\tinsertItems = settings.insertItems;\n\t\tsettings.applyMatrix = false;\n\t\tsettings.insertItems = false;\n\t\tvar importer = importers[type],\n\t\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.insertItems = insertItems;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (isElement && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport,\n\t\t\t\tdata = isElement && node.getAttribute('data-paper-data');\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (container) {\n\t\t\tbody.removeChild(container);\n\t\t\tif (parent) {\n\t\t\t\tif (next) {\n\t\t\t\t\tparent.insertBefore(node, next);\n\t\t\t\t} else {\n\t\t\t\t\tparent.appendChild(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importSVG(source, options, owner) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\toptions = typeof options === 'function' ? { onLoad: options }\n\t\t\t\t: options || {};\n\t\tvar scope = paper,\n\t\t\titem = null;\n\n\t\tfunction onLoad(svg) {\n\t\t\ttry {\n\t\t\t\tvar node = typeof svg === 'object' ? svg : new self.DOMParser()\n\t\t\t\t\t\t.parseFromString(svg, 'image/svg+xml');\n\t\t\t\tif (!node.nodeName) {\n\t\t\t\t\tnode = null;\n\t\t\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\t\t\t}\n\t\t\t\tpaper = scope;\n\t\t\t\titem = importNode(node, options, true);\n\t\t\t\tif (!options || options.insert !== false) {\n\t\t\t\t\towner._insertItem(undefined, item);\n\t\t\t\t}\n\t\t\t\tvar onLoad = options.onLoad;\n\t\t\t\tif (onLoad)\n\t\t\t\t\tonLoad(item, svg);\n\t\t\t} catch (e) {\n\t\t\t\tonError(e);\n\t\t\t}\n\t\t}\n\n\t\tfunction onError(message, status) {\n\t\t\tvar onError = options.onError;\n\t\t\tif (onError) {\n\t\t\t\tonError(message, status);\n\t\t\t} else {\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\tvar node = document.getElementById(source);\n\t\t\tif (node) {\n\t\t\t\tonLoad(node);\n\t\t\t} else {\n\t\t\t\tHttp.request({\n\t\t\t\t\turl: source,\n\t\t\t\t\tasync: true,\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = function() {\n\t\t\t\tonLoad(reader.result);\n\t\t\t};\n\t\t\treader.onerror = function() {\n\t\t\t\tonError(reader.error);\n\t\t\t};\n\t\t\treturn reader.readAsText(source);\n\t\t} else {\n\t\t\tonLoad(source);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn importSVG(node, options, this);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, this);\n\t\t}\n\t});\n};\n\nBase.exports.PaperScript = function() {\n\tvar global = this,\n\t\tacorn = global.acorn;\n\tif (!acorn && \"function\" !== 'undefined') {\n\t\ttry { acorn = __webpack_require__(\"7N8s\"); } catch(e) {}\n\t}\n\tif (!acorn) {\n\t\tvar exports, module;\n\t\tacorn = exports = module = {};\n\n(function(root, mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") return mod(exports);\n  if (true) return !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (mod),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  mod(root.acorn || (root.acorn = {}));\n})(this, function(exports) {\n  \"use strict\";\n\n  exports.version = \"0.5.0\";\n\n  var options, input, inputLen, sourceFile;\n\n  exports.parse = function(inpt, opts) {\n\tinput = String(inpt); inputLen = input.length;\n\tsetOptions(opts);\n\tinitTokenState();\n\treturn parseTopLevel(options.program);\n  };\n\n  var defaultOptions = exports.defaultOptions = {\n\tecmaVersion: 5,\n\tstrictSemicolons: false,\n\tallowTrailingCommas: true,\n\tforbidReserved: false,\n\tallowReturnOutsideFunction: false,\n\tlocations: false,\n\tonComment: null,\n\tranges: false,\n\tprogram: null,\n\tsourceFile: null,\n\tdirectSourceFile: null\n  };\n\n  function setOptions(opts) {\n\toptions = opts || {};\n\tfor (var opt in defaultOptions) if (!Object.prototype.hasOwnProperty.call(options, opt))\n\t  options[opt] = defaultOptions[opt];\n\tsourceFile = options.sourceFile || null;\n  }\n\n  var getLineInfo = exports.getLineInfo = function(input, offset) {\n\tfor (var line = 1, cur = 0;;) {\n\t  lineBreak.lastIndex = cur;\n\t  var match = lineBreak.exec(input);\n\t  if (match && match.index < offset) {\n\t\t++line;\n\t\tcur = match.index + match[0].length;\n\t  } else break;\n\t}\n\treturn {line: line, column: offset - cur};\n  };\n\n  exports.tokenize = function(inpt, opts) {\n\tinput = String(inpt); inputLen = input.length;\n\tsetOptions(opts);\n\tinitTokenState();\n\n\tvar t = {};\n\tfunction getToken(forceRegexp) {\n\t  lastEnd = tokEnd;\n\t  readToken(forceRegexp);\n\t  t.start = tokStart; t.end = tokEnd;\n\t  t.startLoc = tokStartLoc; t.endLoc = tokEndLoc;\n\t  t.type = tokType; t.value = tokVal;\n\t  return t;\n\t}\n\tgetToken.jumpTo = function(pos, reAllowed) {\n\t  tokPos = pos;\n\t  if (options.locations) {\n\t\ttokCurLine = 1;\n\t\ttokLineStart = lineBreak.lastIndex = 0;\n\t\tvar match;\n\t\twhile ((match = lineBreak.exec(input)) && match.index < pos) {\n\t\t  ++tokCurLine;\n\t\t  tokLineStart = match.index + match[0].length;\n\t\t}\n\t  }\n\t  tokRegexpAllowed = reAllowed;\n\t  skipSpace();\n\t};\n\treturn getToken;\n  };\n\n  var tokPos;\n\n  var tokStart, tokEnd;\n\n  var tokStartLoc, tokEndLoc;\n\n  var tokType, tokVal;\n\n  var tokRegexpAllowed;\n\n  var tokCurLine, tokLineStart;\n\n  var lastStart, lastEnd, lastEndLoc;\n\n  var inFunction, labels, strict;\n\n  function raise(pos, message) {\n\tvar loc = getLineInfo(input, pos);\n\tmessage += \" (\" + loc.line + \":\" + loc.column + \")\";\n\tvar err = new SyntaxError(message);\n\terr.pos = pos; err.loc = loc; err.raisedAt = tokPos;\n\tthrow err;\n  }\n\n  var empty = [];\n\n  var _num = {type: \"num\"}, _regexp = {type: \"regexp\"}, _string = {type: \"string\"};\n  var _name = {type: \"name\"}, _eof = {type: \"eof\"};\n\n  var _break = {keyword: \"break\"}, _case = {keyword: \"case\", beforeExpr: true}, _catch = {keyword: \"catch\"};\n  var _continue = {keyword: \"continue\"}, _debugger = {keyword: \"debugger\"}, _default = {keyword: \"default\"};\n  var _do = {keyword: \"do\", isLoop: true}, _else = {keyword: \"else\", beforeExpr: true};\n  var _finally = {keyword: \"finally\"}, _for = {keyword: \"for\", isLoop: true}, _function = {keyword: \"function\"};\n  var _if = {keyword: \"if\"}, _return = {keyword: \"return\", beforeExpr: true}, _switch = {keyword: \"switch\"};\n  var _throw = {keyword: \"throw\", beforeExpr: true}, _try = {keyword: \"try\"}, _var = {keyword: \"var\"};\n  var _while = {keyword: \"while\", isLoop: true}, _with = {keyword: \"with\"}, _new = {keyword: \"new\", beforeExpr: true};\n  var _this = {keyword: \"this\"};\n\n  var _null = {keyword: \"null\", atomValue: null}, _true = {keyword: \"true\", atomValue: true};\n  var _false = {keyword: \"false\", atomValue: false};\n\n  var _in = {keyword: \"in\", binop: 7, beforeExpr: true};\n\n  var keywordTypes = {\"break\": _break, \"case\": _case, \"catch\": _catch,\n\t\t\t\t\t  \"continue\": _continue, \"debugger\": _debugger, \"default\": _default,\n\t\t\t\t\t  \"do\": _do, \"else\": _else, \"finally\": _finally, \"for\": _for,\n\t\t\t\t\t  \"function\": _function, \"if\": _if, \"return\": _return, \"switch\": _switch,\n\t\t\t\t\t  \"throw\": _throw, \"try\": _try, \"var\": _var, \"while\": _while, \"with\": _with,\n\t\t\t\t\t  \"null\": _null, \"true\": _true, \"false\": _false, \"new\": _new, \"in\": _in,\n\t\t\t\t\t  \"instanceof\": {keyword: \"instanceof\", binop: 7, beforeExpr: true}, \"this\": _this,\n\t\t\t\t\t  \"typeof\": {keyword: \"typeof\", prefix: true, beforeExpr: true},\n\t\t\t\t\t  \"void\": {keyword: \"void\", prefix: true, beforeExpr: true},\n\t\t\t\t\t  \"delete\": {keyword: \"delete\", prefix: true, beforeExpr: true}};\n\n  var _bracketL = {type: \"[\", beforeExpr: true}, _bracketR = {type: \"]\"}, _braceL = {type: \"{\", beforeExpr: true};\n  var _braceR = {type: \"}\"}, _parenL = {type: \"(\", beforeExpr: true}, _parenR = {type: \")\"};\n  var _comma = {type: \",\", beforeExpr: true}, _semi = {type: \";\", beforeExpr: true};\n  var _colon = {type: \":\", beforeExpr: true}, _dot = {type: \".\"}, _question = {type: \"?\", beforeExpr: true};\n\n  var _slash = {binop: 10, beforeExpr: true}, _eq = {isAssign: true, beforeExpr: true};\n  var _assign = {isAssign: true, beforeExpr: true};\n  var _incDec = {postfix: true, prefix: true, isUpdate: true}, _prefix = {prefix: true, beforeExpr: true};\n  var _logicalOR = {binop: 1, beforeExpr: true};\n  var _logicalAND = {binop: 2, beforeExpr: true};\n  var _bitwiseOR = {binop: 3, beforeExpr: true};\n  var _bitwiseXOR = {binop: 4, beforeExpr: true};\n  var _bitwiseAND = {binop: 5, beforeExpr: true};\n  var _equality = {binop: 6, beforeExpr: true};\n  var _relational = {binop: 7, beforeExpr: true};\n  var _bitShift = {binop: 8, beforeExpr: true};\n  var _plusMin = {binop: 9, prefix: true, beforeExpr: true};\n  var _multiplyModulo = {binop: 10, beforeExpr: true};\n\n  exports.tokTypes = {bracketL: _bracketL, bracketR: _bracketR, braceL: _braceL, braceR: _braceR,\n\t\t\t\t\t  parenL: _parenL, parenR: _parenR, comma: _comma, semi: _semi, colon: _colon,\n\t\t\t\t\t  dot: _dot, question: _question, slash: _slash, eq: _eq, name: _name, eof: _eof,\n\t\t\t\t\t  num: _num, regexp: _regexp, string: _string};\n  for (var kw in keywordTypes) exports.tokTypes[\"_\" + kw] = keywordTypes[kw];\n\n  function makePredicate(words) {\n\twords = words.split(\" \");\n\tvar f = \"\", cats = [];\n\tout: for (var i = 0; i < words.length; ++i) {\n\t  for (var j = 0; j < cats.length; ++j)\n\t\tif (cats[j][0].length == words[i].length) {\n\t\t  cats[j].push(words[i]);\n\t\t  continue out;\n\t\t}\n\t  cats.push([words[i]]);\n\t}\n\tfunction compareTo(arr) {\n\t  if (arr.length == 1) return f += \"return str === \" + JSON.stringify(arr[0]) + \";\";\n\t  f += \"switch(str){\";\n\t  for (var i = 0; i < arr.length; ++i) f += \"case \" + JSON.stringify(arr[i]) + \":\";\n\t  f += \"return true}return false;\";\n\t}\n\n\tif (cats.length > 3) {\n\t  cats.sort(function(a, b) {return b.length - a.length;});\n\t  f += \"switch(str.length){\";\n\t  for (var i = 0; i < cats.length; ++i) {\n\t\tvar cat = cats[i];\n\t\tf += \"case \" + cat[0].length + \":\";\n\t\tcompareTo(cat);\n\t  }\n\t  f += \"}\";\n\n\t} else {\n\t  compareTo(words);\n\t}\n\treturn new Function(\"str\", f);\n  }\n\n  var isReservedWord3 = makePredicate(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\");\n\n  var isReservedWord5 = makePredicate(\"class enum extends super const export import\");\n\n  var isStrictReservedWord = makePredicate(\"implements interface let package private protected public static yield\");\n\n  var isStrictBadIdWord = makePredicate(\"eval arguments\");\n\n  var isKeyword = makePredicate(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\");\n\n  var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  var newline = /[\\n\\r\\u2028\\u2029]/;\n\n  var lineBreak = /\\r\\n|[\\n\\r\\u2028\\u2029]/g;\n\n  var isIdentifierStart = exports.isIdentifierStart = function(code) {\n\tif (code < 65) return code === 36;\n\tif (code < 91) return true;\n\tif (code < 97) return code === 95;\n\tif (code < 123)return true;\n\treturn code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  };\n\n  var isIdentifierChar = exports.isIdentifierChar = function(code) {\n\tif (code < 48) return code === 36;\n\tif (code < 58) return true;\n\tif (code < 65) return false;\n\tif (code < 91) return true;\n\tif (code < 97) return code === 95;\n\tif (code < 123)return true;\n\treturn code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  };\n\n  function line_loc_t() {\n\tthis.line = tokCurLine;\n\tthis.column = tokPos - tokLineStart;\n  }\n\n  function initTokenState() {\n\ttokCurLine = 1;\n\ttokPos = tokLineStart = 0;\n\ttokRegexpAllowed = true;\n\tskipSpace();\n  }\n\n  function finishToken(type, val) {\n\ttokEnd = tokPos;\n\tif (options.locations) tokEndLoc = new line_loc_t;\n\ttokType = type;\n\tskipSpace();\n\ttokVal = val;\n\ttokRegexpAllowed = type.beforeExpr;\n  }\n\n  function skipBlockComment() {\n\tvar startLoc = options.onComment && options.locations && new line_loc_t;\n\tvar start = tokPos, end = input.indexOf(\"*/\", tokPos += 2);\n\tif (end === -1) raise(tokPos - 2, \"Unterminated comment\");\n\ttokPos = end + 2;\n\tif (options.locations) {\n\t  lineBreak.lastIndex = start;\n\t  var match;\n\t  while ((match = lineBreak.exec(input)) && match.index < tokPos) {\n\t\t++tokCurLine;\n\t\ttokLineStart = match.index + match[0].length;\n\t  }\n\t}\n\tif (options.onComment)\n\t  options.onComment(true, input.slice(start + 2, end), start, tokPos,\n\t\t\t\t\t\tstartLoc, options.locations && new line_loc_t);\n  }\n\n  function skipLineComment() {\n\tvar start = tokPos;\n\tvar startLoc = options.onComment && options.locations && new line_loc_t;\n\tvar ch = input.charCodeAt(tokPos+=2);\n\twhile (tokPos < inputLen && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n\t  ++tokPos;\n\t  ch = input.charCodeAt(tokPos);\n\t}\n\tif (options.onComment)\n\t  options.onComment(false, input.slice(start + 2, tokPos), start, tokPos,\n\t\t\t\t\t\tstartLoc, options.locations && new line_loc_t);\n  }\n\n  function skipSpace() {\n\twhile (tokPos < inputLen) {\n\t  var ch = input.charCodeAt(tokPos);\n\t  if (ch === 32) {\n\t\t++tokPos;\n\t  } else if (ch === 13) {\n\t\t++tokPos;\n\t\tvar next = input.charCodeAt(tokPos);\n\t\tif (next === 10) {\n\t\t  ++tokPos;\n\t\t}\n\t\tif (options.locations) {\n\t\t  ++tokCurLine;\n\t\t  tokLineStart = tokPos;\n\t\t}\n\t  } else if (ch === 10 || ch === 8232 || ch === 8233) {\n\t\t++tokPos;\n\t\tif (options.locations) {\n\t\t  ++tokCurLine;\n\t\t  tokLineStart = tokPos;\n\t\t}\n\t  } else if (ch > 8 && ch < 14) {\n\t\t++tokPos;\n\t  } else if (ch === 47) {\n\t\tvar next = input.charCodeAt(tokPos + 1);\n\t\tif (next === 42) {\n\t\t  skipBlockComment();\n\t\t} else if (next === 47) {\n\t\t  skipLineComment();\n\t\t} else break;\n\t  } else if (ch === 160) {\n\t\t++tokPos;\n\t  } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n\t\t++tokPos;\n\t  } else {\n\t\tbreak;\n\t  }\n\t}\n  }\n\n  function readToken_dot() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next >= 48 && next <= 57) return readNumber(true);\n\t++tokPos;\n\treturn finishToken(_dot);\n  }\n\n  function readToken_slash() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (tokRegexpAllowed) {++tokPos; return readRegexp();}\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_slash, 1);\n  }\n\n  function readToken_mult_modulo() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_multiplyModulo, 1);\n  }\n\n  function readToken_pipe_amp(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === code) return finishOp(code === 124 ? _logicalOR : _logicalAND, 2);\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(code === 124 ? _bitwiseOR : _bitwiseAND, 1);\n  }\n\n  function readToken_caret() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_bitwiseXOR, 1);\n  }\n\n  function readToken_plus_min(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === code) {\n\t  if (next == 45 && input.charCodeAt(tokPos + 2) == 62 &&\n\t\t  newline.test(input.slice(lastEnd, tokPos))) {\n\t\ttokPos += 3;\n\t\tskipLineComment();\n\t\tskipSpace();\n\t\treturn readToken();\n\t  }\n\t  return finishOp(_incDec, 2);\n\t}\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_plusMin, 1);\n  }\n\n  function readToken_lt_gt(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tvar size = 1;\n\tif (next === code) {\n\t  size = code === 62 && input.charCodeAt(tokPos + 2) === 62 ? 3 : 2;\n\t  if (input.charCodeAt(tokPos + size) === 61) return finishOp(_assign, size + 1);\n\t  return finishOp(_bitShift, size);\n\t}\n\tif (next == 33 && code == 60 && input.charCodeAt(tokPos + 2) == 45 &&\n\t\tinput.charCodeAt(tokPos + 3) == 45) {\n\t  tokPos += 4;\n\t  skipLineComment();\n\t  skipSpace();\n\t  return readToken();\n\t}\n\tif (next === 61)\n\t  size = input.charCodeAt(tokPos + 2) === 61 ? 3 : 2;\n\treturn finishOp(_relational, size);\n  }\n\n  function readToken_eq_excl(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === 61) return finishOp(_equality, input.charCodeAt(tokPos + 2) === 61 ? 3 : 2);\n\treturn finishOp(code === 61 ? _eq : _prefix, 1);\n  }\n\n  function getTokenFromCode(code) {\n\tswitch(code) {\n\tcase 46:\n\t  return readToken_dot();\n\n\tcase 40: ++tokPos; return finishToken(_parenL);\n\tcase 41: ++tokPos; return finishToken(_parenR);\n\tcase 59: ++tokPos; return finishToken(_semi);\n\tcase 44: ++tokPos; return finishToken(_comma);\n\tcase 91: ++tokPos; return finishToken(_bracketL);\n\tcase 93: ++tokPos; return finishToken(_bracketR);\n\tcase 123: ++tokPos; return finishToken(_braceL);\n\tcase 125: ++tokPos; return finishToken(_braceR);\n\tcase 58: ++tokPos; return finishToken(_colon);\n\tcase 63: ++tokPos; return finishToken(_question);\n\n\tcase 48:\n\t  var next = input.charCodeAt(tokPos + 1);\n\t  if (next === 120 || next === 88) return readHexNumber();\n\tcase 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n\t  return readNumber(false);\n\n\tcase 34: case 39:\n\t  return readString(code);\n\n\tcase 47:\n\t  return readToken_slash(code);\n\n\tcase 37: case 42:\n\t  return readToken_mult_modulo();\n\n\tcase 124: case 38:\n\t  return readToken_pipe_amp(code);\n\n\tcase 94:\n\t  return readToken_caret();\n\n\tcase 43: case 45:\n\t  return readToken_plus_min(code);\n\n\tcase 60: case 62:\n\t  return readToken_lt_gt(code);\n\n\tcase 61: case 33:\n\t  return readToken_eq_excl(code);\n\n\tcase 126:\n\t  return finishOp(_prefix, 1);\n\t}\n\n\treturn false;\n  }\n\n  function readToken(forceRegexp) {\n\tif (!forceRegexp) tokStart = tokPos;\n\telse tokPos = tokStart + 1;\n\tif (options.locations) tokStartLoc = new line_loc_t;\n\tif (forceRegexp) return readRegexp();\n\tif (tokPos >= inputLen) return finishToken(_eof);\n\n\tvar code = input.charCodeAt(tokPos);\n\tif (isIdentifierStart(code) || code === 92 ) return readWord();\n\n\tvar tok = getTokenFromCode(code);\n\n\tif (tok === false) {\n\t  var ch = String.fromCharCode(code);\n\t  if (ch === \"\\\\\" || nonASCIIidentifierStart.test(ch)) return readWord();\n\t  raise(tokPos, \"Unexpected character '\" + ch + \"'\");\n\t}\n\treturn tok;\n  }\n\n  function finishOp(type, size) {\n\tvar str = input.slice(tokPos, tokPos + size);\n\ttokPos += size;\n\tfinishToken(type, str);\n  }\n\n  function readRegexp() {\n\tvar content = \"\", escaped, inClass, start = tokPos;\n\tfor (;;) {\n\t  if (tokPos >= inputLen) raise(start, \"Unterminated regular expression\");\n\t  var ch = input.charAt(tokPos);\n\t  if (newline.test(ch)) raise(start, \"Unterminated regular expression\");\n\t  if (!escaped) {\n\t\tif (ch === \"[\") inClass = true;\n\t\telse if (ch === \"]\" && inClass) inClass = false;\n\t\telse if (ch === \"/\" && !inClass) break;\n\t\tescaped = ch === \"\\\\\";\n\t  } else escaped = false;\n\t  ++tokPos;\n\t}\n\tvar content = input.slice(start, tokPos);\n\t++tokPos;\n\tvar mods = readWord1();\n\tif (mods && !/^[gmsiy]*$/.test(mods)) raise(start, \"Invalid regexp flag\");\n\ttry {\n\t  var value = new RegExp(content, mods);\n\t} catch (e) {\n\t  if (e instanceof SyntaxError) raise(start, e.message);\n\t  raise(e);\n\t}\n\treturn finishToken(_regexp, value);\n  }\n\n  function readInt(radix, len) {\n\tvar start = tokPos, total = 0;\n\tfor (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n\t  var code = input.charCodeAt(tokPos), val;\n\t  if (code >= 97) val = code - 97 + 10;\n\t  else if (code >= 65) val = code - 65 + 10;\n\t  else if (code >= 48 && code <= 57) val = code - 48;\n\t  else val = Infinity;\n\t  if (val >= radix) break;\n\t  ++tokPos;\n\t  total = total * radix + val;\n\t}\n\tif (tokPos === start || len != null && tokPos - start !== len) return null;\n\n\treturn total;\n  }\n\n  function readHexNumber() {\n\ttokPos += 2;\n\tvar val = readInt(16);\n\tif (val == null) raise(tokStart + 2, \"Expected hexadecimal number\");\n\tif (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\n\treturn finishToken(_num, val);\n  }\n\n  function readNumber(startsWithDot) {\n\tvar start = tokPos, isFloat = false, octal = input.charCodeAt(tokPos) === 48;\n\tif (!startsWithDot && readInt(10) === null) raise(start, \"Invalid number\");\n\tif (input.charCodeAt(tokPos) === 46) {\n\t  ++tokPos;\n\t  readInt(10);\n\t  isFloat = true;\n\t}\n\tvar next = input.charCodeAt(tokPos);\n\tif (next === 69 || next === 101) {\n\t  next = input.charCodeAt(++tokPos);\n\t  if (next === 43 || next === 45) ++tokPos;\n\t  if (readInt(10) === null) raise(start, \"Invalid number\");\n\t  isFloat = true;\n\t}\n\tif (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\n\n\tvar str = input.slice(start, tokPos), val;\n\tif (isFloat) val = parseFloat(str);\n\telse if (!octal || str.length === 1) val = parseInt(str, 10);\n\telse if (/[89]/.test(str) || strict) raise(start, \"Invalid number\");\n\telse val = parseInt(str, 8);\n\treturn finishToken(_num, val);\n  }\n\n  function readString(quote) {\n\ttokPos++;\n\tvar out = \"\";\n\tfor (;;) {\n\t  if (tokPos >= inputLen) raise(tokStart, \"Unterminated string constant\");\n\t  var ch = input.charCodeAt(tokPos);\n\t  if (ch === quote) {\n\t\t++tokPos;\n\t\treturn finishToken(_string, out);\n\t  }\n\t  if (ch === 92) {\n\t\tch = input.charCodeAt(++tokPos);\n\t\tvar octal = /^[0-7]+/.exec(input.slice(tokPos, tokPos + 3));\n\t\tif (octal) octal = octal[0];\n\t\twhile (octal && parseInt(octal, 8) > 255) octal = octal.slice(0, -1);\n\t\tif (octal === \"0\") octal = null;\n\t\t++tokPos;\n\t\tif (octal) {\n\t\t  if (strict) raise(tokPos - 2, \"Octal literal in strict mode\");\n\t\t  out += String.fromCharCode(parseInt(octal, 8));\n\t\t  tokPos += octal.length - 1;\n\t\t} else {\n\t\t  switch (ch) {\n\t\t  case 110: out += \"\\n\"; break;\n\t\t  case 114: out += \"\\r\"; break;\n\t\t  case 120: out += String.fromCharCode(readHexChar(2)); break;\n\t\t  case 117: out += String.fromCharCode(readHexChar(4)); break;\n\t\t  case 85: out += String.fromCharCode(readHexChar(8)); break;\n\t\t  case 116: out += \"\\t\"; break;\n\t\t  case 98: out += \"\\b\"; break;\n\t\t  case 118: out += \"\\u000b\"; break;\n\t\t  case 102: out += \"\\f\"; break;\n\t\t  case 48: out += \"\\0\"; break;\n\t\t  case 13: if (input.charCodeAt(tokPos) === 10) ++tokPos;\n\t\t  case 10:\n\t\t\tif (options.locations) { tokLineStart = tokPos; ++tokCurLine; }\n\t\t\tbreak;\n\t\t  default: out += String.fromCharCode(ch); break;\n\t\t  }\n\t\t}\n\t  } else {\n\t\tif (ch === 13 || ch === 10 || ch === 8232 || ch === 8233) raise(tokStart, \"Unterminated string constant\");\n\t\tout += String.fromCharCode(ch);\n\t\t++tokPos;\n\t  }\n\t}\n  }\n\n  function readHexChar(len) {\n\tvar n = readInt(16, len);\n\tif (n === null) raise(tokStart, \"Bad character escape sequence\");\n\treturn n;\n  }\n\n  var containsEsc;\n\n  function readWord1() {\n\tcontainsEsc = false;\n\tvar word, first = true, start = tokPos;\n\tfor (;;) {\n\t  var ch = input.charCodeAt(tokPos);\n\t  if (isIdentifierChar(ch)) {\n\t\tif (containsEsc) word += input.charAt(tokPos);\n\t\t++tokPos;\n\t  } else if (ch === 92) {\n\t\tif (!containsEsc) word = input.slice(start, tokPos);\n\t\tcontainsEsc = true;\n\t\tif (input.charCodeAt(++tokPos) != 117)\n\t\t  raise(tokPos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n\t\t++tokPos;\n\t\tvar esc = readHexChar(4);\n\t\tvar escStr = String.fromCharCode(esc);\n\t\tif (!escStr) raise(tokPos - 1, \"Invalid Unicode escape\");\n\t\tif (!(first ? isIdentifierStart(esc) : isIdentifierChar(esc)))\n\t\t  raise(tokPos - 4, \"Invalid Unicode escape\");\n\t\tword += escStr;\n\t  } else {\n\t\tbreak;\n\t  }\n\t  first = false;\n\t}\n\treturn containsEsc ? word : input.slice(start, tokPos);\n  }\n\n  function readWord() {\n\tvar word = readWord1();\n\tvar type = _name;\n\tif (!containsEsc && isKeyword(word))\n\t  type = keywordTypes[word];\n\treturn finishToken(type, word);\n  }\n\n  function next() {\n\tlastStart = tokStart;\n\tlastEnd = tokEnd;\n\tlastEndLoc = tokEndLoc;\n\treadToken();\n  }\n\n  function setStrict(strct) {\n\tstrict = strct;\n\ttokPos = tokStart;\n\tif (options.locations) {\n\t  while (tokPos < tokLineStart) {\n\t\ttokLineStart = input.lastIndexOf(\"\\n\", tokLineStart - 2) + 1;\n\t\t--tokCurLine;\n\t  }\n\t}\n\tskipSpace();\n\treadToken();\n  }\n\n  function node_t() {\n\tthis.type = null;\n\tthis.start = tokStart;\n\tthis.end = null;\n  }\n\n  function node_loc_t() {\n\tthis.start = tokStartLoc;\n\tthis.end = null;\n\tif (sourceFile !== null) this.source = sourceFile;\n  }\n\n  function startNode() {\n\tvar node = new node_t();\n\tif (options.locations)\n\t  node.loc = new node_loc_t();\n\tif (options.directSourceFile)\n\t  node.sourceFile = options.directSourceFile;\n\tif (options.ranges)\n\t  node.range = [tokStart, 0];\n\treturn node;\n  }\n\n  function startNodeFrom(other) {\n\tvar node = new node_t();\n\tnode.start = other.start;\n\tif (options.locations) {\n\t  node.loc = new node_loc_t();\n\t  node.loc.start = other.loc.start;\n\t}\n\tif (options.ranges)\n\t  node.range = [other.range[0], 0];\n\n\treturn node;\n  }\n\n  function finishNode(node, type) {\n\tnode.type = type;\n\tnode.end = lastEnd;\n\tif (options.locations)\n\t  node.loc.end = lastEndLoc;\n\tif (options.ranges)\n\t  node.range[1] = lastEnd;\n\treturn node;\n  }\n\n  function isUseStrict(stmt) {\n\treturn options.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" &&\n\t  stmt.expression.type === \"Literal\" && stmt.expression.value === \"use strict\";\n  }\n\n  function eat(type) {\n\tif (tokType === type) {\n\t  next();\n\t  return true;\n\t}\n  }\n\n  function canInsertSemicolon() {\n\treturn !options.strictSemicolons &&\n\t  (tokType === _eof || tokType === _braceR || newline.test(input.slice(lastEnd, tokStart)));\n  }\n\n  function semicolon() {\n\tif (!eat(_semi) && !canInsertSemicolon()) unexpected();\n  }\n\n  function expect(type) {\n\tif (tokType === type) next();\n\telse unexpected();\n  }\n\n  function unexpected() {\n\traise(tokStart, \"Unexpected token\");\n  }\n\n  function checkLVal(expr) {\n\tif (expr.type !== \"Identifier\" && expr.type !== \"MemberExpression\")\n\t  raise(expr.start, \"Assigning to rvalue\");\n\tif (strict && expr.type === \"Identifier\" && isStrictBadIdWord(expr.name))\n\t  raise(expr.start, \"Assigning to \" + expr.name + \" in strict mode\");\n  }\n\n  function parseTopLevel(program) {\n\tlastStart = lastEnd = tokPos;\n\tif (options.locations) lastEndLoc = new line_loc_t;\n\tinFunction = strict = null;\n\tlabels = [];\n\treadToken();\n\n\tvar node = program || startNode(), first = true;\n\tif (!program) node.body = [];\n\twhile (tokType !== _eof) {\n\t  var stmt = parseStatement();\n\t  node.body.push(stmt);\n\t  if (first && isUseStrict(stmt)) setStrict(true);\n\t  first = false;\n\t}\n\treturn finishNode(node, \"Program\");\n  }\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  function parseStatement() {\n\tif (tokType === _slash || tokType === _assign && tokVal == \"/=\")\n\t  readToken(true);\n\n\tvar starttype = tokType, node = startNode();\n\n\tswitch (starttype) {\n\tcase _break: case _continue:\n\t  next();\n\t  var isBreak = starttype === _break;\n\t  if (eat(_semi) || canInsertSemicolon()) node.label = null;\n\t  else if (tokType !== _name) unexpected();\n\t  else {\n\t\tnode.label = parseIdent();\n\t\tsemicolon();\n\t  }\n\n\t  for (var i = 0; i < labels.length; ++i) {\n\t\tvar lab = labels[i];\n\t\tif (node.label == null || lab.name === node.label.name) {\n\t\t  if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n\t\t  if (node.label && isBreak) break;\n\t\t}\n\t  }\n\t  if (i === labels.length) raise(node.start, \"Unsyntactic \" + starttype.keyword);\n\t  return finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n\n\tcase _debugger:\n\t  next();\n\t  semicolon();\n\t  return finishNode(node, \"DebuggerStatement\");\n\n\tcase _do:\n\t  next();\n\t  labels.push(loopLabel);\n\t  node.body = parseStatement();\n\t  labels.pop();\n\t  expect(_while);\n\t  node.test = parseParenExpression();\n\t  semicolon();\n\t  return finishNode(node, \"DoWhileStatement\");\n\n\tcase _for:\n\t  next();\n\t  labels.push(loopLabel);\n\t  expect(_parenL);\n\t  if (tokType === _semi) return parseFor(node, null);\n\t  if (tokType === _var) {\n\t\tvar init = startNode();\n\t\tnext();\n\t\tparseVar(init, true);\n\t\tfinishNode(init, \"VariableDeclaration\");\n\t\tif (init.declarations.length === 1 && eat(_in))\n\t\t  return parseForIn(node, init);\n\t\treturn parseFor(node, init);\n\t  }\n\t  var init = parseExpression(false, true);\n\t  if (eat(_in)) {checkLVal(init); return parseForIn(node, init);}\n\t  return parseFor(node, init);\n\n\tcase _function:\n\t  next();\n\t  return parseFunction(node, true);\n\n\tcase _if:\n\t  next();\n\t  node.test = parseParenExpression();\n\t  node.consequent = parseStatement();\n\t  node.alternate = eat(_else) ? parseStatement() : null;\n\t  return finishNode(node, \"IfStatement\");\n\n\tcase _return:\n\t  if (!inFunction && !options.allowReturnOutsideFunction)\n\t\traise(tokStart, \"'return' outside of function\");\n\t  next();\n\n\t  if (eat(_semi) || canInsertSemicolon()) node.argument = null;\n\t  else { node.argument = parseExpression(); semicolon(); }\n\t  return finishNode(node, \"ReturnStatement\");\n\n\tcase _switch:\n\t  next();\n\t  node.discriminant = parseParenExpression();\n\t  node.cases = [];\n\t  expect(_braceL);\n\t  labels.push(switchLabel);\n\n\t  for (var cur, sawDefault; tokType != _braceR;) {\n\t\tif (tokType === _case || tokType === _default) {\n\t\t  var isCase = tokType === _case;\n\t\t  if (cur) finishNode(cur, \"SwitchCase\");\n\t\t  node.cases.push(cur = startNode());\n\t\t  cur.consequent = [];\n\t\t  next();\n\t\t  if (isCase) cur.test = parseExpression();\n\t\t  else {\n\t\t\tif (sawDefault) raise(lastStart, \"Multiple default clauses\"); sawDefault = true;\n\t\t\tcur.test = null;\n\t\t  }\n\t\t  expect(_colon);\n\t\t} else {\n\t\t  if (!cur) unexpected();\n\t\t  cur.consequent.push(parseStatement());\n\t\t}\n\t  }\n\t  if (cur) finishNode(cur, \"SwitchCase\");\n\t  next();\n\t  labels.pop();\n\t  return finishNode(node, \"SwitchStatement\");\n\n\tcase _throw:\n\t  next();\n\t  if (newline.test(input.slice(lastEnd, tokStart)))\n\t\traise(lastEnd, \"Illegal newline after throw\");\n\t  node.argument = parseExpression();\n\t  semicolon();\n\t  return finishNode(node, \"ThrowStatement\");\n\n\tcase _try:\n\t  next();\n\t  node.block = parseBlock();\n\t  node.handler = null;\n\t  if (tokType === _catch) {\n\t\tvar clause = startNode();\n\t\tnext();\n\t\texpect(_parenL);\n\t\tclause.param = parseIdent();\n\t\tif (strict && isStrictBadIdWord(clause.param.name))\n\t\t  raise(clause.param.start, \"Binding \" + clause.param.name + \" in strict mode\");\n\t\texpect(_parenR);\n\t\tclause.guard = null;\n\t\tclause.body = parseBlock();\n\t\tnode.handler = finishNode(clause, \"CatchClause\");\n\t  }\n\t  node.guardedHandlers = empty;\n\t  node.finalizer = eat(_finally) ? parseBlock() : null;\n\t  if (!node.handler && !node.finalizer)\n\t\traise(node.start, \"Missing catch or finally clause\");\n\t  return finishNode(node, \"TryStatement\");\n\n\tcase _var:\n\t  next();\n\t  parseVar(node);\n\t  semicolon();\n\t  return finishNode(node, \"VariableDeclaration\");\n\n\tcase _while:\n\t  next();\n\t  node.test = parseParenExpression();\n\t  labels.push(loopLabel);\n\t  node.body = parseStatement();\n\t  labels.pop();\n\t  return finishNode(node, \"WhileStatement\");\n\n\tcase _with:\n\t  if (strict) raise(tokStart, \"'with' in strict mode\");\n\t  next();\n\t  node.object = parseParenExpression();\n\t  node.body = parseStatement();\n\t  return finishNode(node, \"WithStatement\");\n\n\tcase _braceL:\n\t  return parseBlock();\n\n\tcase _semi:\n\t  next();\n\t  return finishNode(node, \"EmptyStatement\");\n\n\tdefault:\n\t  var maybeName = tokVal, expr = parseExpression();\n\t  if (starttype === _name && expr.type === \"Identifier\" && eat(_colon)) {\n\t\tfor (var i = 0; i < labels.length; ++i)\n\t\t  if (labels[i].name === maybeName) raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n\t\tvar kind = tokType.isLoop ? \"loop\" : tokType === _switch ? \"switch\" : null;\n\t\tlabels.push({name: maybeName, kind: kind});\n\t\tnode.body = parseStatement();\n\t\tlabels.pop();\n\t\tnode.label = expr;\n\t\treturn finishNode(node, \"LabeledStatement\");\n\t  } else {\n\t\tnode.expression = expr;\n\t\tsemicolon();\n\t\treturn finishNode(node, \"ExpressionStatement\");\n\t  }\n\t}\n  }\n\n  function parseParenExpression() {\n\texpect(_parenL);\n\tvar val = parseExpression();\n\texpect(_parenR);\n\treturn val;\n  }\n\n  function parseBlock(allowStrict) {\n\tvar node = startNode(), first = true, strict = false, oldStrict;\n\tnode.body = [];\n\texpect(_braceL);\n\twhile (!eat(_braceR)) {\n\t  var stmt = parseStatement();\n\t  node.body.push(stmt);\n\t  if (first && allowStrict && isUseStrict(stmt)) {\n\t\toldStrict = strict;\n\t\tsetStrict(strict = true);\n\t  }\n\t  first = false;\n\t}\n\tif (strict && !oldStrict) setStrict(false);\n\treturn finishNode(node, \"BlockStatement\");\n  }\n\n  function parseFor(node, init) {\n\tnode.init = init;\n\texpect(_semi);\n\tnode.test = tokType === _semi ? null : parseExpression();\n\texpect(_semi);\n\tnode.update = tokType === _parenR ? null : parseExpression();\n\texpect(_parenR);\n\tnode.body = parseStatement();\n\tlabels.pop();\n\treturn finishNode(node, \"ForStatement\");\n  }\n\n  function parseForIn(node, init) {\n\tnode.left = init;\n\tnode.right = parseExpression();\n\texpect(_parenR);\n\tnode.body = parseStatement();\n\tlabels.pop();\n\treturn finishNode(node, \"ForInStatement\");\n  }\n\n  function parseVar(node, noIn) {\n\tnode.declarations = [];\n\tnode.kind = \"var\";\n\tfor (;;) {\n\t  var decl = startNode();\n\t  decl.id = parseIdent();\n\t  if (strict && isStrictBadIdWord(decl.id.name))\n\t\traise(decl.id.start, \"Binding \" + decl.id.name + \" in strict mode\");\n\t  decl.init = eat(_eq) ? parseExpression(true, noIn) : null;\n\t  node.declarations.push(finishNode(decl, \"VariableDeclarator\"));\n\t  if (!eat(_comma)) break;\n\t}\n\treturn node;\n  }\n\n  function parseExpression(noComma, noIn) {\n\tvar expr = parseMaybeAssign(noIn);\n\tif (!noComma && tokType === _comma) {\n\t  var node = startNodeFrom(expr);\n\t  node.expressions = [expr];\n\t  while (eat(_comma)) node.expressions.push(parseMaybeAssign(noIn));\n\t  return finishNode(node, \"SequenceExpression\");\n\t}\n\treturn expr;\n  }\n\n  function parseMaybeAssign(noIn) {\n\tvar left = parseMaybeConditional(noIn);\n\tif (tokType.isAssign) {\n\t  var node = startNodeFrom(left);\n\t  node.operator = tokVal;\n\t  node.left = left;\n\t  next();\n\t  node.right = parseMaybeAssign(noIn);\n\t  checkLVal(left);\n\t  return finishNode(node, \"AssignmentExpression\");\n\t}\n\treturn left;\n  }\n\n  function parseMaybeConditional(noIn) {\n\tvar expr = parseExprOps(noIn);\n\tif (eat(_question)) {\n\t  var node = startNodeFrom(expr);\n\t  node.test = expr;\n\t  node.consequent = parseExpression(true);\n\t  expect(_colon);\n\t  node.alternate = parseExpression(true, noIn);\n\t  return finishNode(node, \"ConditionalExpression\");\n\t}\n\treturn expr;\n  }\n\n  function parseExprOps(noIn) {\n\treturn parseExprOp(parseMaybeUnary(), -1, noIn);\n  }\n\n  function parseExprOp(left, minPrec, noIn) {\n\tvar prec = tokType.binop;\n\tif (prec != null && (!noIn || tokType !== _in)) {\n\t  if (prec > minPrec) {\n\t\tvar node = startNodeFrom(left);\n\t\tnode.left = left;\n\t\tnode.operator = tokVal;\n\t\tvar op = tokType;\n\t\tnext();\n\t\tnode.right = parseExprOp(parseMaybeUnary(), prec, noIn);\n\t\tvar exprNode = finishNode(node, (op === _logicalOR || op === _logicalAND) ? \"LogicalExpression\" : \"BinaryExpression\");\n\t\treturn parseExprOp(exprNode, minPrec, noIn);\n\t  }\n\t}\n\treturn left;\n  }\n\n  function parseMaybeUnary() {\n\tif (tokType.prefix) {\n\t  var node = startNode(), update = tokType.isUpdate;\n\t  node.operator = tokVal;\n\t  node.prefix = true;\n\t  tokRegexpAllowed = true;\n\t  next();\n\t  node.argument = parseMaybeUnary();\n\t  if (update) checkLVal(node.argument);\n\t  else if (strict && node.operator === \"delete\" &&\n\t\t\t   node.argument.type === \"Identifier\")\n\t\traise(node.start, \"Deleting local variable in strict mode\");\n\t  return finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n\t}\n\tvar expr = parseExprSubscripts();\n\twhile (tokType.postfix && !canInsertSemicolon()) {\n\t  var node = startNodeFrom(expr);\n\t  node.operator = tokVal;\n\t  node.prefix = false;\n\t  node.argument = expr;\n\t  checkLVal(expr);\n\t  next();\n\t  expr = finishNode(node, \"UpdateExpression\");\n\t}\n\treturn expr;\n  }\n\n  function parseExprSubscripts() {\n\treturn parseSubscripts(parseExprAtom());\n  }\n\n  function parseSubscripts(base, noCalls) {\n\tif (eat(_dot)) {\n\t  var node = startNodeFrom(base);\n\t  node.object = base;\n\t  node.property = parseIdent(true);\n\t  node.computed = false;\n\t  return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\n\t} else if (eat(_bracketL)) {\n\t  var node = startNodeFrom(base);\n\t  node.object = base;\n\t  node.property = parseExpression();\n\t  node.computed = true;\n\t  expect(_bracketR);\n\t  return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\n\t} else if (!noCalls && eat(_parenL)) {\n\t  var node = startNodeFrom(base);\n\t  node.callee = base;\n\t  node.arguments = parseExprList(_parenR, false);\n\t  return parseSubscripts(finishNode(node, \"CallExpression\"), noCalls);\n\t} else return base;\n  }\n\n  function parseExprAtom() {\n\tswitch (tokType) {\n\tcase _this:\n\t  var node = startNode();\n\t  next();\n\t  return finishNode(node, \"ThisExpression\");\n\tcase _name:\n\t  return parseIdent();\n\tcase _num: case _string: case _regexp:\n\t  var node = startNode();\n\t  node.value = tokVal;\n\t  node.raw = input.slice(tokStart, tokEnd);\n\t  next();\n\t  return finishNode(node, \"Literal\");\n\n\tcase _null: case _true: case _false:\n\t  var node = startNode();\n\t  node.value = tokType.atomValue;\n\t  node.raw = tokType.keyword;\n\t  next();\n\t  return finishNode(node, \"Literal\");\n\n\tcase _parenL:\n\t  var tokStartLoc1 = tokStartLoc, tokStart1 = tokStart;\n\t  next();\n\t  var val = parseExpression();\n\t  val.start = tokStart1;\n\t  val.end = tokEnd;\n\t  if (options.locations) {\n\t\tval.loc.start = tokStartLoc1;\n\t\tval.loc.end = tokEndLoc;\n\t  }\n\t  if (options.ranges)\n\t\tval.range = [tokStart1, tokEnd];\n\t  expect(_parenR);\n\t  return val;\n\n\tcase _bracketL:\n\t  var node = startNode();\n\t  next();\n\t  node.elements = parseExprList(_bracketR, true, true);\n\t  return finishNode(node, \"ArrayExpression\");\n\n\tcase _braceL:\n\t  return parseObj();\n\n\tcase _function:\n\t  var node = startNode();\n\t  next();\n\t  return parseFunction(node, false);\n\n\tcase _new:\n\t  return parseNew();\n\n\tdefault:\n\t  unexpected();\n\t}\n  }\n\n  function parseNew() {\n\tvar node = startNode();\n\tnext();\n\tnode.callee = parseSubscripts(parseExprAtom(), true);\n\tif (eat(_parenL)) node.arguments = parseExprList(_parenR, false);\n\telse node.arguments = empty;\n\treturn finishNode(node, \"NewExpression\");\n  }\n\n  function parseObj() {\n\tvar node = startNode(), first = true, sawGetSet = false;\n\tnode.properties = [];\n\tnext();\n\twhile (!eat(_braceR)) {\n\t  if (!first) {\n\t\texpect(_comma);\n\t\tif (options.allowTrailingCommas && eat(_braceR)) break;\n\t  } else first = false;\n\n\t  var prop = {key: parsePropertyName()}, isGetSet = false, kind;\n\t  if (eat(_colon)) {\n\t\tprop.value = parseExpression(true);\n\t\tkind = prop.kind = \"init\";\n\t  } else if (options.ecmaVersion >= 5 && prop.key.type === \"Identifier\" &&\n\t\t\t\t (prop.key.name === \"get\" || prop.key.name === \"set\")) {\n\t\tisGetSet = sawGetSet = true;\n\t\tkind = prop.kind = prop.key.name;\n\t\tprop.key = parsePropertyName();\n\t\tif (tokType !== _parenL) unexpected();\n\t\tprop.value = parseFunction(startNode(), false);\n\t  } else unexpected();\n\n\t  if (prop.key.type === \"Identifier\" && (strict || sawGetSet)) {\n\t\tfor (var i = 0; i < node.properties.length; ++i) {\n\t\t  var other = node.properties[i];\n\t\t  if (other.key.name === prop.key.name) {\n\t\t\tvar conflict = kind == other.kind || isGetSet && other.kind === \"init\" ||\n\t\t\t  kind === \"init\" && (other.kind === \"get\" || other.kind === \"set\");\n\t\t\tif (conflict && !strict && kind === \"init\" && other.kind === \"init\") conflict = false;\n\t\t\tif (conflict) raise(prop.key.start, \"Redefinition of property\");\n\t\t  }\n\t\t}\n\t  }\n\t  node.properties.push(prop);\n\t}\n\treturn finishNode(node, \"ObjectExpression\");\n  }\n\n  function parsePropertyName() {\n\tif (tokType === _num || tokType === _string) return parseExprAtom();\n\treturn parseIdent(true);\n  }\n\n  function parseFunction(node, isStatement) {\n\tif (tokType === _name) node.id = parseIdent();\n\telse if (isStatement) unexpected();\n\telse node.id = null;\n\tnode.params = [];\n\tvar first = true;\n\texpect(_parenL);\n\twhile (!eat(_parenR)) {\n\t  if (!first) expect(_comma); else first = false;\n\t  node.params.push(parseIdent());\n\t}\n\n\tvar oldInFunc = inFunction, oldLabels = labels;\n\tinFunction = true; labels = [];\n\tnode.body = parseBlock(true);\n\tinFunction = oldInFunc; labels = oldLabels;\n\n\tif (strict || node.body.body.length && isUseStrict(node.body.body[0])) {\n\t  for (var i = node.id ? -1 : 0; i < node.params.length; ++i) {\n\t\tvar id = i < 0 ? node.id : node.params[i];\n\t\tif (isStrictReservedWord(id.name) || isStrictBadIdWord(id.name))\n\t\t  raise(id.start, \"Defining '\" + id.name + \"' in strict mode\");\n\t\tif (i >= 0) for (var j = 0; j < i; ++j) if (id.name === node.params[j].name)\n\t\t  raise(id.start, \"Argument name clash in strict mode\");\n\t  }\n\t}\n\n\treturn finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n  }\n\n  function parseExprList(close, allowTrailingComma, allowEmpty) {\n\tvar elts = [], first = true;\n\twhile (!eat(close)) {\n\t  if (!first) {\n\t\texpect(_comma);\n\t\tif (allowTrailingComma && options.allowTrailingCommas && eat(close)) break;\n\t  } else first = false;\n\n\t  if (allowEmpty && tokType === _comma) elts.push(null);\n\t  else elts.push(parseExpression(true));\n\t}\n\treturn elts;\n  }\n\n  function parseIdent(liberal) {\n\tvar node = startNode();\n\tif (liberal && options.forbidReserved == \"everywhere\") liberal = false;\n\tif (tokType === _name) {\n\t  if (!liberal &&\n\t\t  (options.forbidReserved &&\n\t\t   (options.ecmaVersion === 3 ? isReservedWord3 : isReservedWord5)(tokVal) ||\n\t\t   strict && isStrictReservedWord(tokVal)) &&\n\t\t  input.slice(tokStart, tokEnd).indexOf(\"\\\\\") == -1)\n\t\traise(tokStart, \"The keyword '\" + tokVal + \"' is reserved\");\n\t  node.name = tokVal;\n\t} else if (liberal && tokType.keyword) {\n\t  node.name = tokType.keyword;\n\t} else {\n\t  unexpected();\n\t}\n\ttokRegexpAllowed = false;\n\tnext();\n\treturn finishNode(node, \"Identifier\");\n  }\n\n});\n\n\t\tif (!acorn.version)\n\t\t\tacorn = null;\n\t}\n\n\tfunction parse(code, options) {\n\t\treturn (global.acorn || acorn).parse(code, options);\n\t}\n\n\tvar binaryOperators = {\n\t\t'+': '__add',\n\t\t'-': '__subtract',\n\t\t'*': '__multiply',\n\t\t'/': '__divide',\n\t\t'%': '__modulo',\n\t\t'==': '__equals',\n\t\t'!=': '__equals'\n\t};\n\n\tvar unaryOperators = {\n\t\t'-': '__negate',\n\t\t'+': '__self'\n\t};\n\n\tvar fields = Base.each(\n\t\t['add', 'subtract', 'multiply', 'divide', 'modulo', 'equals', 'negate'],\n\t\tfunction(name) {\n\t\t\tthis['__' + name] = '#' + name;\n\t\t},\n\t\t{\n\t\t\t__self: function() {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t);\n\tPoint.inject(fields);\n\tSize.inject(fields);\n\tColor.inject(fields);\n\n\tfunction __$__(left, operator, right) {\n\t\tvar handler = binaryOperators[operator];\n\t\tif (left && left[handler]) {\n\t\t\tvar res = left[handler](right);\n\t\t\treturn operator === '!=' ? !res : res;\n\t\t}\n\t\tswitch (operator) {\n\t\tcase '+': return left + right;\n\t\tcase '-': return left - right;\n\t\tcase '*': return left * right;\n\t\tcase '/': return left / right;\n\t\tcase '%': return left % right;\n\t\tcase '==': return left == right;\n\t\tcase '!=': return left != right;\n\t\t}\n\t}\n\n\tfunction $__(operator, value) {\n\t\tvar handler = unaryOperators[operator];\n\t\tif (value && value[handler])\n\t\t\treturn value[handler]();\n\t\tswitch (operator) {\n\t\tcase '+': return +value;\n\t\tcase '-': return -value;\n\t\t}\n\t}\n\n\tfunction compile(code, options) {\n\t\tif (!code)\n\t\t\treturn '';\n\t\toptions = options || {};\n\n\t\tvar insertions = [];\n\n\t\tfunction getOffset(offset) {\n\t\t\tfor (var i = 0, l = insertions.length; i < l; i++) {\n\t\t\t\tvar insertion = insertions[i];\n\t\t\t\tif (insertion[0] >= offset)\n\t\t\t\t\tbreak;\n\t\t\t\toffset += insertion[1];\n\t\t\t}\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction getCode(node) {\n\t\t\treturn code.substring(getOffset(node.range[0]),\n\t\t\t\t\tgetOffset(node.range[1]));\n\t\t}\n\n\t\tfunction getBetween(left, right) {\n\t\t\treturn code.substring(getOffset(left.range[1]),\n\t\t\t\t\tgetOffset(right.range[0]));\n\t\t}\n\n\t\tfunction replaceCode(node, str) {\n\t\t\tvar start = getOffset(node.range[0]),\n\t\t\t\tend = getOffset(node.range[1]),\n\t\t\t\tinsert = 0;\n\t\t\tfor (var i = insertions.length - 1; i >= 0; i--) {\n\t\t\t\tif (start > insertions[i][0]) {\n\t\t\t\t\tinsert = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinsertions.splice(insert, 0, [start, str.length - end + start]);\n\t\t\tcode = code.substring(0, start) + str + code.substring(end);\n\t\t}\n\n\t\tfunction walkAST(node, parent) {\n\t\t\tif (!node)\n\t\t\t\treturn;\n\t\t\tfor (var key in node) {\n\t\t\t\tif (key === 'range' || key === 'loc')\n\t\t\t\t\tcontinue;\n\t\t\t\tvar value = node[key];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (var i = 0, l = value.length; i < l; i++)\n\t\t\t\t\t\twalkAST(value[i], node);\n\t\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\t\twalkAST(value, node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (node.type) {\n\t\t\tcase 'UnaryExpression':\n\t\t\t\tif (node.operator in unaryOperators\n\t\t\t\t\t\t&& node.argument.type !== 'Literal') {\n\t\t\t\t\tvar arg = getCode(node.argument);\n\t\t\t\t\treplaceCode(node, '$__(\"' + node.operator + '\", '\n\t\t\t\t\t\t\t+ arg + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'BinaryExpression':\n\t\t\t\tif (node.operator in binaryOperators\n\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\tbetween = getBetween(node.left, node.right),\n\t\t\t\t\t\toperator = node.operator;\n\t\t\t\t\treplaceCode(node, '__$__(' + left + ','\n\t\t\t\t\t\t\t+ between.replace(new RegExp('\\\\' + operator),\n\t\t\t\t\t\t\t\t'\"' + operator + '\"')\n\t\t\t\t\t\t\t+ ', ' + right + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'UpdateExpression':\n\t\t\tcase 'AssignmentExpression':\n\t\t\t\tvar parentType = parent && parent.type;\n\t\t\t\tif (!(\n\t\t\t\t\t\tparentType === 'ForStatement'\n\t\t\t\t\t\t|| parentType === 'BinaryExpression'\n\t\t\t\t\t\t\t&& /^[=!<>]/.test(parent.operator)\n\t\t\t\t\t\t|| parentType === 'MemberExpression' && parent.computed\n\t\t\t\t)) {\n\t\t\t\t\tif (node.type === 'UpdateExpression') {\n\t\t\t\t\t\tvar arg = getCode(node.argument),\n\t\t\t\t\t\t\texp = '__$__(' + arg + ', \"' + node.operator[0]\n\t\t\t\t\t\t\t\t\t+ '\", 1)',\n\t\t\t\t\t\t\tstr = arg + ' = ' + exp;\n\t\t\t\t\t\tif (!node.prefix\n\t\t\t\t\t\t\t\t&& (parentType === 'AssignmentExpression'\n\t\t\t\t\t\t\t\t\t|| parentType === 'VariableDeclarator')) {\n\t\t\t\t\t\t\tif (getCode(parent.left || parent.id) === arg)\n\t\t\t\t\t\t\t\tstr = exp;\n\t\t\t\t\t\t\tstr = arg + '; ' + str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplaceCode(node, str);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (/^.=$/.test(node.operator)\n\t\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\t\t\texp = left + ' = __$__(' + left + ', \"'\n\t\t\t\t\t\t\t\t\t+ node.operator[0] + '\", ' + right + ')';\n\t\t\t\t\t\t\treplaceCode(node, /^\\(.*\\)$/.test(getCode(node))\n\t\t\t\t\t\t\t\t\t? '(' + exp + ')' : exp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction encodeVLQ(value) {\n\t\t\tvar res = '',\n\t\t\t\tbase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\t\tvalue = (Math.abs(value) << 1) + (value < 0 ? 1 : 0);\n\t\t\twhile (value || !res) {\n\t\t\t\tvar next = value & (32 - 1);\n\t\t\t\tvalue >>= 5;\n\t\t\t\tif (value)\n\t\t\t\t\tnext |= 32;\n\t\t\t\tres += base64[next];\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tvar url = options.url || '',\n\t\t\tagent = paper.agent,\n\t\t\tversion = agent.versionNumber,\n\t\t\toffsetCode = false,\n\t\t\tsourceMaps = options.sourceMaps,\n\t\t\tsource = options.source || code,\n\t\t\tlineBreaks = /\\r\\n|\\n|\\r/mg,\n\t\t\toffset = options.offset || 0,\n\t\t\tmap;\n\t\tif (sourceMaps && (agent.chrome && version >= 30\n\t\t\t\t|| agent.webkit && version >= 537.76\n\t\t\t\t|| agent.firefox && version >= 23\n\t\t\t\t|| agent.node)) {\n\t\t\tif (agent.node) {\n\t\t\t\toffset -= 2;\n\t\t\t} else if (window && url && !window.location.href.indexOf(url)) {\n\t\t\t\tvar html = document.getElementsByTagName('html')[0].innerHTML;\n\t\t\t\toffset = html.substr(0, html.indexOf(code) + 1).match(\n\t\t\t\t\t\tlineBreaks).length + 1;\n\t\t\t}\n\t\t\toffsetCode = offset > 0 && !(\n\t\t\t\t\tagent.chrome && version >= 36 ||\n\t\t\t\t\tagent.safari && version >= 600 ||\n\t\t\t\t\tagent.firefox && version >= 40 ||\n\t\t\t\t\tagent.node);\n\t\t\tvar mappings = ['AA' + encodeVLQ(offsetCode ? 0 : offset) + 'A'];\n\t\t\tmappings.length = (code.match(lineBreaks) || []).length + 1\n\t\t\t\t\t+ (offsetCode ? offset : 0);\n\t\t\tmap = {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: url,\n\t\t\t\tnames:[],\n\t\t\t\tmappings: mappings.join(';AACA'),\n\t\t\t\tsourceRoot: '',\n\t\t\t\tsources: [url],\n\t\t\t\tsourcesContent: [source]\n\t\t\t};\n\t\t}\n\t\twalkAST(parse(code, { ranges: true, preserveParens: true }));\n\t\tif (map) {\n\t\t\tif (offsetCode) {\n\t\t\t\tcode = new Array(offset + 1).join('\\n') + code;\n\t\t\t}\n\t\t\tif (/^(inline|both)$/.test(sourceMaps)) {\n\t\t\t\tcode += \"\\n//# sourceMappingURL=data:application/json;base64,\"\n\t\t\t\t\t\t+ self.btoa(unescape(encodeURIComponent(\n\t\t\t\t\t\t\tJSON.stringify(map))));\n\t\t\t}\n\t\t\tcode += \"\\n//# sourceURL=\" + (url || 'paperscript');\n\t\t}\n\t\treturn {\n\t\t\turl: url,\n\t\t\tsource: source,\n\t\t\tcode: code,\n\t\t\tmap: map\n\t\t};\n\t}\n\n\tfunction execute(code, scope, options) {\n\t\tpaper = scope;\n\t\tvar view = scope.getView(),\n\t\t\ttool = /\\btool\\.\\w+|\\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\\b/\n\t\t\t\t\t.test(code) && !/\\bnew\\s+Tool\\b/.test(code)\n\t\t\t\t\t\t? new Tool() : null,\n\t\t\ttoolHandlers = tool ? tool._events : [],\n\t\t\thandlers = ['onFrame', 'onResize'].concat(toolHandlers),\n\t\t\tparams = [],\n\t\t\targs = [],\n\t\t\tfunc,\n\t\t\tcompiled = typeof code === 'object' ? code : compile(code, options);\n\t\tcode = compiled.code;\n\t\tfunction expose(scope, hidden) {\n\t\t\tfor (var key in scope) {\n\t\t\t\tif ((hidden || !/^_/.test(key)) && new RegExp('([\\\\b\\\\s\\\\W]|^)'\n\t\t\t\t\t\t+ key.replace(/\\$/g, '\\\\$') + '\\\\b').test(code)) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t\targs.push(scope[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\texpose({ __$__: __$__, $__: $__, paper: scope, view: view, tool: tool },\n\t\t\t\ttrue);\n\t\texpose(scope);\n\t\thandlers = Base.each(handlers, function(key) {\n\t\t\tif (new RegExp('\\\\s+' + key + '\\\\b').test(code)) {\n\t\t\t\tparams.push(key);\n\t\t\t\tthis.push(key + ': ' + key);\n\t\t\t}\n\t\t}, []).join(', ');\n\t\tif (handlers)\n\t\t\tcode += '\\nreturn { ' + handlers + ' };';\n\t\tvar agent = paper.agent;\n\t\tif (document && (agent.chrome\n\t\t\t\t|| agent.firefox && agent.versionNumber < 40)) {\n\t\t\tvar script = document.createElement('script'),\n\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\t\t\tif (agent.firefox)\n\t\t\t\tcode = '\\n' + code;\n\t\t\tscript.appendChild(document.createTextNode(\n\t\t\t\t'paper._execute = function(' + params + ') {' + code + '\\n}'\n\t\t\t));\n\t\t\thead.appendChild(script);\n\t\t\tfunc = paper._execute;\n\t\t\tdelete paper._execute;\n\t\t\thead.removeChild(script);\n\t\t} else {\n\t\t\tfunc = Function(params, code);\n\t\t}\n\t\tvar res = func.apply(scope, args) || {};\n\t\tBase.each(toolHandlers, function(key) {\n\t\t\tvar value = res[key];\n\t\t\tif (value)\n\t\t\t\ttool[key] = value;\n\t\t});\n\t\tif (view) {\n\t\t\tif (res.onResize)\n\t\t\t\tview.setOnResize(res.onResize);\n\t\t\tview.emit('resize', {\n\t\t\t\tsize: view.size,\n\t\t\t\tdelta: new Point()\n\t\t\t});\n\t\t\tif (res.onFrame)\n\t\t\t\tview.setOnFrame(res.onFrame);\n\t\t\tview.requestUpdate();\n\t\t}\n\t\treturn compiled;\n\t}\n\n\tfunction loadScript(script) {\n\t\tif (/^text\\/(?:x-|)paperscript$/.test(script.type)\n\t\t\t\t&& PaperScope.getAttribute(script, 'ignore') !== 'true') {\n\t\t\tvar canvasId = PaperScope.getAttribute(script, 'canvas'),\n\t\t\t\tcanvas = document.getElementById(canvasId),\n\t\t\t\tsrc = script.src || script.getAttribute('data-src'),\n\t\t\t\tasync = PaperScope.hasAttribute(script, 'async'),\n\t\t\t\tscopeAttribute = 'data-paper-scope';\n\t\t\tif (!canvas)\n\t\t\t\tthrow new Error('Unable to find canvas with id \"'\n\t\t\t\t\t\t+ canvasId + '\"');\n\t\t\tvar scope = PaperScope.get(canvas.getAttribute(scopeAttribute))\n\t\t\t\t\t\t|| new PaperScope().setup(canvas);\n\t\t\tcanvas.setAttribute(scopeAttribute, scope._id);\n\t\t\tif (src) {\n\t\t\t\tHttp.request({\n\t\t\t\t\turl: src,\n\t\t\t\t\tasync: async,\n\t\t\t\t\tmimeType: 'text/plain',\n\t\t\t\t\tonLoad: function(code) {\n\t\t\t\t\t\texecute(code, scope, src);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\texecute(script.innerHTML, scope, script.baseURI);\n\t\t\t}\n\t\t\tscript.setAttribute('data-paper-ignore', 'true');\n\t\t\treturn scope;\n\t\t}\n\t}\n\n\tfunction loadAll() {\n\t\tBase.each(document && document.getElementsByTagName('script'),\n\t\t\t\tloadScript);\n\t}\n\n\tfunction load(script) {\n\t\treturn script ? loadScript(script) : loadAll();\n\t}\n\n\tif (window) {\n\t\tif (document.readyState === 'complete') {\n\t\t\tsetTimeout(loadAll);\n\t\t} else {\n\t\t\tDomEvent.add(window, { load: loadAll });\n\t\t}\n\t}\n\n\treturn {\n\t\tcompile: compile,\n\t\texecute: execute,\n\t\tload: load,\n\t\tparse: parse\n\t};\n\n}.call(this);\n\npaper = new (PaperScope.inject(Base.exports, {\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key,\n\tDomEvent: DomEvent,\n\tDomElement: DomElement,\n\tdocument: document,\n\twindow: window,\n\tSymbol: SymbolDefinition,\n\tPlacedSymbol: SymbolItem\n}))();\n\nif (paper.agent.node) {\n\t__webpack_require__(1)(paper);\n}\n\nif (true) {\n\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (paper),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n}.call(this, typeof self === 'object' ? self : null);\n\n\n/***/ }),\n\n/***/ \"VU/8\":\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ \"W2nU\":\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ \"mypn\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"DuR2\"), __webpack_require__(\"W2nU\")))\n\n/***/ }),\n\n/***/ \"rjj0\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(\"tTVk\")\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n\n/***/ \"tTVk\":\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.68b7a7e265a35ef06ec7.js","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 162o\n// module chunks = 0","/*!\n * Vue.js v2.5.2\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.functionalOptions = undefined;\n  this.functionalScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode, deep) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  if (deep && vnode.children) {\n    cloned.children = cloneVNodes(vnode.children);\n  }\n  return cloned\n}\n\nfunction cloneVNodes (vnodes, deep) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i], deep);\n  }\n  return res\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production' && inject) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if (inBrowser && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both micro and macro tasks.\n// In < 2.4 we used micro tasks everywhere, but there are some scenarios where\n// micro tasks have too high a priority and fires in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using macro tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use micro task by default, but expose a way to force macro task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) Task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine MicroTask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a Task instead of a MicroTask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = (parentVnode.data && parentVnode.data.attrs) || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject).filter(function (key) {\n          /* istanbul ignore next */\n          return Object.getOwnPropertyDescriptor(inject, key).enumerable\n        })\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias,\n  eventKeyName\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (keyCodes) {\n    if (Array.isArray(keyCodes)) {\n      return keyCodes.indexOf(eventKeyCode) === -1\n    } else {\n      return keyCodes !== eventKeyCode\n    }\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  // static trees can be rendered once and cached on the contructor options\n  // so every instance shares the same cached trees\n  var renderFns = this.$options.staticRenderFns;\n  var cached = renderFns.cached || (renderFns.cached = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = renderFns[index].call(this._renderProxy, null, this);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm = Object.create(parent);\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode) {\n        vnode.functionalScopeId = options._scopeId;\n        vnode.functionalContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = contextVm;\n    vnode.functionalOptions = options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // if the parent didn't update, the slot nodes will be the ones from\n      // last render. They need to be cloned to ensure \"freshness\" for this render.\n      for (var key in vm.$slots) {\n        var slot = vm.$slots[key];\n        if (slot._rendered) {\n          vm.$slots[key] = cloneVNodes(slot, true /* deep */);\n        }\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && cached$$1 !== current) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n\n      var ref = this;\n      var cache = ref.cache;\n      var keys = ref.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.5.2';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(\n            config.ignoredElements.length &&\n            config.ignoredElements.some(function (ignore) {\n              return isRegExp(ignore)\n                ? ignore.test(tag)\n                : ignore === tag\n            })\n          ) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.functionalScopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setAttribute(vnode.elm, i, '');\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.functionalContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !vnodeToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed\n              ) {\n                bailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE9 || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat([$$v]))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nVue$3.nextTick(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$1 = 0; i$1 < postTransforms.length; i$1++) {\n        postTransforms[i$1](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (!el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (map['v-model'] && (map['v-bind:type'] || map[':type'])) {\n      var typeBinding = getBindingAttr(el, 'type');\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (process.env.NODE_ENV !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var code = keyCodes[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(code)) + \",\" +\n    \"$event.key)\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 0","// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fd5\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ae\\ua7b0-\\ua7b7\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d4-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d01-\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf8\\u1cf9\\u1dc0-\\u1df5\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,17,26,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,785,52,76,44,33,24,27,35,42,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,25,391,63,32,0,449,56,264,8,2,36,18,0,50,29,881,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,0,67,12,65,0,32,6124,20,754,9486,1,3071,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,10591,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,1306,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,52,0,13,2,49,13,10,2,4,9,83,11,7,0,161,11,6,9,7,3,57,0,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,87,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,423,9,838,7,2,7,17,9,57,21,2,13,19882,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Registered plugins\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType == \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Load plugins\n  this.loadPlugins(options.plugins);\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false;\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterFunctionScope();\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) == \"use strict\") { return true }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  return this.value === name && this.eat(types.name)\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type == tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  var pos = refDestructuringErrors ? refDestructuringErrors.shorthandAssign : -1;\n  if (!andThrow) { return pos >= 0 }\n  if (pos > -1) { this.raise(pos, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function() {\n  if (this.type !== types.name || this.options.ecmaVersion < 6 || this.value != \"let\") { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh == 123) { return true } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!this.isKeyword(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.type !== types.name || this.options.ecmaVersion < 8 || this.value != \"async\")\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 == this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false)\n  case types._class:\n    if (!declaration) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (!declaration && kind != \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock()\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction() && declaration) {\n      this.next();\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword == \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n  if (this.type === types.semi) { return this.parseFor(node, null) }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init))\n      { return this.parseForIn(node, init$1) }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    this.toAssignable(init);\n    this.checkLVal(init);\n    this.checkPatternErrors(refDestructuringErrors, true);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync)\n};\n\npp$1.isFunction = function() {\n  return this.type === types._function || this.isAsyncFunction()\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.isFunction());\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.isFunction()) : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope();\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type != types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n  this.exitLexicalScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    this.expect(types.parenL);\n    clause.param = this.parseBindingAtom();\n    this.enterLexicalScope();\n    this.checkLVal(clause.param, \"let\");\n    this.expect(types.parenR);\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart == node.start) {\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(true);\n  if (node.body.type == \"ClassDeclaration\" ||\n      node.body.type == \"VariableDeclaration\" && node.body.kind != \"var\" ||\n      node.body.type == \"FunctionDeclaration\" && (this.strict || node.body.generator))\n    { this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\"); }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  node.left = init;\n  node.right = this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type != \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6 && !isAsync)\n    { node.generator = this.eat(types.star); }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type != types.name ? null : this.parseIdent();\n    if (node.id) {\n      this.checkLVal(node.id, \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement)\n    { node.id = this.type == types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (this$1.eat(types.semi)) { continue }\n    var method = this$1.startNode();\n    var isGenerator = this$1.eat(types.star);\n    var isAsync = false;\n    var isMaybeStatic = this$1.type === types.name && this$1.value === \"static\";\n    this$1.parsePropertyName(method);\n    method.static = isMaybeStatic && this$1.type !== types.parenL;\n    if (method.static) {\n      if (isGenerator) { this$1.unexpected(); }\n      isGenerator = this$1.eat(types.star);\n      this$1.parsePropertyName(method);\n    }\n    if (this$1.options.ecmaVersion >= 8 && !isGenerator && !method.computed &&\n        method.key.type === \"Identifier\" && method.key.name === \"async\" && this$1.type !== types.parenL &&\n        !this$1.canInsertSemicolon()) {\n      isAsync = true;\n      this$1.parsePropertyName(method);\n    }\n    method.kind = \"method\";\n    var isGetSet = false;\n    if (!method.computed) {\n      var key = method.key;\n      if (!isGenerator && !isAsync && key.type === \"Identifier\" && this$1.type !== types.parenL && (key.name === \"get\" || key.name === \"set\")) {\n        isGetSet = true;\n        method.kind = key.name;\n        key = this$1.parsePropertyName(method);\n      }\n      if (!method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n          key.type === \"Literal\" && key.value === \"constructor\")) {\n        if (hadConstructor) { this$1.raise(key.start, \"Duplicate constructor in the same class\"); }\n        if (isGetSet) { this$1.raise(key.start, \"Constructor can't have get/set modifier\"); }\n        if (isGenerator) { this$1.raise(key.start, \"Constructor can't be a generator\"); }\n        if (isAsync) { this$1.raise(key.start, \"Constructor can't be an async method\"); }\n        method.kind = \"constructor\";\n        hadConstructor = true;\n      }\n    }\n    this$1.parseClassMethod(classBody, method, isGenerator, isAsync);\n    if (isGetSet) {\n      var paramCount = method.kind === \"get\" ? 0 : 1;\n      if (method.value.params.length !== paramCount) {\n        var start = method.value.start;\n        if (method.kind === \"get\")\n          { this$1.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this$1.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n          { this$1.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type == \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type == \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop.value);\n      } }\n  else if (type == \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type == \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type == \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Can not use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      if (prop.kind !== \"init\") { this$1.raise(prop.key.start, \"Object pattern can't contain getter or setter\"); }\n        this$1.toAssignable(prop.value, isBinding);\n      }\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator === \"=\") {\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        // falls through to AssignmentPattern\n      } else {\n        this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\");\n        break\n      }\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  if (end) {\n    var last = exprList[end - 1];\n    if (last && last.type == \"RestElement\") {\n      --end;\n    } else if (last && last.type == \"SpreadElement\") {\n      last.type = \"RestElement\";\n      var arg = last.argument;\n      this.toAssignable(arg, isBinding);\n      --end;\n    }\n\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"));\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name);\n      } else {\n        this.declareLexicalName(expr.name);\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop.value, bindingType, checkClashes);\n  }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash) {\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) { return this.parseYield() }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type == types.parenL || this.type == types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    this.checkPatternErrors(refDestructuringErrors, true);\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left) : left;\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start == startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.inAsync && this.isContextual(\"await\")) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd == base.end && !this.canInsertSemicolon();\n  for (var computed = (void 0);;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) { this$1.expect(types.bracketR); }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({isTagged: true});\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt == this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.inFunction)\n      { this.raise(this.start, \"'super' outside of function or class\"); }\n    node = this.startNode();\n    this.next();\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc;\n    var id = this.parseIdent(this.type !== types.name);\n    if (this.options.ecmaVersion >= 8 && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name) {\n        id = this.parseIdent();\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart, innerParenStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        if (this$1.type === types.parenL && !innerParenStart) {\n          innerParenStart = this$1.start;\n        }\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (innerParenStart) { this.unexpected(innerParenStart); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inFunction)\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    this$1.checkPropClash(prop, propHash);\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  this.parsePropertyName(prop);\n  if (!isPattern && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type != types.comma && this.type != types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.enterFunctionScope();\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\"); }\n  if (this.isKeyword(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") != -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name))\n    { this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\")); }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved == \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/ternjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) { this.checkUnreserved(node); }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type == types.semi || this.canInsertSemicolon() || (this.type != types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});\n};\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};\n\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n};\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n};\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType == types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType == types.arrow)\n    { return true }\n  if (prevType == types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType == types._var || prevType == types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType == types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length == 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType == types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6) {\n    if (this.value == \"of\" && !this.exprAllowed ||\n        this.value == \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Are we running under Rhino?\nvar isRhino = typeof Packages == \"object\" && Object.prototype.toString.call(Packages) == \"[object JavaPackage]\";\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code == 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next == 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) == 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next == 33 && code == 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) == 45 &&\n      this.input.charCodeAt(this.pos + 3) == 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n    // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n    // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\n// Parse a regular expression. Some context-awareness is necessary,\n// since a '/' inside a '[]' set does not end the expression.\n\nfunction tryCreateRegexp(src, flags, throwErrorAt, parser) {\n  try {\n    return new RegExp(src, flags)\n  } catch (e) {\n    if (throwErrorAt !== undefined) {\n      if (e instanceof SyntaxError) { parser.raise(throwErrorAt, \"Error parsing regular expression: \" + e.message); }\n      throw e\n    }\n  }\n}\n\nvar regexpUnicodeSupport = !!tryCreateRegexp(\"\\uffff\", \"u\");\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var content = this.input.slice(start, this.pos);\n  ++this.pos;\n  // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n  // here (don't ask).\n  var mods = this.readWord1();\n  var tmp = content, tmpFlags = \"\";\n  if (mods) {\n    var validFlags = /^[gim]*$/;\n    if (this.options.ecmaVersion >= 6) { validFlags = /^[gimuy]*$/; }\n    if (!validFlags.test(mods)) { this.raise(start, \"Invalid regular expression flag\"); }\n    if (mods.indexOf(\"u\") >= 0) {\n      if (regexpUnicodeSupport) {\n        tmpFlags = \"u\";\n      } else {\n        // Replace each astral symbol and every Unicode escape sequence that\n        // possibly represents an astral symbol or a paired surrogate with a\n        // single ASCII symbol to avoid throwing on regular expressions that\n        // are only valid in combination with the `/u` flag.\n        // Note: replacing with the ASCII symbol `x` might cause false\n        // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n        // perfectly valid pattern that is equivalent to `[a-b]`, but it would\n        // be replaced by `[x-b]` which throws an error.\n        tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function (_match, code, offset) {\n          code = Number(\"0x\" + code);\n          if (code > 0x10FFFF) { this$1.raise(start + offset + 3, \"Code point out of bounds\"); }\n          return \"x\"\n        });\n        tmp = tmp.replace(/\\\\u([a-fA-F0-9]{4})|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\");\n        tmpFlags = tmpFlags.replace(\"u\", \"\");\n      }\n    }\n  }\n  // Detect invalid regular expressions.\n  var value = null;\n  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,\n  // so don't do detection if we are running under Rhino\n  if (!isRhino) {\n    tryCreateRegexp(tmp, tmpFlags, start, this);\n    // Get a regular expression object for this pattern-flag pair, or `null` in\n    // case the current environment doesn't support the flags it uses.\n    value = tryCreateRegexp(content, mods);\n  }\n  return this.finishToken(types.regexp, {pattern: content, flags: mods, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos, isFloat = false, octal = this.input.charCodeAt(this.pos) === 48;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  if (octal && this.pos == start + 1) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    isFloat = true;\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    isFloat = true;\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos), val;\n  if (isFloat) { val = parseFloat(str); }\n  else if (!octal || str.length === 1) { val = parseInt(str, 10); }\n  else if (this.strict) { this.raise(start, \"Invalid number\"); }\n  else if (/[89]/.test(str)) { val = parseInt(str, 10); }\n  else { val = parseInt(str, 8); }\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      if (octalStr !== \"0\" && (this.strict || inTemplate)) {\n        this.invalidStringToken(this.pos - 2, \"Octal literal in strict mode\");\n      }\n      this.pos += octalStr.length - 1;\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) != 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/ternjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/ternjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.2.1\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\nvar parse_dammit;\nvar LooseParser;\nvar pluginsLoose; // eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  parse_dammit = parse; // eslint-disable-line camelcase\n  LooseParser = Parser$$1;\n  pluginsLoose = plugins$$1;\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, parse_dammit, LooseParser, pluginsLoose, addLooseExports, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, types as tokTypes, keywords$1 as keywordTypes, TokContext, types$1 as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/acorn/dist/acorn.es.js\n// module id = 7N8s\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = FZ+f\n// module chunks = 0","/*!\n * Paper.js v0.11.5 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2016, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Thu Oct 5 16:16:29 2017 +0200\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2016 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = function(self, undefined) {\n\nself = self || require('./node/self.js');\nvar window = self.window,\n\tdocument = self.document;\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\t\tarray = [],\n\t\tslice = array.slice,\n\t\tcreate = Object.create,\n\t\tdescribe = Object.getOwnPropertyDescriptor,\n\t\tdefine = Object.defineProperty,\n\n\t\tforEach = array.forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++) {\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t}\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this) {\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t}\n\t\t},\n\n\t\tset = Object.assign || function(dst) {\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tfor (var key in src) {\n\t\t\t\t\tif (src.hasOwnProperty(key))\n\t\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dst;\n\t\t},\n\n\t\teach = function(obj, iter, bind) {\n\t\t\tif (obj) {\n\t\t\t\tvar desc = describe(obj, 'length');\n\t\t\t\t(desc && typeof desc.value === 'number' ? forEach : forIn)\n\t\t\t\t\t.call(obj, iter, bind = bind || obj);\n\t\t\t}\n\t\t\treturn bind;\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res)) {\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\t}\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable != null ? enumerable : !bean;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\tvar src = arguments[i];\n\t\t\tif (src)\n\t\t\t\tset(this, src);\n\t\t}\n\t\treturn this;\n\t}\n\n\treturn inject(Base, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, null, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor,\n\t\t\t\tproto;\n\t\t\tfor (var i = 0, obj, l = arguments.length;\n\t\t\t\t\ti < l && !(ctor && proto); i++) {\n\t\t\t\tobj = arguments[i];\n\t\t\t\tctor = ctor || obj.initialize;\n\t\t\t\tproto = proto || obj.prototype;\n\t\t\t}\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tproto = ctor.prototype = proto || create(this.prototype);\n\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this);\n\t\t\tif (arguments.length)\n\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\tctor.base = base;\n\t\t\treturn ctor;\n\t\t}\n\t}).inject({\n\t\tenumerable: false,\n\n\t\tinitialize: Base,\n\n\t\tset: Base,\n\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src) {\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\tset: set,\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function(a, b) {\n\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t},\n\n\t\t\tslice: function(list, begin, end) {\n\t\t\t\treturn slice.call(list, begin, end);\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\tenumerable: false,\n\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\timportJSON: function(json) {\n\t\treturn Base.importJSON(json, this);\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\tset: function(props, exclude) {\n\t\tif (props)\n\t\t\tBase.filter(this, props, exclude, this._prioritize);\n\t\treturn this;\n\t}\n}, {\n\nbeans: false,\nstatics: {\n\texports: {},\n\n\textend: function extend() {\n\t\tvar res = extend.base.apply(this, arguments),\n\t\t\tname = res.prototype._class;\n\t\tif (name && !Base.exports[name])\n\t\t\tBase.exports[name] = res;\n\t\treturn res;\n\t},\n\n\tequals: function(obj1, obj2) {\n\t\tif (obj1 === obj2)\n\t\t\treturn true;\n\t\tif (obj1 && obj1.equals)\n\t\t\treturn obj1.equals(obj2);\n\t\tif (obj2 && obj2.equals)\n\t\t\treturn obj2.equals(obj1);\n\t\tif (obj1 && obj2\n\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tvar length = obj1.length;\n\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\twhile (length--) {\n\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\tlength = keys.length;\n\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\treturn false;\n\t\t\t\twhile (length--) {\n\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tread: function(list, start, options, amount) {\n\t\tif (this === Base) {\n\t\t\tvar value = this.peek(list, start);\n\t\t\tlist.__index++;\n\t\t\treturn value;\n\t\t}\n\t\tvar proto = this.prototype,\n\t\t\treadIndex = proto._readIndex,\n\t\t\tbegin = start || readIndex && list.__index || 0,\n\t\t\tlength = list.length,\n\t\t\tobj = list[begin];\n\t\tamount = amount || length - begin;\n\t\tif (obj instanceof this\n\t\t\t|| options && options.readNull && obj == null && amount <= 1) {\n\t\t\tif (readIndex)\n\t\t\t\tlist.__index = begin + 1;\n\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t}\n\t\tobj = Base.create(proto);\n\t\tif (readIndex)\n\t\t\tobj.__read = true;\n\t\tobj = obj.initialize.apply(obj, begin > 0 || begin + amount < length\n\t\t\t\t? Base.slice(list, begin, begin + amount)\n\t\t\t\t: list) || obj;\n\t\tif (readIndex) {\n\t\t\tlist.__index = begin + obj.__read;\n\t\t\tvar filtered = obj.__filtered;\n\t\t\tif (filtered) {\n\t\t\t\tlist.__filtered = filtered;\n\t\t\t\tobj.__filtered = undefined;\n\t\t\t}\n\t\t\tobj.__read = undefined;\n\t\t}\n\t\treturn obj;\n\t},\n\n\tpeek: function(list, start) {\n\t\treturn list[list.__index = start || list.__index || 0];\n\t},\n\n\tremain: function(list) {\n\t\treturn list.length - (list.__index || 0);\n\t},\n\n\treadList: function(list, start, options, amount) {\n\t\tvar res = [],\n\t\t\tentry,\n\t\t\tbegin = start || 0,\n\t\t\tend = amount ? begin + amount : list.length;\n\t\tfor (var i = begin; i < end; i++) {\n\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t}\n\t\treturn res;\n\t},\n\n\treadNamed: function(list, name, start, options, amount) {\n\t\tvar value = this.getNamed(list, name),\n\t\t\thasObject = value !== undefined;\n\t\tif (hasObject) {\n\t\t\tvar filtered = list.__filtered;\n\t\t\tif (!filtered) {\n\t\t\t\tfiltered = list.__filtered = Base.create(list[0]);\n\t\t\t\tfiltered.__unfiltered = list[0];\n\t\t\t}\n\t\t\tfiltered[name] = undefined;\n\t\t}\n\t\tvar l = hasObject ? [value] : list,\n\t\t\tres = this.read(l, start, options, amount);\n\t\treturn res;\n\t},\n\n\tgetNamed: function(list, name) {\n\t\tvar arg = list[0];\n\t\tif (list._hasObject === undefined)\n\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\tif (list._hasObject)\n\t\t\treturn name ? arg[name] : list.__filtered || arg;\n\t},\n\n\thasNamed: function(list, name) {\n\t\treturn !!this.getNamed(list, name);\n\t},\n\n\tfilter: function(dest, source, exclude, prioritize) {\n\t\tvar processed;\n\n\t\tfunction handleKey(key) {\n\t\t\tif (!(exclude && key in exclude) &&\n\t\t\t\t!(processed && key in processed)) {\n\t\t\t\tvar value = source[key];\n\t\t\t\tif (value !== undefined)\n\t\t\t\t\tdest[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tif (prioritize) {\n\t\t\tvar keys = {};\n\t\t\tfor (var i = 0, key, l = prioritize.length; i < l; i++) {\n\t\t\t\tif ((key = prioritize[i]) in source) {\n\t\t\t\t\thandleKey(key);\n\t\t\t\t\tkeys[key] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprocessed = keys;\n\t\t}\n\n\t\tObject.keys(source.__unfiltered || source).forEach(handleKey);\n\t\treturn dest;\n\t},\n\n\tisPlainValue: function(obj, asString) {\n\t\treturn Base.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t|| asString && typeof obj === 'string';\n\t},\n\n\tserialize: function(obj, options, compact, dictionary) {\n\t\toptions = options || {};\n\n\t\tvar isRoot = !dictionary,\n\t\t\tres;\n\t\tif (isRoot) {\n\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\tdictionary = {\n\t\t\t\tlength: 0,\n\t\t\t\tdefinitions: {},\n\t\t\t\treferences: {},\n\t\t\t\tadd: function(item, create) {\n\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t}\n\t\t\t\t\treturn ref;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tif (obj && obj._serialize) {\n\t\t\tres = obj._serialize(options, dictionary);\n\t\t\tvar name = obj._class;\n\t\t\tif (name && !obj._compactSerialize && (isRoot || !compact)\n\t\t\t\t\t&& res[0] !== name) {\n\t\t\t\tres.unshift(name);\n\t\t\t}\n\t\t} else if (Array.isArray(obj)) {\n\t\t\tres = [];\n\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\tres[i] = Base.serialize(obj[i], options, compact, dictionary);\n\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\tres = {};\n\t\t\tvar keys = Object.keys(obj);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\tdictionary);\n\t\t\t}\n\t\t} else if (typeof obj === 'number') {\n\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t} else {\n\t\t\tres = obj;\n\t\t}\n\t\treturn isRoot && dictionary.length > 0\n\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t: res;\n\t},\n\n\tdeserialize: function(json, create, _data, _setDictionary, _isRoot) {\n\t\tvar res = json,\n\t\t\tisFirst = !_data,\n\t\t\thasDictionary = isFirst && json && json.length\n\t\t\t\t&& json[0][0] === 'dictionary';\n\t\t_data = _data || {};\n\t\tif (Array.isArray(json)) {\n\t\t\tvar type = json[0],\n\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\tif (json.length == 1 && /^#/.test(type)) {\n\t\t\t\treturn _data.dictionary[type];\n\t\t\t}\n\t\t\ttype = Base.exports[type];\n\t\t\tres = [];\n\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++) {\n\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\tisDictionary, hasDictionary));\n\t\t\t}\n\t\t\tif (type) {\n\t\t\t\tvar args = res;\n\t\t\t\tif (create) {\n\t\t\t\t\tres = create(type, args, isFirst || _isRoot);\n\t\t\t\t} else {\n\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Base.isPlainObject(json)) {\n\t\t\tres = {};\n\t\t\tif (_setDictionary)\n\t\t\t\t_data.dictionary = res;\n\t\t\tfor (var key in json)\n\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t}\n\t\treturn hasDictionary ? res[1] : res;\n\t},\n\n\texportJSON: function(obj, options) {\n\t\tvar json = Base.serialize(obj, options);\n\t\treturn options && options.asString == false\n\t\t\t\t? json\n\t\t\t\t: JSON.stringify(json);\n\t},\n\n\timportJSON: function(json, target) {\n\t\treturn Base.deserialize(\n\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\tfunction(ctor, args, isRoot) {\n\t\t\t\t\tvar useTarget = isRoot && target\n\t\t\t\t\t\t\t&& target.constructor === ctor,\n\t\t\t\t\t\tobj = useTarget ? target\n\t\t\t\t\t\t\t: Base.create(ctor.prototype);\n\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t&& (useTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t}\n\t\t\t\t\t(useTarget ? obj.set : ctor).apply(obj, args);\n\t\t\t\t\tif (useTarget)\n\t\t\t\t\t\ttarget = null;\n\t\t\t\t\treturn obj;\n\t\t\t\t});\n\t},\n\n\tsplice: function(list, items, index, remove) {\n\t\tvar amount = items && items.length,\n\t\t\tappend = index === undefined;\n\t\tindex = append ? list.length : index;\n\t\tif (index > list.length)\n\t\t\tindex = list.length;\n\t\tfor (var i = 0; i < amount; i++)\n\t\t\titems[i]._index = index + i;\n\t\tif (append) {\n\t\t\tlist.push.apply(list, items);\n\t\t\treturn [];\n\t\t} else {\n\t\t\tvar args = [index, remove];\n\t\t\tif (items)\n\t\t\t\targs.push.apply(args, items);\n\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\tremoved[i]._index = undefined;\n\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\tlist[i]._index = i;\n\t\t\treturn removed;\n\t\t}\n\t},\n\n\tcapitalize: function(str) {\n\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\treturn match.toUpperCase();\n\t\t});\n\t},\n\n\tcamelize: function(str) {\n\t\treturn str.replace(/-(.)/g, function(match, chr) {\n\t\t\treturn chr.toUpperCase();\n\t\t});\n\t},\n\n\thyphenate: function(str) {\n\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t}\n}});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = Base.slice(arguments, 1),\n\t\t\tsetTarget = event && event.target && !event.currentTarget;\n\t\thandlers = handlers.slice();\n\t\tif (setTarget)\n\t\t\tevent.currentTarget = this;\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) == false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t   }\n\t\t}\n\t\tif (setTarget)\n\t\t\tdelete event.currentTarget;\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar types = this._eventTypes,\n\t\t\thandlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tif (types) {\n\t\t\tfor (var type in handlers) {\n\t\t\t\tif (handlers[type].length > 0) {\n\t\t\t\t\tvar entry = types[type],\n\t\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\t\tif (func)\n\t\t\t\t\t\tfunc.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\tinsertItems: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1) || {};\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\t\tif (!this.agent) {\n\t\t\tvar user = self.navigator.userAgent.toLowerCase(),\n\t\t\t\tos = (/(darwin|win|mac|linux|freebsd|sunos)/.exec(user)||[])[0],\n\t\t\t\tplatform = os === 'darwin' ? 'mac' : os,\n\t\t\t\tagent = proto.agent = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tagent[platform] = true;\n\t\t\tuser.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom|node)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:v?([.\\d]+))?/g,\n\t\t\t\tfunction(match, n, v1, v2, rv) {\n\t\t\t\t\tif (!agent.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 :\n\t\t\t\t\t\t\t\t/^(node|trident)$/.test(n) ? rv : v1;\n\t\t\t\t\t\tagent.version = v;\n\t\t\t\t\t\tagent.versionNumber = parseFloat(v);\n\t\t\t\t\t\tn = n === 'trident' ? 'msie' : n;\n\t\t\t\t\t\tagent.name = n;\n\t\t\t\t\t\tagent[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (agent.chrome)\n\t\t\t\tdelete agent.webkit;\n\t\t\tif (agent.atom)\n\t\t\t\tdelete agent.chrome;\n\t\t}\n\t},\n\n\tversion: \"0.11.5\",\n\n\tgetView: function() {\n\t\tvar project = this.project;\n\t\treturn project && project._view;\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, options) {\n\t\tpaper.PaperScript.execute(code, this, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tcreateCanvas: function(width, height) {\n\t\treturn CanvasProvider.getCanvas(width, height);\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tvar projects = this.projects,\n\t\t\ttools = this.tools;\n\t\tfor (var i = projects.length - 1; i >= 0; i--)\n\t\t\tprojects[i].remove();\n\t\tfor (var i = tools.length - 1; i >= 0; i--)\n\t\t\ttools[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._scope.getView();\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = Base.pick(precision, 5);\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn this.precision < 16\n\t\t\t\t? Math.round(val * this.multiplier) / this.multiplier : val;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tlog2 = Math.log2 || function(x) {\n\t\t\treturn Math.log(x) * Math.LOG2E;\n\t\t},\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\tfunction clamp(value, min, max) {\n\t\treturn value < min ? min : value > max ? max : value;\n\t}\n\n\tfunction getDiscriminant(a, b, c) {\n\t\tfunction split(v) {\n\t\t\tvar x = v * 134217729,\n\t\t\t\ty = v - x,\n\t\t\t\thi = y + x,\n\t\t\t\tlo = v - hi;\n\t\t\treturn [hi, lo];\n\t\t}\n\n\t\tvar D = b * b - a * c,\n\t\t\tE = b * b + a * c;\n\t\tif (abs(D) * 3 < E) {\n\t\t\tvar ad = split(a),\n\t\t\t\tbd = split(b),\n\t\t\t\tcd = split(c),\n\t\t\t\tp = b * b,\n\t\t\t\tdp = (bd[0] * bd[0] - p + 2 * bd[0] * bd[1]) + bd[1] * bd[1],\n\t\t\t\tq = a * c,\n\t\t\t\tdq = (ad[0] * cd[0] - q + ad[0] * cd[1] + ad[1] * cd[0])\n\t\t\t\t\t\t+ ad[1] * cd[1];\n\t\t\tD = (p - q) + (dp - dq);\n\t\t}\n\t\treturn D;\n\t}\n\n\tfunction getNormalizationFactor() {\n\t\tvar norm = Math.max.apply(Math, arguments);\n\t\treturn norm && (norm < 1e-8 || norm > 1e8)\n\t\t\t\t? pow(2, -Math.round(log2(norm)))\n\t\t\t\t: 0;\n\t}\n\n\treturn {\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tCURVETIME_EPSILON: 1e-8,\n\t\tGEOMETRIC_EPSILON: 1e-7,\n\t\tTRIGONOMETRIC_EPSILON: 1e-8,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t},\n\n\t\tclamp: clamp,\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance) {\n\t\t\t\t\tx = nx;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn clamp(x, a, b);\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar x1, x2 = Infinity;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(b) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / b;\n\t\t\t} else {\n\t\t\t\tb *= -0.5;\n\t\t\t\tvar D = getDiscriminant(a, b, c);\n\t\t\t\tif (D && abs(D) < MACHINE_EPSILON) {\n\t\t\t\t\tvar f = getNormalizationFactor(abs(a), abs(b), abs(c));\n\t\t\t\t\tif (f) {\n\t\t\t\t\t\ta *= f;\n\t\t\t\t\t\tb *= f;\n\t\t\t\t\t\tc *= f;\n\t\t\t\t\t\tD = getDiscriminant(a, b, c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\t\tif (R === 0) {\n\t\t\t\t\t\tx1 = c / a;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx1 = R / a;\n\t\t\t\t\t\tx2 = c / R;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = 0,\n\t\t\t\tboundless = min == null,\n\t\t\t\tminB = min - EPSILON,\n\t\t\t\tmaxB = max + EPSILON;\n\t\t\tif (isFinite(x1) && (boundless || x1 > minB && x1 < maxB))\n\t\t\t\troots[count++] = boundless ? x1 : clamp(x1, min, max);\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (boundless || x2 > minB && x2 < maxB))\n\t\t\t\troots[count++] = boundless ? x2 : clamp(x2, min, max);\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar f = getNormalizationFactor(abs(a), abs(b), abs(c), abs(d)),\n\t\t\t\tx, b1, c2, qd, q;\n\t\t\tif (f) {\n\t\t\t\ta *= f;\n\t\t\t\tb *= f;\n\t\t\t\tc *= f;\n\t\t\t\td *= f;\n\t\t\t}\n\n\t\t\tfunction evaluate(x0) {\n\t\t\t\tx = x0;\n\t\t\t\tvar tmp = a * x;\n\t\t\t\tb1 = tmp + b;\n\t\t\t\tc2 = b1 * x + c;\n\t\t\t\tqd = (tmp + b1) * x + c2;\n\t\t\t\tq = c2 * x + d;\n\t\t\t}\n\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tevaluate(-(b / a) / 3);\n\t\t\t\tvar t = q / a,\n\t\t\t\t\tr = pow(abs(t), 1/3),\n\t\t\t\t\ts = t < 0 ? -1 : 1,\n\t\t\t\t\ttd = -qd / a,\n\t\t\t\t\trd = td > 0 ? 1.324717957244746 * Math.max(r, sqrt(td)) : r,\n\t\t\t\t\tx0 = x - s * rd;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tevaluate(x0);\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / (1 + MACHINE_EPSILON);\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max),\n\t\t\t\tboundless = min == null;\n\t\t\tif (isFinite(x) && (count === 0\n\t\t\t\t\t|| count > 0 && x !== roots[0] && x !== roots[1])\n\t\t\t\t\t&& (boundless || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\troots[count++] = boundless ? x : clamp(x, min, max);\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(name) {\n\t\tif (name) {\n\t\t\tvar pool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0,\n\t\t\treading = this.__read,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis._set(arg0, hasY ? arg1 : arg0);\n\t\t\tif (reading)\n\t\t\t\tread = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0);\n\t\t\tif (reading)\n\t\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tvar obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n\t\t\tread = 1;\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\tthis._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n\t\t\t} else if ('x' in obj) {\n\t\t\t\tthis._set(obj.x || 0, obj.y || 0);\n\t\t\t} else if ('width' in obj) {\n\t\t\t\tthis._set(obj.width || 0, obj.height || 0);\n\t\t\t} else if ('angle' in obj) {\n\t\t\t\tthis._set(obj.length || 0, 0);\n\t\t\t\tthis.setAngle(obj.angle || 0);\n\t\t\t} else {\n\t\t\t\tthis._set(0, 0);\n\t\t\t\tread = 0;\n\t\t\t}\n\t\t}\n\t\tif (reading)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis._set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis._set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis._set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * cos - point.y * sin,\n\t\t\tpoint.x * sin + point.y * cos\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\ttolerance = Base.read(arguments);\n\t\treturn this.getDistance(point) <= tolerance;\n\t},\n\n\tisCollinear: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this.x) && isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tisInQuadrant: function(q) {\n\t\treturn this.x * (q > 1 && q < 4 ? -1 : 1) >= 0\n\t\t\t&& this.y * (q > 2 ? -1 : 1) >= 0;\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\treturn new Point(\n\t\t\tpoint.x * scale,\n\t\t\tpoint.y * scale\n\t\t);\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t},\n\n\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-8;\n\t\t},\n\n\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-8;\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(key) {\n\tvar op = Math[key];\n\tthis[key] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._owner._selection & this._getSelection());\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner._changeSelection(this._getSelection(), selected);\n\t},\n\n\t_getSelection: function() {\n\t\treturn this._setter === 'setPosition' ? 4 : 0;\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0,\n\t\t\treading = this.__read,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis._set(arg0, hasHeight ? arg1 : arg0);\n\t\t\tif (reading)\n\t\t\t\tread = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0);\n\t\t\tif (reading)\n\t\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tvar obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n\t\t\tread = 1;\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\tthis._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n\t\t\t} else if ('width' in obj) {\n\t\t\t\tthis._set(obj.width || 0, obj.height || 0);\n\t\t\t} else if ('x' in obj) {\n\t\t\t\tthis._set(obj.x || 0, obj.y || 0);\n\t\t\t} else {\n\t\t\t\tthis._set(0, 0);\n\t\t\t\tread = 0;\n\t\t\t}\n\t\t}\n\t\tif (reading)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this.width) && isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(key) {\n\tvar op = Math[key];\n\tthis[key] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread;\n\t\tif (type === 'number') {\n\t\t\tthis._set(arg0, arg1, arg2, arg3);\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0, 0, 0);\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis._set.apply(this, arg0);\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis._set(arg0.x || 0, arg0.y || 0,\n\t\t\t\t\t\targ0.width || 0, arg0.height || 0);\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis._set(0, 0, 0, 0);\n\t\t\t\tBase.filter(this, arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (read === undefined) {\n\t\t\tvar frm = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments),\n\t\t\t\tx = frm.x,\n\t\t\t\ty = frm.y,\n\t\t\t\twidth,\n\t\t\t\theight;\n\t\t\tif (next && next.x !== undefined\n\t\t\t\t\t|| Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\twidth = to.x - x;\n\t\t\t\theight = to.y - y;\n\t\t\t\tif (width < 0) {\n\t\t\t\t\tx = to.x;\n\t\t\t\t\twidth = -width;\n\t\t\t\t}\n\t\t\t\tif (height < 0) {\n\t\t\t\t\ty = to.y;\n\t\t\t\t\theight = -height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\twidth = size.width;\n\t\t\t\theight = size.height;\n\t\t\t}\n\t\t\tthis._set(x, y, width, height);\n\t\t\tread = arguments.__index;\n\t\t\tvar filtered = arguments.__filtered;\n\t\t\tif (filtered)\n\t\t\t\tthis.__filtered = filtered;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\t_fw: 1,\n\t_fh: 1,\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tsx = this._sx,\n\t\t\tsy = this._sy,\n\t\t\tw = size.width,\n\t\t\th = size.height;\n\t\tif (sx) {\n\t\t\tthis.x += (this.width - w) * sx;\n\t\t}\n\t\tif (sy) {\n\t\t\tthis.y += (this.height - h) * sy;\n\t\t}\n\t\tthis.width = w;\n\t\tthis.height = h;\n\t\tthis._fw = this._fh = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fw) {\n\t\t\tvar amount = left - this.x;\n\t\t\tthis.width -= this._sx === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.x = left;\n\t\tthis._sx = this._fw = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fh) {\n\t\t\tvar amount = top - this.y;\n\t\t\tthis.height -= this._sy === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.y = top;\n\t\tthis._sy = this._fh = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (!this._fw) {\n\t\t\tvar amount = right - this.x;\n\t\t\tthis.width = this._sx === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.x = right - this.width;\n\t\tthis._sx = 1;\n\t\tthis._fw = 0;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (!this._fh) {\n\t\t\tvar amount = bottom - this.y;\n\t\t\tthis.height = this._sy === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.y = bottom - this.height;\n\t\tthis._sy = 1;\n\t\tthis._fh = 0;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width / 2;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tif (this._fw || this._sx === 0.5) {\n\t\t\tthis.x = x - this.width / 2;\n\t\t} else {\n\t\t\tif (this._sx) {\n\t\t\t\tthis.x += (x - this.x) * 2 * this._sx;\n\t\t\t}\n\t\t\tthis.width = (x - this.x) * 2;\n\t\t}\n\t\tthis._sx = 0.5;\n\t\tthis._fw = 0;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height / 2;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tif (this._fh || this._sy === 0.5) {\n\t\t\tthis.y = y - this.height / 2;\n\t\t} else {\n\t\t\tif (this._sy) {\n\t\t\t\tthis.y += (y - this.y) * 2 * this._sy;\n\t\t\t}\n\t\t\tthis.height = (y - this.y) * 2;\n\t\t}\n\t\tthis._sy = 0.5;\n\t\tthis._fh = 0;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length === 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tepsilon = Base.read(arguments) || 0;\n\t\treturn rect.x + rect.width > this.x - epsilon\n\t\t\t\t&& rect.y + rect.height > this.y - epsilon\n\t\t\t\t&& rect.x < this.x + this.width + epsilon\n\t\t\t\t&& rect.y < this.y + this.height + epsilon;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join(''),\n\t\t\txFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis._set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n},\nnew function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key),\n\t\t\tinternal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn !!(this._owner._selection & 2);\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner._changeSelection) {\n\t\t\t\t\towner._changeSelection(2, selected);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg, _dontNotify) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count >= 6) {\n\t\t\tthis._set.apply(this, arguments);\n\t\t} else if (count === 1 || count === 2) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis._set(arg._a, arg._b, arg._c, arg._d, arg._tx, arg._ty,\n\t\t\t\t\t\t_dontNotify);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis._set.apply(this,\n\t\t\t\t\t\t_dontNotify ? arg.concat([_dontNotify]) : arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (!count) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok) {\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t\t}\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(a, b, c, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._b = b;\n\t\tthis._c = c;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.getValues(), options, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._b, this._c, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._c),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._b), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._b = this._c = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._c;\n\t\tthis._ty += x * this._b + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._b *= scale.x;\n\t\tthis._c *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * c;\n\t\tthis._b = cos * b + sin * d;\n\t\tthis._c = -sin * a + cos * c;\n\t\tthis._d = -sin * b + cos * d;\n\t\tthis._tx += tx * a + ty * c;\n\t\tthis._ty += tx * b + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tb = this._b;\n\t\tthis._a += shear.y * this._c;\n\t\tthis._b += shear.y * this._d;\n\t\tthis._c += shear.x * a;\n\t\tthis._d += shear.x * b;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tappend: function(mx, _dontNotify) {\n\t\tif (mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._c,\n\t\t\t\tc2 = mx._b,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + c2 * c1;\n\t\t\tthis._c = b2 * a1 + d2 * c1;\n\t\t\tthis._b = a2 * b1 + c2 * d1;\n\t\t\tthis._d = b2 * b1 + d2 * d1;\n\t\t\tthis._tx += tx2 * a1 + ty2 * c1;\n\t\t\tthis._ty += tx2 * b1 + ty2 * d1;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t}\n\t\treturn this;\n\t},\n\n\tprepend: function(mx, _dontNotify) {\n\t\tif (mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ttx1 = this._tx,\n\t\t\t\tty1 = this._ty,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._c,\n\t\t\t\tc2 = mx._b,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + b2 * b1;\n\t\t\tthis._c = a2 * c1 + b2 * d1;\n\t\t\tthis._b = c2 * a1 + d2 * b1;\n\t\t\tthis._d = c2 * c1 + d2 * d1;\n\t\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t}\n\t\treturn this;\n\t},\n\n\tappended: function(mx) {\n\t\treturn this.clone().append(mx);\n\t},\n\n\tprepended: function(mx) {\n\t\treturn this.clone().prepend(mx);\n\t},\n\n\tinvert: function() {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\ttx = this._tx,\n\t\t\tty = this._ty,\n\t\t\tdet = a * d - b * c,\n\t\t\tres = null;\n\t\tif (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n\t\t\tthis._a = d / det;\n\t\t\tthis._b = -b / det;\n\t\t\tthis._c = -c / det;\n\t\t\tthis._d = a / det;\n\t\t\tthis._tx = (c * ty - d * tx) / det;\n\t\t\tthis._ty = (b * tx - a * ty) / det;\n\t\t\tres = this;\n\t\t}\n\t\treturn res;\n\t},\n\n\tinverted: function() {\n\t\treturn this.clone().invert();\n\t},\n\n\tconcatenate: '#append',\n\tpreConcatenate: '#prepend',\n\tchain: '#appended',\n\n\t_shiftless: function() {\n\t\treturn new Matrix(this._a, this._b, this._c, this._d, 0, 0);\n\t},\n\n\t_orNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._b === 0 && this._c === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\tisInvertible: function() {\n\t\tvar det = this._a * this._d - this._c * this._b;\n\t\treturn det && !isNaN(det) && isFinite(this._tx) && isFinite(this._ty);\n\t},\n\n\tisSingular: function() {\n\t\treturn !this.isInvertible();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest._set(\n\t\t\t\tx * this._a + y * this._c + this._tx,\n\t\t\t\tx * this._b + y * this._d + this._ty,\n\t\t\t\t_dontNotify);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tfor (var i = 0, max = 2 * count; i < max; i += 2) {\n\t\t\tvar x = src[i],\n\t\t\t\ty = src[i + 1];\n\t\t\tdst[i] = x * this._a + y * this._c + this._tx;\n\t\t\tdst[i + 1] = x * this._b + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = min.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j]) {\n\t\t\t\tmin[j] = val;\n\t\t\t} else if (val > max[j]) {\n\t\t\t\tmax[j] = val;\n\t\t\t}\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest._set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\ttx = this._tx,\n\t\t\tty = this._ty,\n\t\t\tdet = a * d - b * c,\n\t\t\tres = null;\n\t\tif (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n\t\t\tvar x = point.x - this._tx,\n\t\t\t\ty = point.y - this._ty;\n\t\t\tif (!dest)\n\t\t\t\tdest = new Point();\n\t\t\tres = dest._set(\n\t\t\t\t\t(x * d - y * c) / det,\n\t\t\t\t\t(y * a - x * b) / det,\n\t\t\t\t\t_dontNotify);\n\t\t}\n\t\treturn res;\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\tdet = a * d - b * c,\n\t\t\tsqrt = Math.sqrt,\n\t\t\tatan2 = Math.atan2,\n\t\t\tdegrees = 180 / Math.PI,\n\t\t\trotate,\n\t\t\tscale,\n\t\t\tskew;\n\t\tif (a !== 0 || b !== 0) {\n\t\t\tvar r = sqrt(a * a + b * b);\n\t\t\trotate = Math.acos(a / r) * (b > 0 ? 1 : -1);\n\t\t\tscale = [r, det / r];\n\t\t\tskew = [atan2(a * c + b * d, r * r), 0];\n\t\t} else if (c !== 0 || d !== 0) {\n\t\t\tvar s = sqrt(c * c + d * d);\n\t\t\trotate = Math.asin(c / s)  * (d > 0 ? 1 : -1);\n\t\t\tscale = [det / s, s];\n\t\t\tskew = [0, atan2(a * c + b * d, s * s)];\n\t\t} else {\n\t\t\trotate = 0;\n\t\t\tskew = scale = [0, 0];\n\t\t}\n\t\treturn {\n\t\t\ttranslation: this.getTranslation(),\n\t\t\trotation: rotate * degrees,\n\t\t\tscaling: new Point(scale),\n\t\t\tskewing: new Point(skew[0] * degrees, skew[1] * degrees)\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._b, this._c, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tif (!this.isIdentity()) {\n\t\t\tctx.transform(this._a, this._b, this._c, this._d,\n\t\t\t\t\tthis._tx, this._ty);\n\t\t}\n\t}\n}, Base.each(['a', 'b', 'c', 'd', 'tx', 'ty'], function(key) {\n\tvar part = Base.capitalize(key),\n\t\tprop = '_' + key;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point, isInfinite) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(this.getSignedDistance(point));\n\t},\n\n\tgetSignedDistance: function(point) {\n\t\treturn Line.getSignedDistance(this._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tisCollinear: function(line) {\n\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tisOrthogonal: function(line) {\n\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tstatics: {\n\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tv1x -= p1x;\n\t\t\t\tv1y -= p1y;\n\t\t\t\tv2x -= p2x;\n\t\t\t\tv2y -= p2y;\n\t\t\t}\n\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\tif (isInfinite\n\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t}\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (!isInfinite && Numerical.isZero(ccw)) {\n\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\tccw = 0;\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn vx === 0 ? vy > 0 ? x - px : px - x\n\t\t\t\t : vy === 0 ? vx < 0 ? y - py : py - y\n\t\t\t\t : ((x-px) * vy - (y-py) * vx) / Math.sqrt(vx * vx + vy * vy);\n\t\t},\n\n\t\tgetDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\treturn Math.abs(\n\t\t\t\t\tLine.getSignedDistance(px, py, vx, vy, x, y, asVector));\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\t_compactSerialize: true,\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tthis._activeLayer = null;\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectionItems = {};\n\t\tthis._selectionCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this._children, options, true, dictionary);\n\t},\n\n\t_changed: function(flags, item) {\n\t\tif (flags & 1) {\n\t\t\tvar view = this._view;\n\t\t\tif (view) {\n\t\t\t\tview._needsUpdate = true;\n\t\t\t\tif (!view._requested && view._autoUpdate)\n\t\t\t\t\tview.requestUpdate();\n\t\t\t}\n\t\t}\n\t\tvar changes = this._changes;\n\t\tif (changes && item) {\n\t\t\tvar changesById = this._changesById,\n\t\t\t\tid = item._id,\n\t\t\t\tentry = changesById[id];\n\t\t\tif (entry) {\n\t\t\t\tentry.flags |= flags;\n\t\t\t} else {\n\t\t\t\tchanges.push(changesById[id] = { item: item, flags: flags });\n\t\t\t}\n\t\t}\n\t},\n\n\tclear: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--)\n\t\t\tchildren[i].remove();\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children.length;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.set(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetLayers: function() {\n\t\treturn this._children;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this, insert: true });\n\t},\n\n\tgetSymbolDefinitions: function() {\n\t\tvar definitions = [],\n\t\t\tids = {};\n\t\tthis.getItems({\n\t\t\tclass: SymbolItem,\n\t\t\tmatch: function(item) {\n\t\t\t\tvar definition = item._definition,\n\t\t\t\t\tid = definition._id;\n\t\t\t\tif (!ids[id]) {\n\t\t\t\t\tids[id] = true;\n\t\t\t\t\tdefinitions.push(definition);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\treturn definitions;\n\t},\n\n\tgetSymbols: 'getSymbolDefinitions',\n\n\tgetSelectedItems: function() {\n\t\tvar selectionItems = this._selectionItems,\n\t\t\titems = [];\n\t\tfor (var id in selectionItems) {\n\t\t\tvar item = selectionItems[id],\n\t\t\t\tselection = item._selection;\n\t\t\tif ((selection & 1) && item.isInserted()) {\n\t\t\t\titems.push(item);\n\t\t\t} else if (!selection) {\n\t\t\t\tthis._updateSelection(item);\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectionItems = this._selectionItems;\n\t\tif (item._selection) {\n\t\t\tif (selectionItems[id] !== item) {\n\t\t\t\tthis._selectionCount++;\n\t\t\t\tselectionItems[id] = item;\n\t\t\t}\n\t\t} else if (selectionItems[id] === item) {\n\t\t\tthis._selectionCount--;\n\t\t\tdelete selectionItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectionItems = this._selectionItems;\n\t\tfor (var i in selectionItems)\n\t\t\tselectionItems[i].setFullySelected(false);\n\t},\n\n\taddLayer: function(layer) {\n\t\treturn this.insertLayer(undefined, layer);\n\t},\n\n\tinsertLayer: function(index, layer) {\n\t\tif (layer instanceof Layer) {\n\t\t\tlayer._remove(false, true);\n\t\t\tBase.splice(this._children, [layer], index, 0);\n\t\t\tlayer._setProject(this, true);\n\t\t\tvar name = layer._name;\n\t\t\tif (name)\n\t\t\t\tlayer.setName(name);\n\t\t\tif (this._changes)\n\t\t\t\tlayer._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = layer;\n\t\t} else {\n\t\t\tlayer = null;\n\t\t}\n\t\treturn layer;\n\t},\n\n\t_insertItem: function(index, item, _created) {\n\t\titem = this.insertLayer(index, item)\n\t\t\t\t|| (this._activeLayer || this._insertItem(undefined,\n\t\t\t\t\t\tnew Layer(Item.NO_INSERT), true))\n\t\t\t\t\t\t.insertChild(index, item);\n\t\tif (_created && item.activate)\n\t\t\titem.activate();\n\t\treturn item;\n\t},\n\n\tgetItems: function(options) {\n\t\treturn Item._getItems(this, options);\n\t},\n\n\tgetItem: function(options) {\n\t\treturn Item._getItems(this, options, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tremoveOn: function(type) {\n\t\tvar sets = this._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar children = this._children,\n\t\t\tparam = new Base({\n\t\t\t\toffset: new Point(0, 0),\n\t\t\t\tpixelRatio: pixelRatio,\n\t\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\t\tmatrices: [new Matrix()],\n\t\t\t\tupdateMatrix: true\n\t\t\t});\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tchildren[i].draw(ctx, param);\n\t\t}\n\t\tctx.restore();\n\n\t\tif (this._selectionCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectionItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items) {\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = Base.set({},\n\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_name: null,\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_canScaleStroke: false,\n\t_pivot: null,\n\t_visible: true,\n\t_blendMode: 'normal',\n\t_opacity: 1,\n\t_locked: false,\n\t_guide: false,\n\t_clipMask: false,\n\t_selection: 0,\n\t_selectBounds: true,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tlocked: false,\n\t\tguide: false,\n\t\tclipMask: false,\n\t\tselected: false,\n\t\tdata: {}\n\t},\n\t_prioritize: ['applyMatrix']\n},\nnew function() {\n\tvar handlers = ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'];\n\treturn Base.each(handlers,\n\t\tfunction(name) {\n\t\t\tthis._events[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis.getView()._countItemEvent(type, 1);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis.getView()._countItemEvent(type, -1);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\t_events: {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t\t},\n\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {},\n\t\t\t\tonError: {}\n\t\t\t},\n\t\t\tstatics: {\n\t\t\t\t_itemHandlers: handlers\n\t\t\t}\n\t\t}\n\t);\n}, {\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project,\n\t\t\tsettings = paper.settings;\n\t\tthis._id = internal ? null : UID.get();\n\t\tthis._parent = this._index = null;\n\t\tthis._applyMatrix = this._canApplyMatrix && settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (internal || hasProps && props.insert == false\n\t\t\t|| !settings.insertItems && !(hasProps && props.insert === true)) {\n\t\t\tthis._setProject(project);\n\t\t} else {\n\t\t\t(hasProps && props.parent || project)\n\t\t\t\t\t._insertItem(undefined, this, true);\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT) {\n\t\t\tthis.set(props, {\n\t\t\t\tinternal: true, insert: true, project: true, parent: true\n\t\t\t});\n\t\t}\n\t\treturn hasProps;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._symbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project)\n\t\t\tproject._changed(flags, this);\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar owner = this._getOwner();\n\t\tif (name && owner) {\n\t\t\tvar children = owner._children,\n\t\t\t\tnamedChildren = owner._namedChildren;\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tif (!(name in children))\n\t\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tkey = '_' + name,\n\t\t\tflags = {\n\t\t\t\tlocked: 128,\n\t\t\t\tvisible: 137\n\t\t\t};\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[key];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[key]) {\n\t\t\t\tthis[key] = value;\n\t\t\t\tthis._changed(flags[name] || 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\tgetSelection: function() {\n\t\treturn this._selection;\n\t},\n\n\tsetSelection: function(selection) {\n\t\tif (selection !== this._selection) {\n\t\t\tthis._selection = selection;\n\t\t\tvar project = this._project;\n\t\t\tif (project) {\n\t\t\t\tproject._updateSelection(this);\n\t\t\t\tthis._changed(129);\n\t\t\t}\n\t\t}\n\t},\n\n\t_changeSelection: function(flag, selected) {\n\t\tvar selection = this._selection;\n\t\tthis.setSelection(selected ? selection | flag : selection & ~flag);\n\t},\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn !!(this._selection & 1);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tthis._changeSelection(1, selected);\n\t},\n\n\tisFullySelected: function() {\n\t\tvar children = this._children,\n\t\t\tselected = !!(this._selection & 1);\n\t\tif (children && selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis._changeSelection(1, selected);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function() {\n\t\tvar pivot = this._pivot;\n\t\treturn pivot\n\t\t\t\t? new LinkedPoint(pivot.x, pivot.y, this, 'setPivot')\n\t\t\t\t: null;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t}\n}, Base.each({\n\t\tgetStrokeBounds: { stroke: true },\n\t\tgetHandleBounds: { handle: true },\n\t\tgetInternalBounds: { internal: true }\n\t},\n\tfunction(options, key) {\n\t\tthis[key] = function(matrix) {\n\t\t\treturn this.getBounds(matrix, options);\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\tgetBounds: function(matrix, options) {\n\t\tvar hasMatrix = options || matrix instanceof Matrix,\n\t\t\topts = Base.set({}, hasMatrix ? options : matrix,\n\t\t\t\t\tthis._boundsOptions);\n\t\tif (!opts.stroke || this.getStrokeScaling())\n\t\t\topts.cacheItem = this;\n\t\tvar rect = this._getCachedBounds(hasMatrix && matrix, opts).rect;\n\t\treturn !arguments.length\n\t\t\t\t? new LinkedRectangle(rect.x, rect.y, rect.width, rect.height,\n\t\t\t\t\tthis, 'setBounds')\n\t\t\t\t: rect;\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\t_matrix = this._matrix,\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tif (!_matrix.isInvertible()) {\n\t\t\t\t_matrix.set(_matrix._backup\n\t\t\t\t\t\t|| new Matrix().translate(_matrix.getTranslation()));\n\t\t\t\tbounds = this.getBounds();\n\t\t\t}\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width !== 0 ? rect.width / bounds.width : 0,\n\t\t\t\t\tbounds.height !== 0 ? rect.height / bounds.height : 0);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar children = this._children;\n\t\tif (!children || !children.length)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, options.cacheItem);\n\t\treturn Item._getBounds(children, matrix, options);\n\t},\n\n\t_getBoundsCacheKey: function(options, internal) {\n\t\treturn [\n\t\t\toptions.stroke ? 1 : 0,\n\t\t\toptions.handle ? 1 : 0,\n\t\t\tinternal ? 1 : 0\n\t\t].join('');\n\t},\n\n\t_getCachedBounds: function(matrix, options, noInternal) {\n\t\tmatrix = matrix && matrix._orNullIfIdentity();\n\t\tvar internal = options.internal && !noInternal,\n\t\t\tcacheItem = options.cacheItem,\n\t\t\t_matrix = internal ? null : this._matrix._orNullIfIdentity(),\n\t\t\tcacheKey = cacheItem && (!matrix || matrix.equals(_matrix))\n\t\t\t\t&& this._getBoundsCacheKey(options, internal),\n\t\t\tbounds = this._bounds;\n\t\tItem._updateBoundsCache(this._parent || this._symbol, cacheItem);\n\t\tif (cacheKey && bounds && cacheKey in bounds) {\n\t\t\tvar cached = bounds[cacheKey];\n\t\t\treturn {\n\t\t\t\trect: cached.rect.clone(),\n\t\t\t\tnonscaling: cached.nonscaling\n\t\t\t};\n\t\t}\n\t\tvar res = this._getBounds(matrix || _matrix, options),\n\t\t\trect = res.rect || res,\n\t\t\tstyle = this._style,\n\t\t\tnonscaling = res.nonscaling || style.hasStroke()\n\t\t\t\t&& !style.getStrokeScaling();\n\t\tif (cacheKey) {\n\t\t\tif (!bounds) {\n\t\t\t\tthis._bounds = bounds = {};\n\t\t\t}\n\t\t\tvar cached = bounds[cacheKey] = {\n\t\t\t\trect: rect.clone(),\n\t\t\t\tnonscaling: nonscaling,\n\t\t\t\tinternal: internal\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\trect: rect,\n\t\t\tnonscaling: nonscaling\n\t\t};\n\t},\n\n\t_getStrokeMatrix: function(matrix, options) {\n\t\tvar parent = this.getStrokeScaling() ? null\n\t\t\t\t: options && options.internal ? this\n\t\t\t\t\t: this._parent || this._symbol && this._symbol._item,\n\t\t\tmx = parent ? parent.getViewMatrix().invert() : matrix;\n\t\treturn mx && mx._shiftless();\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent && item) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_getBounds: function(items, matrix, options) {\n\t\t\tvar x1 = Infinity,\n\t\t\t\tx2 = -x1,\n\t\t\t\ty1 = x1,\n\t\t\t\ty2 = x2,\n\t\t\t\tnonscaling = false;\n\t\t\toptions = options || {};\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (item._visible && !item.isEmpty()) {\n\t\t\t\t\tvar bounds = item._getCachedBounds(\n\t\t\t\t\t\tmatrix && matrix.appended(item._matrix), options, true),\n\t\t\t\t\t\trect = bounds.rect;\n\t\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t\t\tif (bounds.nonscaling)\n\t\t\t\t\t\tnonscaling = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\trect: isFinite(x1)\n\t\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t\t: new Rectangle(),\n\t\t\t\tnonscaling: nonscaling\n\t\t\t};\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._applyMatrix\n\t\t\t? null\n\t\t\t: this._decomposed || (this._decomposed = this._matrix.decompose());\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decompose();\n\t\treturn decomposed ? decomposed.rotation : 0;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tif (decomposed) {\n\t\t\t\tdecomposed.rotation = rotation;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetScaling: function() {\n\t\tvar decomposed = this._decompose(),\n\t\t\ts = decomposed && decomposed.scaling;\n\t\treturn new LinkedPoint(s ? s.x : 1, s ? s.y : 1, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling(),\n\t\t\tscaling = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tif (current && scaling && !current.equals(scaling)) {\n\t\t\tvar rotation = this.getRotation(),\n\t\t\t\tdecomposed = this._decomposed,\n\t\t\t\tmatrix = new Matrix(),\n\t\t\t\tcenter = this.getPosition(true);\n\t\t\tmatrix.translate(center);\n\t\t\tif (rotation)\n\t\t\t\tmatrix.rotate(rotation);\n\t\t\tmatrix.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tif (rotation)\n\t\t\t\tmatrix.rotate(-rotation);\n\t\t\tmatrix.translate(center.negate());\n\t\t\tthis.transform(matrix);\n\t\t\tif (decomposed) {\n\t\t\t\tdecomposed.scaling = scaling;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.prepend(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetViewMatrix: function() {\n\t\treturn this.getGlobalMatrix().prepend(this.getView()._matrix);\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project._view;\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\t_getOwner: '#getParent',\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner && owner._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner && owner._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(options) {\n\t\tvar copy = new this.constructor(Item.NO_INSERT),\n\t\t\tchildren = this._children,\n\t\t\tinsert = Base.pick(options ? options.insert : undefined,\n\t\t\t\t\toptions === undefined || options === true),\n\t\t\tdeep = Base.pick(options ? options.deep : undefined, true);\n\t\tif (children)\n\t\t\tcopy.copyAttributes(this);\n\t\tif (!children || deep)\n\t\t\tcopy.copyContent(this);\n\t\tif (!children)\n\t\t\tcopy.copyAttributes(this);\n\t\tif (insert)\n\t\t\tcopy.insertAbove(this);\n\t\tvar name = this._name,\n\t\t\tparent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\tif (name !== orig)\n\t\t\t\tcopy.setName(name);\n\t\t}\n\t\treturn copy;\n\t},\n\n\tcopyContent: function(source) {\n\t\tvar children = source._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tthis.addChild(children[i].clone(false), true);\n\t\t}\n\t},\n\n\tcopyAttributes: function(source, excludeMatrix) {\n\t\tthis.setStyle(source._style);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (source.hasOwnProperty(key))\n\t\t\t\tthis[key] = source[key];\n\t\t}\n\t\tif (!excludeMatrix)\n\t\t\tthis._matrix.set(source._matrix, true);\n\t\tthis.setApplyMatrix(source._applyMatrix);\n\t\tthis.setPivot(source._pivot);\n\t\tthis.setSelection(source._selection);\n\t\tvar data = source._data,\n\t\t\tname = source._name;\n\t\tthis._data = data ? Base.clone(data) : null;\n\t\tif (name)\n\t\t\tthis.setName(name);\n\t},\n\n\trasterize: function(resolution, insert) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\tif (!size.isZero()) {\n\t\t\tvar canvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\t\tctx = canvas.getContext('2d'),\n\t\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\t\tctx.save();\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\t\tctx.restore();\n\t\t\traster.setCanvas(canvas);\n\t\t}\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\tif (insert === undefined || insert)\n\t\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\t\tif (children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t_matrix, true).length > 0;\n\t}\n},\nnew function() {\n\tfunction hitTest() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(arguments));\n\t}\n\n\tfunction hitTestAll() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(arguments),\n\t\t\tall = [];\n\t\tthis._hitTest(point, Base.set({ all: all }, options));\n\t\treturn all;\n\t}\n\n\tfunction hitTestChildren(point, options, viewMatrix, _exclude) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\t\tvar child = children[i];\n\t\t\t\tvar res = child !== _exclude && child._hitTest(point, options,\n\t\t\t\t\t\tviewMatrix);\n\t\t\t\tif (res && !options.all)\n\t\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tProject.inject({\n\t\thitTest: hitTest,\n\t\thitTestAll: hitTestAll,\n\t\t_hitTest: hitTestChildren\n\t});\n\n\treturn {\n\t\thitTest: hitTest,\n\t\thitTestAll: hitTestAll,\n\t\t_hitTestChildren: hitTestChildren,\n\t};\n}, {\n\n\t_hitTest: function(point, options, parentViewMatrix) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar matrix = this._matrix,\n\t\t\tviewMatrix = parentViewMatrix\n\t\t\t\t\t? parentViewMatrix.appended(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().prepend(this.getView()._matrix),\n\t\t\ttolerance = Math.max(options.tolerance, 1e-12),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\tPath._getStrokePadding(tolerance,\n\t\t\t\t\t\tmatrix._shiftless().invert()));\n\t\tpoint = matrix._inverseTransform(point);\n\t\tif (!point || !this._children &&\n\t\t\t!this.getBounds({ internal: true, stroke: true, handle: true })\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this.isSelected()\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tmatch = options.match,\n\t\t\tthat = this,\n\t\t\tbounds,\n\t\t\tres;\n\n\t\tfunction filter(hit) {\n\t\t\tif (hit && match && !match(hit))\n\t\t\t\thit = null;\n\t\t\tif (hit && options.all)\n\t\t\t\toptions.all.push(hit);\n\t\t\treturn hit;\n\t\t}\n\n\t\tfunction checkPoint(type, part) {\n\t\t\tvar pt = part ? bounds['get' + part]() : that.getPosition();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1) {\n\t\t\t\treturn new HitResult(type, that, {\n\t\t\t\t\tname: part ? Base.hyphenate(part) : type,\n\t\t\t\t\tpoint: pt\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar checkPosition = options.position,\n\t\t\tcheckCenter = options.center,\n\t\t\tcheckBounds = options.bounds;\n\t\tif (checkSelf && this._parent\n\t\t\t\t&& (checkPosition || checkCenter || checkBounds)) {\n\t\t\tif (checkCenter || checkBounds) {\n\t\t\t\tbounds = this.getInternalBounds();\n\t\t\t}\n\t\t\tres = checkPosition && checkPoint('position') ||\n\t\t\t\t\tcheckCenter && checkPoint('center', 'Center');\n\t\t\tif (!res && checkBounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++) {\n\t\t\t\t\tres = checkPoint('bounds', points[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tres = filter(res);\n\t\t}\n\n\t\tif (!res) {\n\t\t\tres = this._hitTestChildren(point, options, viewMatrix)\n\t\t\t\t|| checkSelf\n\t\t\t\t\t&& filter(this._hitTestSelf(point, options, viewMatrix,\n\t\t\t\t\t\tthis.getStrokeScaling() ? null\n\t\t\t\t\t\t\t: viewMatrix._shiftless().invert()))\n\t\t\t\t|| null;\n\t\t}\n\t\tif (res && res.point) {\n\t\t\tres.point = matrix.transform(res.point);\n\t\t}\n\t\treturn res;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else if (name === 'match') {\n\t\t\treturn compare(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (name === 'class') {\n\t\t\t\tif (typeof compare === 'function')\n\t\t\t\t\treturn this instanceof compare;\n\t\t\t\tvalue = this._class;\n\t\t\t}\n\t\t\tif (typeof compare === 'function') {\n\t\t\t\treturn !!compare(value);\n\t\t\t} else if (compare) {\n\t\t\t\tif (compare.test) {\n\t\t\t\t\treturn compare.test(value);\n\t\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\t\treturn matchObject(compare, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Base.equals(value, compare);\n\t\t}\n\t},\n\n\tgetItems: function(options) {\n\t\treturn Item._getItems(this, options, this._matrix);\n\t},\n\n\tgetItem: function(options) {\n\t\treturn Item._getItems(this, options, this._matrix, null, true)[0]\n\t\t\t\t|| null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(item, options, matrix, param, firstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar obj = typeof options === 'object' && options,\n\t\t\t\t\toverlapping = obj && obj.overlapping,\n\t\t\t\t\tinside = obj && obj.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\trecursive: obj && obj.recursive !== false,\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (obj) {\n\t\t\t\t\toptions = Base.filter({}, options, {\n\t\t\t\t\t\trecursive: true, inside: true, overlapping: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar children = item._children,\n\t\t\t\titems = param.items,\n\t\t\t\trect = param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.appended(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(rect.contains(bounds)\n\t\t\t\t\t\t\t|| param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(options)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (param.recursive !== false) {\n\t\t\t\t\t_getItems(child, options, childMatrix, param, firstOnly);\n\t\t\t\t}\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this ? this.addChild(res) : res;\n\t},\n\n\taddChild: function(item) {\n\t\treturn this.insertChild(undefined, item);\n\t},\n\n\tinsertChild: function(index, item) {\n\t\tvar res = item ? this.insertChildren(index, [item]) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items) {\n\t\treturn this.insertChildren(this._children.length, items);\n\t},\n\n\tinsertChildren: function(index, items) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Base.slice(items);\n\t\t\tvar inserted = {};\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i],\n\t\t\t\t\tid = item && item._id;\n\t\t\t\tif (!item || inserted[id]) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\titem._remove(false, true);\n\t\t\t\t\tinserted[id] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i],\n\t\t\t\t\tname = item._name;\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(project, true);\n\t\t\t\tif (name)\n\t\t\t\t\titem.setName(name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\titem._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertItem: '#insertChild',\n\n\t_insertAt: function(item, offset) {\n\t\tvar owner = item && item._getOwner(),\n\t\t\tres = item !== this && owner ? this : null;\n\t\tif (res) {\n\t\t\tres._remove(false, true);\n\t\t\towner._insertItem(item._index + offset, res);\n\t\t}\n\t\treturn res;\n\t},\n\n\tinsertAbove: function(item) {\n\t\treturn this._insertAt(item, 1);\n\t},\n\n\tinsertBelow: function(item) {\n\t\treturn this._insertAt(item, 0);\n\t},\n\n\tsendToBack: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner ? owner._insertItem(0, this) : null;\n\t},\n\n\tbringToFront: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner ? owner._insertItem(undefined, this) : null;\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\taddTo: function(owner) {\n\t\treturn owner._insertItem(undefined, this);\n\t},\n\n\tcopyTo: function(owner) {\n\t\treturn this.clone(false).addTo(owner);\n\t},\n\n\treduce: function(options) {\n\t\tvar children = this._children;\n\t\tif (children && children.length === 1) {\n\t\t\tvar child = children[0].reduce(options);\n\t\t\tif (this._parent) {\n\t\t\t\tchild.insertAbove(this);\n\t\t\t\tthis.remove();\n\t\t\t} else {\n\t\t\t\tchild.remove();\n\t\t\t}\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar owner = this._getOwner();\n\t\tif (owner) {\n\t\t\tvar children = owner._children,\n\t\t\t\tnamedChildren = owner._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[0];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar owner = this._getOwner(),\n\t\t\tproject = this._project,\n\t\t\tindex = this._index;\n\t\tif (owner) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (index != null) {\n\t\t\t\tif (project._activeLayer === this)\n\t\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\t\tBase.splice(owner._children, null, index, 1);\n\t\t\t}\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent)\n\t\t\t\towner._changed(11, this);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(start, end) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tstart = start || 0;\n\t\tend = Base.pick(end, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, start, end - start);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\tvar children = this._children;\n\t\treturn !children || !children.length;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent === item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisSibling: function(item) {\n\t\treturn this._parent === item._parent;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n}, Base.each(['rotate', 'scale', 'shear', 'skew'], function(key) {\n\tvar rotate = key === 'rotate';\n\tthis[key] = function() {\n\t\tvar value = (rotate ? Base : Point).read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[key](value,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tvar _matrix = this._matrix,\n\t\t\ttransform = matrix && !matrix.isIdentity(),\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || transform)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!transform && !applyMatrix)\n\t\t\treturn this;\n\t\tif (transform) {\n\t\t\tif (!matrix.isInvertible() && _matrix.isInvertible())\n\t\t\t\t_matrix._backup = _matrix.getValues();\n\t\t\t_matrix.prepend(matrix, true);\n\t\t\tvar style = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(matrix);\n\t\t}\n\t\tif (applyMatrix && (applyMatrix = this._transformContent(_matrix,\n\t\t\t\t_applyRecursively, _setApplyMatrix))) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tif (transform || applyMatrix) {\n\t\t\tthis._changed(9);\n\t\t}\n\t\tvar decomp = transform && bounds && matrix.decompose();\n\t\tif (decomp && decomp.skewing.isZero() && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar cache = bounds[key];\n\t\t\t\tif (cache.nonscaling) {\n\t\t\t\t\tdelete bounds[key];\n\t\t\t\t} else if (applyMatrix || !cache.internal) {\n\t\t\t\t\tvar rect = cache.rect;\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._bounds = bounds;\n\t\t\tvar cached = bounds[this._getBoundsCacheKey(\n\t\t\t\t\tthis._boundsOptions || {})];\n\t\t\tif (cached) {\n\t\t\t\tthis._position = cached.rect.getCenter(true);\n\t\t\t}\n\t\t} else if (transform && position && this._pivot) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t}\n}), {\n\n\t_setStyles: function(ctx, param, viewMatrix) {\n\t\tvar style = this._style,\n\t\t\tmatrix = this._matrix;\n\t\tif (style.hasFill()) {\n\t\t\tctx.fillStyle = style.getFillColor().toCanvasStyle(ctx, matrix);\n\t\t}\n\t\tif (style.hasStroke()) {\n\t\t\tctx.strokeStyle = style.getStrokeColor().toCanvasStyle(ctx, matrix);\n\t\t\tctx.lineWidth = style.getStrokeWidth();\n\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\tif (strokeJoin)\n\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\tif (strokeCap)\n\t\t\t\tctx.lineCap = strokeCap;\n\t\t\tif (miterLimit)\n\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\tif (paper.support.nativeDash) {\n\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style.hasShadow()) {\n\t\t\tvar pixelRatio = param.pixelRatio || 1,\n\t\t\t\tmx = viewMatrix._shiftless().prepend(\n\t\t\t\t\tnew Matrix().scale(pixelRatio, pixelRatio)),\n\t\t\t\tblur = mx.transform(new Point(style.getShadowBlur(), 0)),\n\t\t\t\toffset = mx.transform(this.getShadowOffset());\n\t\t\tctx.shadowColor = style.getShadowColor().toCanvasStyle(ctx);\n\t\t\tctx.shadowBlur = blur.getLength();\n\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\tctx.shadowOffsetY = offset.y;\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].appended(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tviewMatrix = viewMatrix ? viewMatrix.appended(globalMatrix)\n\t\t\t\t: globalMatrix;\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(viewMatrix);\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.appended(matrix)\n\t\t\t\t: this._canScaleStroke && !this.getStrokeScaling(true)\n\t\t\t\t\t&& viewMatrix,\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform) {\n\t\t\t(direct ? matrix : viewMatrix).applyToContext(ctx);\n\t\t}\n\t\tif (clip) {\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, viewMatrix, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectionItems, updateVersion) {\n\t\tvar selection = this._selection,\n\t\t\titemSelected = selection & 1,\n\t\t\tboundsSelected = selection & 2\n\t\t\t\t\t|| itemSelected && this._selectBounds,\n\t\t\tpositionSelected = selection & 4;\n\t\tif (!this._drawSelected)\n\t\t\titemSelected = false;\n\t\tif ((itemSelected || boundsSelected || positionSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar layer,\n\t\t\t\tcolor = this.getSelectedColor(true) || (layer = this.getLayer())\n\t\t\t\t\t&& layer.getSelectedColor(true),\n\t\t\t\tmx = matrix.appended(this.getGlobalMatrix(true)),\n\t\t\t\thalf = size / 2;\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (itemSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectionItems);\n\t\t\tif (positionSelected) {\n\t\t\t\tvar point = this.getPosition(true),\n\t\t\t\t\tx = point.x,\n\t\t\t\t\ty = point.y;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(x, y, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.stroke();\n\t\t\t\tvar deltas = [[0, -1], [1, 0], [0, 1], [-1, 0]],\n\t\t\t\t\tstart = half,\n\t\t\t\t\tend = size + 1;\n\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\tvar delta = deltas[i],\n\t\t\t\t\t\tdx = delta[0],\n\t\t\t\t\t\tdy = delta[1];\n\t\t\t\t\tctx.moveTo(x + dx * start, y + dy * start);\n\t\t\t\t\tctx.lineTo(x + dx * end, y + dy * end);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (boundsSelected) {\n\t\t\t\tvar coords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\t\tctx[!i ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(key) {\n\tthis['removeOn' + Base.capitalize(key)] = function() {\n\t\tvar hash = {};\n\t\thash[key] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectBounds: false,\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tif (children[i]._clipMask) {\n\t\t\t\t\tclipItem = children[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_getBounds: function _getBounds(matrix, options) {\n\t\tvar clipItem = this._getClipItem();\n\t\treturn clipItem\n\t\t\t? clipItem._getCachedBounds(\n\t\t\t\tmatrix && matrix.appended(clipItem._matrix),\n\t\t\t\tBase.set({}, options, { stroke: false }))\n\t\t\t: _getBounds.base.call(this, matrix, options);\n\t},\n\n\t_hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n\t\tvar clipItem = this._getClipItem();\n\t\treturn (!clipItem || clipItem.contains(point))\n\t\t\t\t&& _hitTestChildren.base.call(this, point, options, viewMatrix,\n\t\t\t\t\tclipItem);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem();\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tctx.beginPath();\n\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar item = children[i];\n\t\t\tif (item !== clipItem)\n\t\t\t\titem.draw(ctx, param);\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer() {\n\t\tGroup.apply(this, arguments);\n\t},\n\n\t_getOwner: function() {\n\t\treturn this._parent || this._index != null && this._project;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_hitTestSelf: function() {\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_canScaleStroke: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props, point) {\n\t\tthis._initialize(props, point);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setType(source._type);\n\t\tthis.setSize(source._size);\n\t\tthis.setRadius(source._radius);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tthis._radius.set(Size.min(this._radius, size.divide(2)));\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius._set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size._set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size._set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size._set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.copyAttributes(this);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\tif (insert === undefined || insert)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\ttoShape: '#clone',\n\n\t_asPathItem: function() {\n\t\treturn this.toPath(false);\n\t},\n\n\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\tstyle = this._style,\n\t\t\tstrokeWidth = options.stroke && style.hasStroke()\n\t\t\t\t\t&& style.getStrokeWidth();\n\t\tif (matrix)\n\t\t\trect = matrix._transformBounds(rect);\n\t\treturn strokeWidth\n\t\t\t\t? rect.expand(Path._getStrokePadding(strokeWidth,\n\t\t\t\t\tthis._getStrokeMatrix(matrix, options)))\n\t\t\t\t: rect;\n\t}\n},\nnew function() {\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var q = 1; q <= 4; q++) {\n\t\t\t\tvar dir = new Point(q > 1 && q < 4 ? -1 : 1, q > 2 ? -1 : 1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(\n\t\t\t\t\t\t\texpand ? corner.add(dir.multiply(expand)) : corner,\n\t\t\t\t\t\t\tcenter);\n\t\t\t\tif (rect.contains(point))\n\t\t\t\t\treturn { point: center, quadrant: q };\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction isOnEllipseStroke(point, radius, padding, quadrant) {\n\t\tvar vector = point.divide(radius);\n\t\treturn (!quadrant || vector.isInQuadrant(quadrant)) &&\n\t\t\t\tvector.subtract(vector.normalize()).multiply(radius)\n\t\t\t\t\t.divide(padding).length <= 1;\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center.point).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options, viewMatrix,\n\t\t\t\tstrokeMatrix) {\n\t\t\tvar hit = false,\n\t\t\t\tstyle = this._style,\n\t\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\t\thitFill = options.fill && style.hasFill();\n\t\t\tif (hitStroke || hitFill) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeRadius = hitStroke ? style.getStrokeWidth() / 2 : 0,\n\t\t\t\t\tstrokePadding = options._tolerancePadding.add(\n\t\t\t\t\t\tPath._getStrokePadding(strokeRadius,\n\t\t\t\t\t\t\t!style.getStrokeScaling() && strokeMatrix));\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar padding = strokePadding.multiply(2),\n\t\t\t\t\t\tcenter = getCornerCenter(this, point, padding);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\thit = isOnEllipseStroke(point.subtract(center.point),\n\t\t\t\t\t\t\t\tradius, strokePadding, center.quadrant);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(padding),\n\t\t\t\t\t\t\tinner = rect.expand(padding.negate());\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thit = isOnEllipseStroke(point, radius, strokePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit ? new HitResult(hitStroke ? 'stroke' : 'fill', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args), point);\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item;\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsOptions: { stroke: false, handle: false },\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\t_prioritize: ['crossOrigin'],\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tvar image = typeof object === 'string'\n\t\t\t\t\t? document.getElementById(object) : object;\n\t\t\tif (image) {\n\t\t\t\tthis.setImage(image);\n\t\t\t} else {\n\t\t\t\tthis.setSource(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tcopyContent: function(source) {\n\t\tvar image = source._image,\n\t\t\tcanvas = source._canvas;\n\t\tif (image) {\n\t\t\tthis._setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(source._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tthis._setImage(copyCanvas);\n\t\t}\n\t\tthis._crossOrigin = source._crossOrigin;\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis._setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tgetLoaded: function() {\n\t\treturn this._loaded;\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tvar that = this;\n\n\t\tfunction emit(event) {\n\t\t\tvar view = that.getView(),\n\t\t\t\ttype = event && event.type || 'load';\n\t\t\tif (view && that.responds(type)) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.emit(type, new Event(event));\n\t\t\t}\n\t\t}\n\n\t\tthis._setImage(image);\n\t\tif (this._loaded) {\n\t\t\tsetTimeout(emit, 0);\n\t\t} else if (image) {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: function(event) {\n\t\t\t\t\tthat._setImage(image);\n\t\t\t\t\temit(event);\n\t\t\t\t},\n\t\t\t\terror: emit\n\t\t\t});\n\t\t}\n\t},\n\n\t_setImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = !!(image && image.src && image.complete);\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\tvar image = this._image;\n\t\treturn image && image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar image = new self.Image(),\n\t\t\tcrossOrigin = this._crossOrigin;\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\timage.src = src;\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\tvar image = this._image;\n\t\treturn image && image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tvar image = this._image;\n\t\tif (image)\n\t\t\timage.crossOrigin = crossOrigin;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster._setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.prepend(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar image = this._image,\n\t\t\tsrc = image && image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (typeof object === 'object') {\n\t\t\tif ('width' in object) {\n\t\t\t\tbounds = new Rectangle(object);\n\t\t\t} else if ('x' in object) {\n\t\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t\t}\n\t\t}\n\t\tif (!bounds)\n\t\t\treturn null;\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar SymbolItem = Item.extend({\n\t_class: 'SymbolItem',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsOptions: { stroke: true },\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function SymbolItem(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setDefinition(arg0 instanceof SymbolDefinition ?\n\t\t\t\t\targ0 : new SymbolDefinition(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._definition === item._definition;\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setDefinition(source._definition);\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(definition) {\n\t\tthis._definition = definition;\n\t\tthis._changed(9);\n\t},\n\n\tgetSymbol: '#getDefinition',\n\tsetSymbol: '#setDefinition',\n\n\tisEmpty: function() {\n\t\treturn this._definition._item.isEmpty();\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar item = this._definition._item;\n\t\treturn item._getCachedBounds(item._matrix.prepended(matrix), options);\n\t},\n\n\t_hitTestSelf: function(point, options, viewMatrix) {\n\t\tvar res = this._definition._item._hitTest(point, options, viewMatrix);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis._definition._item.draw(ctx, param);\n\t}\n\n});\n\nvar SymbolDefinition = Base.extend({\n\t_class: 'SymbolDefinition',\n\n\tinitialize: function SymbolDefinition(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tif (item)\n\t\t\tthis.setItem(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._item],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8)\n\t\t\tItem._clearBoundsCache(this);\n\t\tif (flags & 1)\n\t\t\tthis.project._changed(flags);\n\t},\n\n\tgetItem: function() {\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item, _dontCenter) {\n\t\tif (item._symbol)\n\t\t\titem = item.clone();\n\t\tif (this._item)\n\t\t\tthis._item._symbol = null;\n\t\tthis._item = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._symbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tgetDefinition: '#getItem',\n\tsetDefinition: '#setItem',\n\n\tplace: function(position) {\n\t\treturn new SymbolItem(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new SymbolDefinition(this._item.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this._item.equals(symbol._item)\n\t\t\t\t|| false;\n\t}\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values)\n\t\t\tthis.inject(values);\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(args) {\n\t\t\tvar options = args && Base.read(args);\n\t\t\treturn Base.set({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tposition: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\t_selection: 0,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut, selection;\n\t\tif (count > 0) {\n\t\t\tif (arg0 == null || typeof arg0 === 'object') {\n\t\t\t\tif (count === 1 && arg0 && 'point' in arg0) {\n\t\t\t\t\tpoint = arg0.point;\n\t\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t\t\tselection = arg0.selection;\n\t\t\t\t} else {\n\t\t\t\t\tpoint = arg0;\n\t\t\t\t\thandleIn = arg1;\n\t\t\t\t\thandleOut = arg2;\n\t\t\t\t\tselection = arg3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpoint = [ arg0, arg1 ];\n\t\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t\t}\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t\tif (selection)\n\t\t\tthis.setSelection(selection);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar point = this._point,\n\t\t\tselection = this._selection,\n\t\t\tobj = selection || this.hasHandles()\n\t\t\t\t\t? [point, this._handleIn, this._handleOut]\n\t\t\t\t\t: point;\n\t\tif (selection)\n\t\t\tobj.push(selection);\n\t\treturn Base.serialize(obj, options, true, dictionary);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tthis._point.set(Point.read(arguments));\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tthis._handleIn.set(Point.read(arguments));\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tthis._handleOut.set(Point.read(arguments));\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t},\n\n\tisSmooth: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut;\n\t\treturn !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t&& handleIn.isCollinear(handleOut);\n\t},\n\n\tclearHandles: function() {\n\t\tthis._handleIn._set(0, 0);\n\t\tthis._handleOut._set(0, 0);\n\t},\n\n\tgetSelection: function() {\n\t\treturn this._selection;\n\t},\n\n\tsetSelection: function(selection) {\n\t\tvar oldSelection = this._selection,\n\t\t\tpath = this._path;\n\t\tthis._selection = selection = selection || 0;\n\t\tif (path && selection !== oldSelection) {\n\t\t\tpath._updateSelection(this, oldSelection, selection);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\t_changeSelection: function(flag, selected) {\n\t\tvar selection = this._selection;\n\t\tthis.setSelection(selected ? selection | flag : selection & ~flag);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._selection & 7);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._changeSelection(7, selected);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tsmooth: function(options, _first, _last) {\n\t\tvar opts = options || {},\n\t\t\ttype = opts.type,\n\t\t\tfactor = opts.factor,\n\t\t\tprev = this.getPrevious(),\n\t\t\tnext = this.getNext(),\n\t\t\tp0 = (prev || this)._point,\n\t\t\tp1 = this._point,\n\t\t\tp2 = (next || this)._point,\n\t\t\td1 = p0.getDistance(p1),\n\t\t\td2 = p1.getDistance(p2);\n\t\tif (!type || type === 'catmull-rom') {\n\t\t\tvar a = factor === undefined ? 0.5 : factor,\n\t\t\t\td1_a = Math.pow(d1, a),\n\t\t\t\td1_2a = d1_a * d1_a,\n\t\t\t\td2_a = Math.pow(d2, a),\n\t\t\t\td2_2a = d2_a * d2_a;\n\t\t\tif (!_first && prev) {\n\t\t\t\tvar A = 2 * d2_2a + 3 * d2_a * d1_a + d1_2a,\n\t\t\t\t\tN = 3 * d2_a * (d2_a + d1_a);\n\t\t\t\tthis.setHandleIn(N !== 0\n\t\t\t\t\t? new Point(\n\t\t\t\t\t\t(d2_2a * p0._x + A * p1._x - d1_2a * p2._x) / N - p1._x,\n\t\t\t\t\t\t(d2_2a * p0._y + A * p1._y - d1_2a * p2._y) / N - p1._y)\n\t\t\t\t\t: new Point());\n\t\t\t}\n\t\t\tif (!_last && next) {\n\t\t\t\tvar A = 2 * d1_2a + 3 * d1_a * d2_a + d2_2a,\n\t\t\t\t\tN = 3 * d1_a * (d1_a + d2_a);\n\t\t\t\tthis.setHandleOut(N !== 0\n\t\t\t\t\t? new Point(\n\t\t\t\t\t\t(d1_2a * p2._x + A * p1._x - d2_2a * p0._x) / N - p1._x,\n\t\t\t\t\t\t(d1_2a * p2._y + A * p1._y - d2_2a * p0._y) / N - p1._y)\n\t\t\t\t\t: new Point());\n\t\t\t}\n\t\t} else if (type === 'geometric') {\n\t\t\tif (prev && next) {\n\t\t\t\tvar vector = p0.subtract(p2),\n\t\t\t\t\tt = factor === undefined ? 0.4 : factor,\n\t\t\t\t\tk = t * d1 / (d1 + d2);\n\t\t\t\tif (!_first)\n\t\t\t\t\tthis.setHandleIn(vector.multiply(k));\n\t\t\t\tif (!_last)\n\t\t\t\t\tthis.setHandleOut(vector.multiply(k - t));\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error('Smoothing method \\'' + type + '\\' not supported.');\n\t\t}\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn !this._index;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._index === path._segments.length - 1 || false;\n\t},\n\n\treverse: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut,\n\t\t\ttmp = handleIn.clone();\n\t\thandleIn.set(handleOut);\n\t\thandleOut.set(tmp);\n\t},\n\n\treversed: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(from, to, factor) {\n\t\tvar u = 1 - factor,\n\t\t\tv = factor,\n\t\t\tpoint1 = from._point,\n\t\t\tpoint2 = to._point,\n\t\t\thandleIn1 = from._handleIn,\n\t\t\thandleIn2 = to._handleIn,\n\t\t\thandleOut2 = to._handleOut,\n\t\t\thandleOut1 = from._handleOut;\n\t\tthis._point._set(\n\t\t\t\tu * point1._x + v * point2._x,\n\t\t\t\tu * point1._y + v * point2._y, true);\n\t\tthis._handleIn._set(\n\t\t\t\tu * handleIn1._x + v * handleIn2._x,\n\t\t\t\tu * handleIn1._y + v * handleIn2._y, true);\n\t\tthis._handleOut._set(\n\t\t\t\tu * handleOut1._x + v * handleOut2._x,\n\t\t\t\tu * handleOut1._y + v * handleOut2._y, true);\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y,\n\t\t\tselected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\t_set: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this._x) && isZero(this._y);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._owner._selection & this._getSelection());\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner._changeSelection(this._getSelection(), selected);\n\t},\n\n\t_getSelection: function() {\n\t\tvar owner = this._owner;\n\t\treturn this === owner._point ? 1\n\t\t\t: this === owner._handleIn ? 2\n\t\t\t: this === owner._handleOut ? 4\n\t\t\t: 0;\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\tbeans: true,\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length,\n\t\t\tseg1, seg2,\n\t\t\tpoint1, point2,\n\t\t\thandle1, handle2;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tseg1 = arg1;\n\t\t\tseg2 = arg2;\n\t\t} else if (!count) {\n\t\t\tseg1 = new Segment();\n\t\t\tseg2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tif ('segment1' in arg0) {\n\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t} else if ('point1' in arg0) {\n\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\tpoint2 = arg0.point2;\n\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t}\n\t\t} else if (count === 2) {\n\t\t\tseg1 = new Segment(arg0);\n\t\t\tseg2 = new Segment(arg1);\n\t\t} else if (count === 4) {\n\t\t\tpoint1 = arg0;\n\t\t\thandle1 = arg1;\n\t\t\thandle2 = arg2;\n\t\t\tpoint2 = arg3;\n\t\t} else if (count === 8) {\n\t\t\tpoint1 = [arg0, arg1];\n\t\t\tpoint2 = [arg6, arg7];\n\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t}\n\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\toptions, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tclassify: function() {\n\t\treturn Curve.classify(this.getValues());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tthis._segment1._point.set(Point.read(arguments));\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tthis._segment2._point.set(Point.read(arguments));\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tthis._segment1._handleOut.set(Point.read(arguments));\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tthis._segment2._handleIn.set(Point.read(arguments));\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn !this._segment1._index;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t|| false;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t}\n}, {\n\tgetLength: function() {\n\t\tif (this._length == null)\n\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetLine: function() {\n\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tdivideAt: function(location) {\n\t\treturn this.divideAtTime(location && location.curve === this\n\t\t\t\t? location.time : this.getTimeAt(location));\n\t},\n\n\tdivideAtTime: function(time, _setHandles) {\n\t\tvar tMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tres = null;\n\t\tif (time >= tMin && time <= tMax) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), time),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1],\n\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\tseg1 = this._segment1,\n\t\t\t\tseg2 = this._segment2,\n\t\t\t\tpath = this._path;\n\t\t\tif (setHandles) {\n\t\t\t\tseg1._handleOut._set(left[2] - left[0], left[3] - left[1]);\n\t\t\t\tseg2._handleIn._set(right[4] - right[6],right[5] - right[7]);\n\t\t\t}\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\tif (path) {\n\t\t\t\tpath.insert(seg1._index + 1, segment);\n\t\t\t\tres = this.getNext();\n\t\t\t} else {\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tthis._changed();\n\t\t\t\tres = new Curve(segment, seg2);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplitAt: function(location) {\n\t\tvar path = this._path;\n\t\treturn path ? path.splitAt(location) : null;\n\t},\n\n\tsplitAtTime: function(time) {\n\t\treturn this.splitAt(this.getLocationAtTime(time));\n\t},\n\n\tdivide: function(offset, isTime) {\n\t\treturn this.divideAtTime(offset === undefined ? 0.5 : isTime ? offset\n\t\t\t\t: this.getTimeAt(offset));\n\t},\n\n\tsplit: function(offset, isTime) {\n\t\treturn this.splitAtTime(offset === undefined ? 0.5 : isTime ? offset\n\t\t\t\t: this.getTimeAt(offset));\n\t},\n\n\treversed: function() {\n\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t},\n\n\tclearHandles: function() {\n\t\tthis._segment1._handleOut._set(0, 0);\n\t\tthis._segment2._handleIn._set(0, 0);\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix, straight) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tx1 = p1.x, y1 = p1.y,\n\t\t\tx2 = p2.x, y2 = p2.y,\n\t\t\tvalues = straight\n\t\t\t\t? [ x1, y1, x1, y1, x2, y2, x2, y2 ]\n\t\t\t\t: [\n\t\t\t\t\tx1, y1,\n\t\t\t\t\tx1 + h1._x, y1 + h1._y,\n\t\t\t\t\tx2 + h2._x, y2 + h2._y,\n\t\t\t\t\tx2, y2\n\t\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tx4 = u * x0 + t * x1, y4 = u * y0 + t * y1,\n\t\t\tx5 = u * x1 + t * x2, y5 = u * y1 + t * y2,\n\t\t\tx6 = u * x2 + t * x3, y6 = u * y2 + t * y3,\n\t\t\tx7 = u * x4 + t * x5, y7 = u * y4 + t * y5,\n\t\t\tx8 = u * x5 + t * x6, y8 = u * y5 + t * y6,\n\t\t\tx9 = u * x7 + t * x8, y9 = u * y7 + t * y8;\n\t\treturn [\n\t\t\t[x0, y0, x4, y4, x7, y7, x9, y9],\n\t\t\t[x9, y9, x8, y8, x6, y6, x3, y3]\n\t\t];\n\t},\n\n\tgetMonoCurves: function(v, dir) {\n\t\tvar curves = [],\n\t\t\tio = dir ? 0 : 1,\n\t\t\to0 = v[io + 0],\n\t\t\to1 = v[io + 2],\n\t\t\to2 = v[io + 4],\n\t\t\to3 = v[io + 6];\n\t\tif ((o0 >= o1) === (o1 >= o2) && (o1 >= o2) === (o2 >= o3)\n\t\t\t\t|| Curve.isStraight(v)) {\n\t\t\tcurves.push(v);\n\t\t} else {\n\t\t\tvar a = 3 * (o1 - o2) - o0 + o3,\n\t\t\t\tb = 2 * (o0 + o2) - 4 * o1,\n\t\t\t\tc = o1 - o0,\n\t\t\t\ttMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\troots = [],\n\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\tif (!n) {\n\t\t\t\tcurves.push(v);\n\t\t\t} else {\n\t\t\t\troots.sort();\n\t\t\t\tvar t = roots[0],\n\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\tcurves.push(parts[0]);\n\t\t\t\tif (n > 1) {\n\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\tcurves.push(parts[0]);\n\t\t\t\t}\n\t\t\t\tcurves.push(parts[1]);\n\t\t\t}\n\t\t}\n\t\treturn curves;\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar v0 = v[coord],\n\t\t\tv1 = v[coord + 2],\n\t\t\tv2 = v[coord + 4],\n\t\t\tv3 = v[coord + 6],\n\t\t\tres = 0;\n\t\tif (  !(v0 < val && v3 < val && v1 < val && v2 < val ||\n\t\t\t\tv0 > val && v3 > val && v1 > val && v2 > val)) {\n\t\t\tvar c = 3 * (v1 - v0),\n\t\t\t\tb = 3 * (v2 - v1) - c,\n\t\t\t\ta = v3 - v0 - c - b;\n\t\t\tres = Numerical.solveCubic(a, b, c, v0 - val, roots, min, max);\n\t\t}\n\t\treturn res;\n\t},\n\n\tgetTimeOf: function(v, point) {\n\t\tvar p0 = new Point(v[0], v[1]),\n\t\t\tp3 = new Point(v[6], v[7]),\n\t\t\tepsilon = 1e-12,\n\t\t\tgeomEpsilon = 1e-7,\n\t\t\tt = point.isClose(p0, epsilon) ? 0\n\t\t\t  : point.isClose(p3, epsilon) ? 1\n\t\t\t  : null;\n\t\tif (t === null) {\n\t\t\tvar coords = [point.x, point.y],\n\t\t\t\troots = [];\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tvar u = roots[i];\n\t\t\t\t\tif (point.isClose(Curve.getPoint(v, u), geomEpsilon))\n\t\t\t\t\t\treturn u;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn point.isClose(p0, geomEpsilon) ? 0\n\t\t\t : point.isClose(p3, geomEpsilon) ? 1\n\t\t\t : null;\n\t},\n\n\tgetNearestTime: function(v, point) {\n\t\tif (Curve.isStraight(v)) {\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\tvx = x3 - x0, vy = y3 - y0,\n\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\tif (det === 0)\n\t\t\t\treturn 0;\n\t\t\tvar u = ((point.x - x0) * vx + (point.y - y0) * vy) / det;\n\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t : Curve.getTimeOf(v,\n\t\t\t\t\tnew Point(x0 + u * vx, y0 + u * vy));\n\t\t}\n\n\t\tvar count = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 1e-8) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\treturn minT;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tvar flip = from > to;\n\t\tif (flip) {\n\t\t\tvar tmp = from;\n\t\t\tfrom = to;\n\t\t\tto = tmp;\n\t\t}\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn flip\n\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t: v;\n\t},\n\n\tisFlatEnough: function(v, flatness) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\t\t\tux = 3 * x1 - 2 * x0 - x3,\n\t\t\tuy = 3 * y1 - 2 * y0 - y3,\n\t\t\tvx = 3 * x2 - 2 * x3 - x0,\n\t\t\tvy = 3 * y2 - 2 * y3 - y0;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t<= 16 * flatness * flatness;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\treturn 3 * ((y3 - y0) * (x1 + x2) - (x3 - x0) * (y1 + y2)\n\t\t\t\t+ y1 * (x0 - x2) - x1 * (y0 - y2)\n\t\t\t\t+ y3 * (x2 + x0 / 3) - x3 * (y2 + y0 / 3)) / 20;\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\n\t\tpadding /= 2;\n\t\tvar minPad = min[coord] - padding,\n\t\t\tmaxPad = max[coord] + padding;\n\t\tif (    v0 < minPad || v1 < minPad || v2 < minPad || v3 < minPad ||\n\t\t\t\tv0 > maxPad || v1 > maxPad || v2 > maxPad || v3 > maxPad) {\n\t\t\tif (v1 < v0 != v1 < v3 && v2 < v0 != v2 < v3) {\n\t\t\t\tadd(v0, padding);\n\t\t\t\tadd(v3, padding);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\t\t\tc = v1 - v0,\n\t\t\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\t\t\ttMin = 1e-8,\n\t\t\t\t\ttMax = 1 - tMin;\n\t\t\t\tadd(v3, 0);\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tvar t = roots[i],\n\t\t\t\t\t\tu = 1 - t;\n\t\t\t\t\tif (tMin <= t && t <= tMax)\n\t\t\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\t\t\tpadding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t[this._segment1, this._segment2], false, this._path);\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each({\n\tisStraight: function(p1, h1, h2, p2) {\n\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tvar v = p2.subtract(p1);\n\t\t\tif (v.isZero()) {\n\t\t\t\treturn false;\n\t\t\t} else if (v.isCollinear(h1) && v.isCollinear(h2)) {\n\t\t\t\tvar l = new Line(p1, p2),\n\t\t\t\t\tepsilon = 1e-7;\n\t\t\t\tif (l.getDistance(p1.add(h1)) < epsilon &&\n\t\t\t\t\tl.getDistance(p2.add(h2)) < epsilon) {\n\t\t\t\t\tvar div = v.dot(v),\n\t\t\t\t\t\ts1 = v.dot(h1) / div,\n\t\t\t\t\t\ts2 = v.dot(h2) / div;\n\t\t\t\t\treturn s1 >= 0 && s1 <= 1 && s2 <= 0 && s2 >= -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tisLinear: function(p1, h1, h2, p2) {\n\t\tvar third = p2.subtract(p1).divide(3);\n\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t}\n}, function(test, name) {\n\tthis[name] = function(epsilon) {\n\t\tvar seg1 = this._segment1,\n\t\t\tseg2 = this._segment2;\n\t\treturn test(seg1._point, seg1._handleOut, seg2._handleIn, seg2._point,\n\t\t\t\tepsilon);\n\t};\n\n\tthis.statics[name] = function(v, epsilon) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\treturn test(\n\t\t\t\tnew Point(x0, y0),\n\t\t\t\tnew Point(v[2] - x0, v[3] - y0),\n\t\t\t\tnew Point(v[4] - x3, v[5] - y3),\n\t\t\t\tnew Point(x3, y3), epsilon);\n\t};\n}, {\n\tstatics: {},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\thasLength: function(epsilon) {\n\t\treturn (!this.getPoint1().equals(this.getPoint2()) || this.hasHandles())\n\t\t\t\t&& this.getLength() > (epsilon || 0);\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t},\n\n\tisHorizontal: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAtTime(0.5).y)\n\t\t\t\t< 1e-8;\n\t},\n\n\tisVertical: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAtTime(0.5).x)\n\t\t\t\t< 1e-8;\n\t}\n}), {\n\tbeans: false,\n\n\tgetLocationAt: function(offset, _isTime) {\n\t\treturn this.getLocationAtTime(\n\t\t\t\t_isTime ? offset : this.getTimeAt(offset));\n\t},\n\n\tgetLocationAtTime: function(t) {\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetTimeAt: function(offset, start) {\n\t\treturn Curve.getTimeAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterAt: '#getTimeAt',\n\n\tgetOffsetAtTime: function(t) {\n\t\treturn this.getPartLength(0, t);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAtTime(this.getTimeOf(Point.read(arguments)));\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetTimeOf: function() {\n\t\treturn Curve.getTimeOf(this.getValues(), Point.read(arguments));\n\t},\n\n\tgetParameterOf: '#getTimeOf',\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tt = Curve.getNearestTime(values, point),\n\t\t\tpt = Curve.getPoint(values, t);\n\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\tvar loc = this.getNearestLocation.apply(this, arguments);\n\t\treturn loc ? loc.getPoint() : loc;\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\t\tfunction(name) {\n\t\t\tthis[name + 'At'] = function(location, _isTime) {\n\t\t\t\tvar values = this.getValues();\n\t\t\t\treturn Curve[name](values, _isTime ? location\n\t\t\t\t\t\t: Curve.getTimeAt(values, location));\n\t\t\t};\n\n\t\t\tthis[name + 'AtTime'] = function(time) {\n\t\t\t\treturn Curve[name](this.getValues(), time);\n\t\t\t};\n\t\t}, {\n\t\t\tstatics: {\n\t\t\t\t_evaluateMethods: methods\n\t\t\t}\n\t\t}\n\t);\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\n\t\t\tax = 9 * (x1 - x2) + 3 * (x3 - x0),\n\t\t\tbx = 6 * (x0 + x2) - 12 * x1,\n\t\t\tcx = 3 * (x1 - x0),\n\n\t\t\tay = 9 * (y1 - y2) + 3 * (y3 - y0),\n\t\t\tby = 6 * (y0 + y2) - 12 * y1,\n\t\t\tcy = 3 * (y1 - y0);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(x1 - x0) && isZero(y1 - y0)) {\n\t\t\tx1 = x0;\n\t\t\ty1 = y0;\n\t\t}\n\t\tif (isZero(x2 - x3) && isZero(y2 - y3)) {\n\t\t\tx2 = x3;\n\t\t\ty2 = y3;\n\t\t}\n\t\tvar cx = 3 * (x1 - x0),\n\t\t\tbx = 3 * (x2 - x1) - cx,\n\t\t\tax = x3 - x0 - cx - bx,\n\t\t\tcy = 3 * (y1 - y0),\n\t\t\tby = 3 * (y2 - y1) - cy,\n\t\t\tay = y3 - y0 - cy - by,\n\t\t\tx, y;\n\t\tif (type === 0) {\n\t\t\tx = t === 0 ? x0 : t === 1 ? x3\n\t\t\t\t\t: ((ax * t + bx) * t + cx) * t + x0;\n\t\t\ty = t === 0 ? y0 : t === 1 ? y3\n\t\t\t\t\t: ((ay * t + by) * t + cy) * t + y0;\n\t\t} else {\n\t\t\tvar tMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tif (t < tMin) {\n\t\t\t\tx = cx;\n\t\t\t\ty = cy;\n\t\t\t} else if (t > tMax) {\n\t\t\t\tx = 3 * (x3 - x2);\n\t\t\t\ty = 3 * (y3 - y2);\n\t\t\t} else {\n\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t}\n\t\t\tif (normalized) {\n\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\tx = x2 - x1;\n\t\t\t\t\ty = y2 - y1;\n\t\t\t\t}\n\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\tif (len) {\n\t\t\t\t\tx /= len;\n\t\t\t\t\ty /= len;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type === 3) {\n\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn { statics: {\n\n\t\tclassify: function(v) {\n\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx1 = v[2], y1 = v[3],\n\t\t\t\tx2 = v[4], y2 = v[5],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\ta1 = x0 * (y3 - y2) + y0 * (x2 - x3) + x3 * y2 - y3 * x2,\n\t\t\t\ta2 = x1 * (y0 - y3) + y1 * (x3 - x0) + x0 * y3 - y0 * x3,\n\t\t\t\ta3 = x2 * (y1 - y0) + y2 * (x0 - x1) + x1 * y0 - y1 * x0,\n\t\t\t\td3 = 3 * a3,\n\t\t\t\td2 = d3 - a2,\n\t\t\t\td1 = d2 - a2 + a1,\n\t\t\t\tl = Math.sqrt(d1 * d1 + d2 * d2 + d3 * d3),\n\t\t\t\ts = l !== 0 ? 1 / l : 0,\n\t\t\t\tisZero = Numerical.isZero,\n\t\t\t\tserpentine = 'serpentine';\n\t\t\td1 *= s;\n\t\t\td2 *= s;\n\t\t\td3 *= s;\n\n\t\t\tfunction type(type, t1, t2) {\n\t\t\t\tvar hasRoots = t1 !== undefined,\n\t\t\t\t\tt1Ok = hasRoots && t1 > 0 && t1 < 1,\n\t\t\t\t\tt2Ok = hasRoots && t2 > 0 && t2 < 1;\n\t\t\t\tif (hasRoots && (!(t1Ok || t2Ok)\n\t\t\t\t\t\t|| type === 'loop' && !(t1Ok && t2Ok))) {\n\t\t\t\t\ttype = 'arch';\n\t\t\t\t\tt1Ok = t2Ok = false;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttype: type,\n\t\t\t\t\troots: t1Ok || t2Ok\n\t\t\t\t\t\t\t? t1Ok && t2Ok\n\t\t\t\t\t\t\t\t? t1 < t2 ? [t1, t2] : [t2, t1]\n\t\t\t\t\t\t\t\t: [t1Ok ? t1 : t2]\n\t\t\t\t\t\t\t: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (isZero(d1)) {\n\t\t\t\treturn isZero(d2)\n\t\t\t\t\t\t? type(isZero(d3) ? 'line' : 'quadratic')\n\t\t\t\t\t\t: type(serpentine, d3 / (3 * d2));\n\t\t\t}\n\t\t\tvar d = 3 * d2 * d2 - 4 * d1 * d3;\n\t\t\tif (isZero(d)) {\n\t\t\t\treturn type('cusp', d2 / (2 * d1));\n\t\t\t}\n\t\t\tvar f1 = d > 0 ? Math.sqrt(d / 3) : Math.sqrt(-d),\n\t\t\t\tf2 = 2 * d1;\n\t\t\treturn type(d > 0 ? serpentine : 'loop',\n\t\t\t\t\t(d2 + f1) / f2,\n\t\t\t\t\t(d2 - f1) / f2);\n\t\t},\n\n\t\tgetLength: function(v, a, b, ds) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tvar c = v;\n\t\t\t\tif (b < 1) {\n\t\t\t\t\tc = Curve.subdivide(c, b)[0];\n\t\t\t\t\ta /= b;\n\t\t\t\t}\n\t\t\t\tif (a > 0) {\n\t\t\t\t\tc = Curve.subdivide(c, a)[1];\n\t\t\t\t}\n\t\t\t\tvar dx = c[6] - c[0],\n\t\t\t\t\tdy = c[7] - c[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\treturn Numerical.integrate(ds || getLengthIntegrand(v), a, b,\n\t\t\t\t\tgetIterations(a, b));\n\t\t},\n\n\t\tgetTimeAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0;\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar abs = Math.abs,\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Curve.getLength(v, a, b, ds),\n\t\t\t\tdiff = abs(offset) - rangeLength;\n\t\t\tif (abs(diff) < epsilon) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (diff > epsilon) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t1e-12);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t},\n\n\t\tgetPeaks: function(v) {\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx1 = v[2], y1 = v[3],\n\t\t\t\tx2 = v[4], y2 = v[5],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\tax =     -x0 + 3 * x1 - 3 * x2 + x3,\n\t\t\t\tbx =  3 * x0 - 6 * x1 + 3 * x2,\n\t\t\t\tcx = -3 * x0 + 3 * x1,\n\t\t\t\tay =     -y0 + 3 * y1 - 3 * y2 + y3,\n\t\t\t\tby =  3 * y0 - 6 * y1 + 3 * y2,\n\t\t\t\tcy = -3 * y0 + 3 * y1,\n\t\t\t\ttMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\troots = [];\n\t\t\tNumerical.solveCubic(\n\t\t\t\t\t9 * (ax * ax + ay * ay),\n\t\t\t\t\t9 * (ax * bx + by * ay),\n\t\t\t\t\t2 * (bx * bx + by * by) + 3 * (cx * ax + cy * ay),\n\t\t\t\t\t(cx * bx + by * cy),\n\t\t\t\t\troots, tMin, tMax);\n\t\t\treturn roots.sort();\n\t\t}\n\t}};\n},\nnew function() {\n\n\tfunction addLocation(locations, include, c1, t1, c2, t2, overlap) {\n\t\tvar excludeStart = !overlap && c1.getPrevious() === c2,\n\t\t\texcludeEnd = !overlap && c1 !== c2 && c1.getNext() === c2,\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 !== null && t1 >= (excludeStart ? tMin : 0) &&\n\t\t\tt1 <= (excludeEnd ? tMax : 1)) {\n\t\t\tif (t2 !== null && t2 >= (excludeEnd ? tMin : 0) &&\n\t\t\t\tt2 <= (excludeStart ? tMax : 1)) {\n\t\t\t\tvar loc1 = new CurveLocation(c1, t1, null, overlap),\n\t\t\t\t\tloc2 = new CurveLocation(c2, t2, null, overlap);\n\t\t\t\tloc1._intersection = loc2;\n\t\t\t\tloc2._intersection = loc1;\n\t\t\t\tif (!include || include(loc1)) {\n\t\t\t\t\tCurveLocation.insert(locations, loc1, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addCurveIntersections(v1, v2, c1, c2, locations, include, flip,\n\t\t\trecursion, calls, tMin, tMax, uMin, uMax) {\n\t\tif (++calls >= 4096 || ++recursion >= 40)\n\t\t\treturn calls;\n\t\tvar fatLineEpsilon = 1e-9,\n\t\t\tq0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\ttop = hull[0],\n\t\t\tbottom = hull[1],\n\t\t\ttMinClip,\n\t\t\ttMaxClip;\n\t\tif (d1 === 0 && d2 === 0\n\t\t\t\t&& dp0 === 0 && dp1 === 0 && dp2 === 0 && dp3 === 0\n\t\t\t|| (tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null\n\t\t\t|| (tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\tdMin, dMax)) == null)\n\t\t\treturn calls;\n\t\tvar tMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\tif (Math.max(uMax - uMin, tMaxNew - tMinNew) < fatLineEpsilon) {\n\t\t\tvar t = (tMinNew + tMaxNew) / 2,\n\t\t\t\tu = (uMin + uMax) / 2;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tflip ? c2 : c1, flip ? u : t,\n\t\t\t\t\tflip ? c1 : c2, flip ? t : u);\n\t\t} else {\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\tif (tMaxClip - tMinClip > 0.8) {\n\t\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\t\tt = (tMinNew + tMaxNew) / 2;\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, parts[0], c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, tMinNew, t);\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, parts[1], c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, t, tMaxNew);\n\t\t\t\t} else {\n\t\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\t\tu = (uMin + uMax) / 2;\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tparts[0], v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, u, tMinNew, tMaxNew);\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tparts[1], v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, u, uMax, tMinNew, tMaxNew);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (uMax - uMin >= fatLineEpsilon) {\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, tMinNew, tMaxNew);\n\t\t\t\t} else {\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv1, v2, c1, c2, locations, include, flip,\n\t\t\t\t\t\t\trecursion, calls, tMinNew, tMaxNew, uMin, uMax);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn calls;\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t} else {\n\t\t\tvar distRatio = dist1 / dist2;\n\t\t\thull = [\n\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t: distRatio <= 0.5 ? [p0, p2, p3]\n\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t[p0, p3]\n\t\t\t];\n\t\t}\n\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t}\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction getCurveLineIntersections(v, px, py, vx, vy) {\n\t\tvar isZero = Numerical.isZero;\n\t\tif (isZero(vx) && isZero(vy)) {\n\t\t\tvar t = Curve.getTimeOf(v, new Point(px, py));\n\t\t\treturn t === null ? [] : [t];\n\t\t}\n\t\tvar angle = Math.atan2(-vy, vx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trv = [],\n\t\t\troots = [];\n\t\tfor (var i = 0; i < 8; i += 2) {\n\t\t\tvar x = v[i] - px,\n\t\t\t\ty = v[i + 1] - py;\n\t\t\trv.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\tx * sin + y * cos);\n\t\t}\n\t\tCurve.solveCubic(rv, 1, 0, roots, 0, 1);\n\t\treturn roots;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, include,\n\t\t\tflip) {\n\t\tvar x1 = v2[0], y1 = v2[1],\n\t\t\tx2 = v2[6], y2 = v2[7],\n\t\t\troots = getCurveLineIntersections(v1, x1, y1, x2 - x1, y2 - y1);\n\t\tfor (var i = 0, l = roots.length; i < l; i++) {\n\t\t\tvar t1 = roots[i],\n\t\t\t\tp1 = Curve.getPoint(v1, t1),\n\t\t\t\tt2 = Curve.getTimeOf(v2, p1);\n\t\t\tif (t2 !== null) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tflip ? c2 : c1, flip ? t2 : t1,\n\t\t\t\t\t\tflip ? c1 : c2, flip ? t1 : t2);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, c1, c2, locations, include) {\n\t\tvar pt = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (pt) {\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tc1, Curve.getTimeOf(v1, pt),\n\t\t\t\t\tc2, Curve.getTimeOf(v2, pt));\n\t\t}\n\t}\n\n\tfunction getCurveIntersections(v1, v2, c1, c2, locations, include) {\n\t\tvar epsilon = 1e-12,\n\t\t\tmin = Math.min,\n\t\t\tmax = Math.max;\n\n\t\tif (max(v1[0], v1[2], v1[4], v1[6]) + epsilon >\n\t\t\tmin(v2[0], v2[2], v2[4], v2[6]) &&\n\t\t\tmin(v1[0], v1[2], v1[4], v1[6]) - epsilon <\n\t\t\tmax(v2[0], v2[2], v2[4], v2[6]) &&\n\t\t\tmax(v1[1], v1[3], v1[5], v1[7]) + epsilon >\n\t\t\tmin(v2[1], v2[3], v2[5], v2[7]) &&\n\t\t\tmin(v1[1], v1[3], v1[5], v1[7]) - epsilon <\n\t\t\tmax(v2[1], v2[3], v2[5], v2[7])) {\n\t\t\tvar overlaps = getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\t\tc1, overlap[0],\n\t\t\t\t\t\t\tc2, overlap[1], true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\t\tflip = straight1 && !straight2,\n\t\t\t\t\tbefore = locations.length;\n\t\t\t\t(straight\n\t\t\t\t\t? addLineIntersection\n\t\t\t\t\t: straight1 || straight2\n\t\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\t\tflip ? v2 : v1, flip ? v1 : v2,\n\t\t\t\t\t\t\tflip ? c2 : c1, flip ? c1 : c2,\n\t\t\t\t\t\t\tlocations, include, flip,\n\t\t\t\t\t\t\t0, 0, 0, 1, 0, 1);\n\t\t\t\tif (!straight || locations.length === before) {\n\t\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\t\tvar t1 = i >> 1,\n\t\t\t\t\t\t\tt2 = i & 1,\n\t\t\t\t\t\t\ti1 = t1 * 6,\n\t\t\t\t\t\t\ti2 = t2 * 6,\n\t\t\t\t\t\t\tp1 = new Point(v1[i1], v1[i1 + 1]),\n\t\t\t\t\t\t\tp2 = new Point(v2[i2], v2[i2 + 1]);\n\t\t\t\t\t\tif (p1.isClose(p2, epsilon)) {\n\t\t\t\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\t\t\t\tc1, t1,\n\t\t\t\t\t\t\t\t\tc2, t2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn locations;\n\t}\n\n\tfunction getLoopIntersection(v1, c1, locations, include) {\n\t\tvar info = Curve.classify(v1);\n\t\tif (info.type === 'loop') {\n\t\t\tvar roots = info.roots;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tc1, roots[0],\n\t\t\t\t\tc1, roots[1]);\n\t\t}\n\t  return locations;\n\t}\n\n\tfunction getIntersections(curves1, curves2, include, matrix1, matrix2,\n\t\t\t_returnFirst) {\n\t\tvar self = !curves2;\n\t\tif (self)\n\t\t\tcurves2 = curves1;\n\t\tvar length1 = curves1.length,\n\t\t\tlength2 = curves2.length,\n\t\t\tvalues2 = [],\n\t\t\tarrays = [],\n\t\t\tlocations,\n\t\t\tcurrent;\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = self ? values2[i] : curve1.getValues(matrix1),\n\t\t\t\tpath1 = curve1.getPath();\n\t\t\tif (path1 !== current) {\n\t\t\t\tcurrent = path1;\n\t\t\t\tlocations = [];\n\t\t\t\tarrays.push(locations);\n\t\t\t}\n\t\t\tif (self) {\n\t\t\t\tgetLoopIntersection(values1, curve1, locations, include);\n\t\t\t}\n\t\t\tfor (var j = self ? i + 1 : 0; j < length2; j++) {\n\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\treturn locations;\n\t\t\t\tgetCurveIntersections(values1, values2[j], curve1, curves2[j],\n\t\t\t\t\t\tlocations, include);\n\t\t\t}\n\t\t}\n\t\tlocations = [];\n\t\tfor (var i = 0, l = arrays.length; i < l; i++) {\n\t\t\tlocations.push.apply(locations, arrays[i]);\n\t\t}\n\t\treturn locations;\n\t}\n\n\tfunction getOverlaps(v1, v2) {\n\n\t\tfunction getSquaredLineLength(v) {\n\t\t\tvar x = v[6] - v[0],\n\t\t\t\ty = v[7] - v[1];\n\t\t\treturn x * x + y * y;\n\t\t}\n\n\t\tvar abs = Math.abs,\n\t\t\tgetDistance = Line.getDistance,\n\t\t\ttimeEpsilon = 1e-8,\n\t\t\tgeomEpsilon = 1e-7,\n\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\tstraightBoth = straight1 && straight2,\n\t\t\tflip = getSquaredLineLength(v1) < getSquaredLineLength(v2),\n\t\t\tl1 = flip ? v2 : v1,\n\t\t\tl2 = flip ? v1 : v2,\n\t\t\tpx = l1[0], py = l1[1],\n\t\t\tvx = l1[6] - px, vy = l1[7] - py;\n\t\tif (getDistance(px, py, vx, vy, l2[0], l2[1], true) < geomEpsilon &&\n\t\t\tgetDistance(px, py, vx, vy, l2[6], l2[7], true) < geomEpsilon) {\n\t\t\tif (!straightBoth &&\n\t\t\t\tgetDistance(px, py, vx, vy, l1[2], l1[3], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l1[4], l1[5], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l2[2], l2[3], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l2[4], l2[5], true) < geomEpsilon) {\n\t\t\t\tstraight1 = straight2 = straightBoth = true;\n\t\t\t}\n\t\t} else if (straightBoth) {\n\t\t\treturn null;\n\t\t}\n\t\tif (straight1 ^ straight2) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar v = [v1, v2],\n\t\t\tpairs = [];\n\t\tfor (var i = 0; i < 4 && pairs.length < 2; i++) {\n\t\t\tvar i1 = i & 1,\n\t\t\t\ti2 = i1 ^ 1,\n\t\t\t\tt1 = i >> 1,\n\t\t\t\tt2 = Curve.getTimeOf(v[i1], new Point(\n\t\t\t\t\tv[i2][t1 ? 6 : 0],\n\t\t\t\t\tv[i2][t1 ? 7 : 1]));\n\t\t\tif (t2 != null) {\n\t\t\t\tvar pair = i1 ? [t1, t2] : [t2, t1];\n\t\t\t\tif (!pairs.length ||\n\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon) {\n\t\t\t\t\tpairs.push(pair);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i > 2 && !pairs.length)\n\t\t\t\tbreak;\n\t\t}\n\t\tif (pairs.length !== 2) {\n\t\t\tpairs = null;\n\t\t} else if (!straightBoth) {\n\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\tpairs = null;\n\t\t}\n\t\treturn pairs;\n\t}\n\n\treturn {\n\t\tgetIntersections: function(curve) {\n\t\t\tvar v1 = this.getValues(),\n\t\t\t\tv2 = curve && curve !== this && curve.getValues();\n\t\t\treturn v2 ? getCurveIntersections(v1, v2, this, curve, [])\n\t\t\t\t\t  : getLoopIntersection(v1, this, []);\n\t\t},\n\n\t\tstatics: {\n\t\t\tgetOverlaps: getOverlaps,\n\t\t\tgetIntersections: getIntersections,\n\t\t\tgetCurveLineIntersections: getCurveLineIntersections\n\t\t}\n\t};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\n\tinitialize: function CurveLocation(curve, time, point, _overlap, _distance) {\n\t\tif (time >= 0.99999999) {\n\t\t\tvar next = curve.getNext();\n\t\t\tif (next) {\n\t\t\t\ttime = 0;\n\t\t\t\tcurve = next;\n\t\t\t}\n\t\t}\n\t\tthis._setCurve(curve);\n\t\tthis._time = time;\n\t\tthis._point = point || curve.getPointAtTime(time);\n\t\tthis._overlap = _overlap;\n\t\tthis._distance = _distance;\n\t\tthis._intersection = this._next = this._previous = null;\n\t},\n\n\t_setCurve: function(curve) {\n\t\tvar path = curve._path;\n\t\tthis._path = path;\n\t\tthis._version = path ? path._version : 0;\n\t\tthis._curve = curve;\n\t\tthis._segment = null;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\t_setSegment: function(segment) {\n\t\tthis._setCurve(segment.getCurve());\n\t\tthis._segment = segment;\n\t\tthis._time = segment === this._segment1 ? 0 : 1;\n\t\tthis._point = segment._point.clone();\n\t},\n\n\tgetSegment: function() {\n\t\tvar segment = this._segment;\n\t\tif (!segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\ttime = this.getTime();\n\t\t\tif (time === 0) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (time === 1) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else if (time != null) {\n\t\t\t\tsegment = curve.getPartLength(0, time)\n\t\t\t\t\t< curve.getPartLength(time, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tthis._segment = segment;\n\t\t}\n\t\treturn segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tthat = this;\n\t\tif (path && path._version !== this._version) {\n\t\t\tthis._time = this._offset = this._curveOffset = this._curve = null;\n\t\t}\n\n\t\tfunction trySegment(segment) {\n\t\t\tvar curve = segment && segment.getCurve();\n\t\t\tif (curve && (that._time = curve.getTimeOf(that._point)) != null) {\n\t\t\t\tthat._setCurve(curve);\n\t\t\t\treturn curve;\n\t\t\t}\n\t\t}\n\n\t\treturn this._curve\n\t\t\t|| trySegment(this._segment)\n\t\t\t|| trySegment(this._segment1)\n\t\t\t|| trySegment(this._segment2.getPrevious());\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetTime: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\ttime = this._time;\n\t\treturn curve && time == null\n\t\t\t? this._time = curve.getTimeOf(this._point)\n\t\t\t: time;\n\t},\n\n\tgetParameter: '#getTime',\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar offset = this._offset;\n\t\tif (offset == null) {\n\t\t\toffset = 0;\n\t\t\tvar path = this.getPath(),\n\t\t\t\tindex = this.getIndex();\n\t\t\tif (path && index != null) {\n\t\t\t\tvar curves = path.getCurves();\n\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t}\n\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar offset = this._curveOffset;\n\t\tif (offset == null) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\ttime = this.getTime();\n\t\t\tthis._curveOffset = offset = time != null && curve\n\t\t\t\t\t&& curve.getPartLength(0, time);\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetIntersection: function() {\n\t\treturn this._intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tres = curve && curve.divideAtTime(this.getTime());\n\t\tif (res) {\n\t\t\tthis._setSegment(res._segment1);\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tpath = curve._path,\n\t\t\tres = curve && curve.splitAtTime(this.getTime());\n\t\tif (res) {\n\t\t\tthis._setSegment(path.getLastSegment());\n\t\t}\n\t\treturn  res;\n\t},\n\n\tequals: function(loc, _ignoreOther) {\n\t\tvar res = this === loc;\n\t\tif (!res && loc instanceof CurveLocation) {\n\t\t\tvar c1 = this.getCurve(),\n\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\tp1 = c1._path,\n\t\t\t\tp2 = c2._path;\n\t\t\tif (p1 === p2) {\n\t\t\t\tvar abs = Math.abs,\n\t\t\t\t\tepsilon = 1e-7,\n\t\t\t\t\tdiff = abs(this.getOffset() - loc.getOffset()),\n\t\t\t\t\ti1 = !_ignoreOther && this._intersection,\n\t\t\t\t\ti2 = !_ignoreOther && loc._intersection;\n\t\t\t\tres = (diff < epsilon\n\t\t\t\t\t\t|| p1 && abs(p1.getLength() - diff) < epsilon)\n\t\t\t\t\t&& (!i1 && !i2 || i1 && i2 && i1.equals(i2, true));\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar time = this.getTime();\n\t\tif (time != null)\n\t\t\tparts.push('time: ' + f.number(time));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tisTouching: function() {\n\t\tvar inter = this._intersection;\n\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\tcurve2 = inter.getCurve();\n\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t}\n\t\treturn false;\n\t},\n\n\tisCrossing: function() {\n\t\tvar inter = this._intersection;\n\t\tif (!inter)\n\t\t\treturn false;\n\t\tvar t1 = this.getTime(),\n\t\t\tt2 = inter.getTime(),\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tt1Inside = t1 >= tMin && t1 <= tMax,\n\t\t\tt2Inside = t2 >= tMin && t2 <= tMax;\n\t\tif (t1Inside && t2Inside)\n\t\t\treturn !this.isTouching();\n\t\tvar c2 = this.getCurve(),\n\t\t\tc1 = t1 < tMin ? c2.getPrevious() : c2,\n\t\t\tc4 = inter.getCurve(),\n\t\t\tc3 = t2 < tMin ? c4.getPrevious() : c4;\n\t\tif (t1 > tMax)\n\t\t\tc2 = c2.getNext();\n\t\tif (t2 > tMax)\n\t\t\tc4 = c4.getNext();\n\t\tif (!c1 || !c2 || !c3 || !c4)\n\t\t\treturn false;\n\n\t\tvar offsets = [];\n\n\t\tfunction addOffsets(curve, end) {\n\t\t\tvar v = curve.getValues(),\n\t\t\t\troots = Curve.classify(v).roots || Curve.getPeaks(v),\n\t\t\t\tcount = roots.length,\n\t\t\t\tt = end && count > 1 ? roots[count - 1]\n\t\t\t\t\t\t: count > 0 ? roots[0]\n\t\t\t\t\t\t: 0.5;\n\t\t\toffsets.push(Curve.getLength(v, end ? t : 0, end ? 1 : t) / 2);\n\t\t}\n\n\t\tfunction isInRange(angle, min, max) {\n\t\t\treturn min < max\n\t\t\t\t\t? angle > min && angle < max\n\t\t\t\t\t: angle > min || angle < max;\n\t\t}\n\n\t\tif (!t1Inside) {\n\t\t\taddOffsets(c1, true);\n\t\t\taddOffsets(c2, false);\n\t\t}\n\t\tif (!t2Inside) {\n\t\t\taddOffsets(c3, true);\n\t\t\taddOffsets(c4, false);\n\t\t}\n\t\tvar pt = this.getPoint(),\n\t\t\toffset = Math.min.apply(Math, offsets),\n\t\t\tv2 = t1Inside ? c2.getTangentAtTime(t1)\n\t\t\t\t\t: c2.getPointAt(offset).subtract(pt),\n\t\t\tv1 = t1Inside ? v2.negate()\n\t\t\t\t\t: c1.getPointAt(-offset).subtract(pt),\n\t\t\tv4 = t2Inside ? c4.getTangentAtTime(t2)\n\t\t\t\t\t: c4.getPointAt(offset).subtract(pt),\n\t\t\tv3 = t2Inside ? v4.negate()\n\t\t\t\t\t: c3.getPointAt(-offset).subtract(pt),\n\t\t\ta1 = v1.getAngle(),\n\t\t\ta2 = v2.getAngle(),\n\t\t\ta3 = v3.getAngle(),\n\t\t\ta4 = v4.getAngle();\n\t\treturn !!(t1Inside\n\t\t\t\t? (isInRange(a1, a3, a4) ^ isInRange(a2, a3, a4)) &&\n\t\t\t\t  (isInRange(a1, a4, a3) ^ isInRange(a2, a4, a3))\n\t\t\t\t: (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2)) &&\n\t\t\t\t  (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1)));\n\t},\n\n\thasOverlap: function() {\n\t\treturn !!this._overlap;\n\t}\n}, Base.each(Curve._evaluateMethods, function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar curve = this.getCurve(),\n\t\t\ttime = this.getTime();\n\t\treturn time != null && curve && curve[get](time, true);\n\t};\n}, {\n\tpreserve: true\n}),\nnew function() {\n\n\tfunction insert(locations, loc, merge) {\n\t\tvar length = locations.length,\n\t\t\tl = 0,\n\t\t\tr = length - 1;\n\n\t\tfunction search(index, dir) {\n\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t1e-7))\n\t\t\t\t\tbreak;\n\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\treturn loc2;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (l <= r) {\n\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\tloc2 = locations[m],\n\t\t\t\tfound;\n\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\tif (loc._overlap) {\n\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t}\n\t\t\t\treturn found;\n\t\t\t}\n\t\tvar path1 = loc.getPath(),\n\t\t\tpath2 = loc2.getPath(),\n\t\t\tdiff = path1 !== path2\n\t\t\t\t? path1._id - path2._id\n\t\t\t\t: (loc.getIndex() + loc.getTime())\n\t\t\t\t- (loc2.getIndex() + loc2.getTime());\n\t\t\tif (diff < 0) {\n\t\t\t\tr = m - 1;\n\t\t\t} else {\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t}\n\t\tlocations.splice(l, 0, loc);\n\t\treturn loc;\n\t}\n\n\treturn { statics: {\n\t\tinsert: insert,\n\n\t\texpand: function(locations) {\n\t\t\tvar expanded = locations.slice();\n\t\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t}\n\t\t\treturn expanded;\n\t\t}\n\t}};\n});\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\t_selectBounds: false,\n\t_canScaleStroke: true,\n\tbeans: true,\n\n\tinitialize: function PathItem() {\n\t},\n\n\tstatics: {\n\t\tcreate: function(arg) {\n\t\t\tvar data,\n\t\t\t\tsegments,\n\t\t\t\tcompound;\n\t\t\tif (Base.isPlainObject(arg)) {\n\t\t\t\tsegments = arg.segments;\n\t\t\t\tdata = arg.pathData;\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tsegments = arg;\n\t\t\t} else if (typeof arg === 'string') {\n\t\t\t\tdata = arg;\n\t\t\t}\n\t\t\tif (segments) {\n\t\t\t\tvar first = segments[0];\n\t\t\t\tcompound = first && Array.isArray(first[0]);\n\t\t\t} else if (data) {\n\t\t\t\tcompound = (data.match(/m/gi) || []).length > 1\n\t\t\t\t\t\t|| /z\\s*\\S+/i.test(data);\n\t\t\t}\n\t\t\tvar ctor = compound ? CompoundPath : Path;\n\t\t\treturn new ctor(arg);\n\t\t}\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tisClockwise: function() {\n\t\treturn this.getArea() >= 0;\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data && data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis[move ? 'moveTo' : 'lineTo'](current = getPoint(j));\n\t\t\t\t\tif (move) {\n\t\t\t\t\t\tstart = current;\n\t\t\t\t\t\tmove = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tcurrent = current.clone();\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(1e-12);\n\t\t\t\tcurrent = start;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = point.isInside(\n\t\t\t\tthis.getBounds({ internal: true, handle: true }))\n\t\t\t\t\t? this._getWinding(point)\n\t\t\t\t\t: {};\n\t\treturn winding.onPath || !!(this.getFillRule() === 'evenodd'\n\t\t\t\t? winding.windingL & 1 || winding.windingR & 1\n\t\t\t\t: winding.winding);\n\t},\n\n\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\tvar self = this === path || !path,\n\t\t\tmatrix1 = this._matrix._orNullIfIdentity(),\n\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t: (_matrix || path._matrix)._orNullIfIdentity();\n\t\treturn self || this.getBounds(matrix1).intersects(\n\t\t\t\tpath.getBounds(matrix2), 1e-12)\n\t\t\t\t? Curve.getIntersections(\n\t\t\t\t\t\tthis.getCurves(), !self && path.getCurves(), include,\n\t\t\t\t\t\tmatrix1, matrix2, _returnFirst)\n\t\t\t\t: [];\n\t},\n\n\tgetCrossings: function(path) {\n\t\treturn this.getIntersections(path, function(inter) {\n\t\t\treturn inter.hasOverlap() || inter.isCrossing();\n\t\t});\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\tvar loc = this.getNearestLocation.apply(this, arguments);\n\t\treturn loc ? loc.getPoint() : loc;\n\t},\n\n\tinterpolate: function(from, to, factor) {\n\t\tvar isPath = !this._children,\n\t\t\tname = isPath ? '_segments' : '_children',\n\t\t\titemsFrom = from[name],\n\t\t\titemsTo = to[name],\n\t\t\titems = this[name];\n\t\tif (!itemsFrom || !itemsTo || itemsFrom.length !== itemsTo.length) {\n\t\t\tthrow new Error('Invalid operands in interpolate() call: ' +\n\t\t\t\t\tfrom + ', ' + to);\n\t\t}\n\t\tvar current = items.length,\n\t\t\tlength = itemsTo.length;\n\t\tif (current < length) {\n\t\t\tvar ctor = isPath ? Segment : Path;\n\t\t\tfor (var i = current; i < length; i++) {\n\t\t\t\tthis.add(new ctor());\n\t\t\t}\n\t\t} else if (current > length) {\n\t\t\tthis[isPath ? 'removeSegments' : 'removeChildren'](length, current);\n\t\t}\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\titems[i].interpolate(itemsFrom[i], itemsTo[i], factor);\n\t\t}\n\t\tif (isPath) {\n\t\t\tthis.setClosed(from._closed);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tcompare: function(path) {\n\t\tvar ok = false;\n\t\tif (path) {\n\t\t\tvar paths1 = this._children || [this],\n\t\t\t\tpaths2 = path._children ? path._children.slice() : [path],\n\t\t\t\tlength1 = paths1.length,\n\t\t\t\tlength2 = paths2.length,\n\t\t\t\tmatched = [],\n\t\t\t\tcount = 0;\n\t\t\tok = true;\n\t\t\tfor (var i1 = length1 - 1; i1 >= 0 && ok; i1--) {\n\t\t\t\tvar path1 = paths1[i1];\n\t\t\t\tok = false;\n\t\t\t\tfor (var i2 = length2 - 1; i2 >= 0 && !ok; i2--) {\n\t\t\t\t\tif (path1.compare(paths2[i2])) {\n\t\t\t\t\t\tif (!matched[i2]) {\n\t\t\t\t\t\t\tmatched[i2] = true;\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tok = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tok = ok && count === length2;\n\t\t}\n\t\treturn ok;\n\t},\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._segmentSelection = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setSegments(source._segments);\n\t\tthis._closed = source._closed;\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tthis._length = this._area = undefined;\n\t\t\tif (flags & 16) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected(),\n\t\t\tlength = segments && segments.length;\n\t\tthis._segments.length = 0;\n\t\tthis._segmentSelection = 0;\n\t\tthis._curves = undefined;\n\t\tif (length) {\n\t\t\tvar last = segments[length - 1];\n\t\t\tif (typeof last === 'boolean') {\n\t\t\t\tthis.setClosed(last);\n\t\t\t\tlength--;\n\t\t\t}\n\t\t\tthis._add(Segment.readList(segments, 0, {}, length));\n\t\t}\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine) {\n\t\t\t\t\t\tvar dx = curX - prevX,\n\t\t\t\t\t\t\tdy = curY - prevY;\n\t\t\t\t\t\tparts.push(\n\t\t\t\t\t\t\t  dx === 0 ? 'v' + f.number(dy)\n\t\t\t\t\t\t\t: dy === 0 ? 'h' + f.number(dx)\n\t\t\t\t\t\t\t: 'l' + f.pair(dx, dy));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t + ' ' + f.pair( inX - prevX,  inY - prevY)\n\t\t\t\t\t\t\t + ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (!length)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._segments.length;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar segments = this._segments,\n\t\t\tcoords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selection)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selection);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves) {\n\t\t\tvar total = this._countCurves(),\n\t\t\t\tstart = index > 0 && index + amount - 1 === total ? index - 1\n\t\t\t\t\t: index,\n\t\t\t\tinsert = start,\n\t\t\t\tend = Math.min(start + amount, total);\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [start, 0].concat(segs._curves));\n\t\t\t\tinsert += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = insert; i < end; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(start, end);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(start, end) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && !start ? segments.length - 1\n\t\t\t\t: start - 1]) {\n\t\t\tcurve._segment2 = segments[start] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[end]) {\n\t\t\tcurve._segment1 = segments[end];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readList(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readList(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readList(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readList(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(start, end, _includeCurves) {\n\t\tstart = start || 0;\n\t\tend = Base.pick(end, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(start, end - start),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selection)\n\t\t\t\tthis._updateSelection(segment, segment._selection, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = start, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = start > 0 && end === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? start - 1\n\t\t\t\t\t: start,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tfor (var i = curves.length - 1; i >= 0; i--)\n\t\t\t\tcurves[i]._path = null;\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tclearHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i].clearHandles();\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tlength += curves[i].getLength();\n\t\t\tthis._length = length;\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar area = this._area;\n\t\tif (area == null) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tclosed = this._closed;\n\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar last = i + 1 === l;\n\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\tsegments[i], segments[last ? 0 : i + 1],\n\t\t\t\t\t\tnull, last && !closed));\n\t\t\t}\n\t\t\tthis._area = area;\n\t\t}\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this.isSelected() && length > 0 && this._segmentSelection\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelection: function setSelection(selection) {\n\t\tif (!(selection & 1))\n\t\t\tthis._selectSegments(false);\n\t\tsetSelection.base.call(this, selection);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tselection = selected ? 7 : 0;\n\t\tthis._segmentSelection = selection * length;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tsegments[i]._selection = selection;\n\t},\n\n\t_updateSelection: function(segment, oldSelection, newSelection) {\n\t\tsegment._selection = newSelection;\n\t\tvar selection = this._segmentSelection += newSelection - oldSelection;\n\t\tif (selection > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tdivideAt: function(location) {\n\t\tvar loc = this.getLocationAt(location),\n\t\t\tcurve;\n\t\treturn loc && (curve = loc.getCurve().divideAt(loc.getCurveOffset()))\n\t\t\t\t? curve._segment1\n\t\t\t\t: null;\n\t},\n\n\tsplitAt: function(location) {\n\t\tvar loc = this.getLocationAt(location),\n\t\t\tindex = loc && loc.index,\n\t\t\ttime = loc && loc.time,\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin;\n\t\tif (time > tMax) {\n\t\t\tindex++;\n\t\t\ttime = 0;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (time >= tMin) {\n\t\t\t\tcurves[index++].divideAtTime(time);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this);\n\t\t\t\tpath.copyAttributes(this);\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tsplit: function(index, time) {\n\t\tvar curve,\n\t\t\tlocation = time === undefined ? index\n\t\t\t\t: (curve = this.getCurves()[index])\n\t\t\t\t\t&& curve.getLocationAtTime(time);\n\t\treturn location != null ? this.splitAt(location) : null;\n\t},\n\n\tjoin: function(path, tolerance) {\n\t\tvar epsilon = tolerance || 0;\n\t\tif (path && path !== this) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.isClose(last2._point, epsilon))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.isClose(first2._point, epsilon)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.isClose(first2._point, epsilon))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.isClose(last2._point, epsilon)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.isClose(last._point, epsilon)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\treduce: function(options) {\n\t\tvar curves = this.getCurves(),\n\t\t\tsimplify = options && options.simplify,\n\t\t\ttolerance = simplify ? 1e-7 : 0;\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (!curve.hasHandles() && (!curve.hasLength(tolerance)\n\t\t\t\t\t|| simplify && curve.isCollinear(curve.getNext())))\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tthis._changed(9);\n\t},\n\n\tflatten: function(flatness) {\n\t\tvar flattener = new PathFlattener(this, flatness || 0.25, 256, true),\n\t\t\tparts = flattener.parts,\n\t\t\tlength = parts.length,\n\t\t\tsegments = [];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tsegments.push(new Segment(parts[i].curve.slice(0, 2)));\n\t\t}\n\t\tif (!this._closed && length > 0) {\n\t\t\tsegments.push(new Segment(parts[length - 1].curve.slice(6)));\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tvar segments = new PathFitter(this).fit(tolerance || 2.5);\n\t\tif (segments)\n\t\t\tthis.setSegments(segments);\n\t\treturn !!segments;\n\t},\n\n\tsmooth: function(options) {\n\t\tvar that = this,\n\t\t\topts = options || {},\n\t\t\ttype = opts.type || 'asymmetric',\n\t\t\tsegments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tclosed = this._closed;\n\n\t\tfunction getIndex(value, _default) {\n\t\t\tvar index = value && value.index;\n\t\t\tif (index != null) {\n\t\t\t\tvar path = value.path;\n\t\t\t\tif (path && path !== that)\n\t\t\t\t\tthrow new Error(value._class + ' ' + index + ' of ' + path\n\t\t\t\t\t\t\t+ ' is not part of ' + that);\n\t\t\t\tif (_default && value instanceof Curve)\n\t\t\t\t\tindex++;\n\t\t\t} else {\n\t\t\t\tindex = typeof value === 'number' ? value : _default;\n\t\t\t}\n\t\t\treturn Math.min(index < 0 && closed\n\t\t\t\t\t? index % length\n\t\t\t\t\t: index < 0 ? index + length : index, length - 1);\n\t\t}\n\n\t\tvar loop = closed && opts.from === undefined && opts.to === undefined,\n\t\t\tfrom = getIndex(opts.from, 0),\n\t\t\tto = getIndex(opts.to, length - 1);\n\n\t\tif (from > to) {\n\t\t\tif (closed) {\n\t\t\t\tfrom -= length;\n\t\t\t} else {\n\t\t\t\tvar tmp = from;\n\t\t\t\tfrom = to;\n\t\t\t\tto = tmp;\n\t\t\t}\n\t\t}\n\t\tif (/^(?:asymmetric|continuous)$/.test(type)) {\n\t\t\tvar asymmetric = type === 'asymmetric',\n\t\t\t\tmin = Math.min,\n\t\t\t\tamount = to - from + 1,\n\t\t\t\tn = amount - 1,\n\t\t\t\tpadding = loop ? min(amount, 4) : 1,\n\t\t\t\tpaddingLeft = padding,\n\t\t\t\tpaddingRight = padding,\n\t\t\t\tknots = [];\n\t\t\tif (!closed) {\n\t\t\t\tpaddingLeft = min(1, from);\n\t\t\t\tpaddingRight = min(1, length - to - 1);\n\t\t\t}\n\t\t\tn += paddingLeft + paddingRight;\n\t\t\tif (n <= 1)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0, j = from - paddingLeft; i <= n; i++, j++) {\n\t\t\t\tknots[i] = segments[(j < 0 ? j + length : j) % length]._point;\n\t\t\t}\n\n\t\t\tvar x = knots[0]._x + 2 * knots[1]._x,\n\t\t\t\ty = knots[0]._y + 2 * knots[1]._y,\n\t\t\t\tf = 2,\n\t\t\t\tn_1 = n - 1,\n\t\t\t\trx = [x],\n\t\t\t\try = [y],\n\t\t\t\trf = [f],\n\t\t\t\tpx = [],\n\t\t\t\tpy = [];\n\t\t\tfor (var i = 1; i < n; i++) {\n\t\t\t\tvar internal = i < n_1,\n\t\t\t\t\ta = internal ? 1 : asymmetric ? 1 : 2,\n\t\t\t\t\tb = internal ? 4 : asymmetric ? 2 : 7,\n\t\t\t\t\tu = internal ? 4 : asymmetric ? 3 : 8,\n\t\t\t\t\tv = internal ? 2 : asymmetric ? 0 : 1,\n\t\t\t\t\tm = a / f;\n\t\t\t\tf = rf[i] = b - m;\n\t\t\t\tx = rx[i] = u * knots[i]._x + v * knots[i + 1]._x - m * x;\n\t\t\t\ty = ry[i] = u * knots[i]._y + v * knots[i + 1]._y - m * y;\n\t\t\t}\n\n\t\t\tpx[n_1] = rx[n_1] / rf[n_1];\n\t\t\tpy[n_1] = ry[n_1] / rf[n_1];\n\t\t\tfor (var i = n - 2; i >= 0; i--) {\n\t\t\t\tpx[i] = (rx[i] - px[i + 1]) / rf[i];\n\t\t\t\tpy[i] = (ry[i] - py[i + 1]) / rf[i];\n\t\t\t}\n\t\t\tpx[n] = (3 * knots[n]._x - px[n_1]) / 2;\n\t\t\tpy[n] = (3 * knots[n]._y - py[n_1]) / 2;\n\n\t\t\tfor (var i = paddingLeft, max = n - paddingRight, j = from;\n\t\t\t\t\ti <= max; i++, j++) {\n\t\t\t\tvar segment = segments[j < 0 ? j + length : j],\n\t\t\t\t\tpt = segment._point,\n\t\t\t\t\thx = px[i] - pt._x,\n\t\t\t\t\thy = py[i] - pt._y;\n\t\t\t\tif (loop || i < max)\n\t\t\t\t\tsegment.setHandleOut(hx, hy);\n\t\t\t\tif (loop || i > paddingLeft)\n\t\t\t\t\tsegment.setHandleIn(-hx, -hy);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = from; i <= to; i++) {\n\t\t\t\tsegments[i < 0 ? i + length : i].smooth(opts,\n\t\t\t\t\t\t!loop && i === from, !loop && i === to);\n\t\t\t}\n\t\t}\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\tseg3 = segments[j],\n\t\t\t\tseg4 = seg3.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\tvar seg2 = segments[i],\n\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\tseg3 = seg2.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.copyAttributes(this, true);\n\t\t\tshape._matrix.prepend(this._matrix);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tif (insert === undefined || insert)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\ttoPath: '#clone',\n\n\tcompare: function compare(path) {\n\t\tif (!path || path instanceof CompoundPath)\n\t\t\treturn compare.base.call(this, path);\n\t\tvar curves1 = this.getCurves(),\n\t\t\tcurves2 = path.getCurves(),\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = curves2.length;\n\t\tif (!length1 || !length2) {\n\t\t\treturn length1 == length2;\n\t\t}\n\t\tvar v1 = curves1[0].getValues(),\n\t\t\tvalues2 = [],\n\t\t\tpos1 = 0, pos2,\n\t\t\tend1 = 0, end2;\n\t\tfor (var i = 0; i < length2; i++) {\n\t\t\tvar v2 = curves2[i].getValues();\n\t\t\tvalues2.push(v2);\n\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tpos2 = !i && overlaps[0][0] > 0 ? length2 - 1 : i;\n\t\t\t\tend2 = overlaps[0][1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar abs = Math.abs,\n\t\t\tepsilon = 1e-8,\n\t\t\tv2 = values2[pos2],\n\t\t\tstart2;\n\t\twhile (v1 && v2) {\n\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tvar t1 = overlaps[0][0];\n\t\t\t\tif (abs(t1 - end1) < epsilon) {\n\t\t\t\t\tend1 = overlaps[1][0];\n\t\t\t\t\tif (end1 === 1) {\n\t\t\t\t\t\tv1 = ++pos1 < length1 ? curves1[pos1].getValues() : null;\n\t\t\t\t\t\tend1 = 0;\n\t\t\t\t\t}\n\t\t\t\t\tvar t2 = overlaps[0][1];\n\t\t\t\t\tif (abs(t2 - end2) < epsilon) {\n\t\t\t\t\t\tif (!start2)\n\t\t\t\t\t\t\tstart2 = [pos2, t2];\n\t\t\t\t\t\tend2 = overlaps[1][1];\n\t\t\t\t\t\tif (end2 === 1) {\n\t\t\t\t\t\t\tif (++pos2 >= length2)\n\t\t\t\t\t\t\t\tpos2 = 0;\n\t\t\t\t\t\t\tv2 = values2[pos2] || curves2[pos2].getValues();\n\t\t\t\t\t\t\tend2 = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!v1) {\n\t\t\t\t\t\t\treturn start2[0] === pos2 && start2[1] === end2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t},\n\n\t_hitTestSelf: function(point, options, viewMatrix, strokeMatrix) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tstrokeRadius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (strokeRadius !== null) {\n\t\t\tif (strokeRadius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tstrokePadding = strokePadding.add(\n\t\t\t\t\tPath._getStrokePadding(strokeRadius, strokeMatrix));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tvar isJoin = closed || segment._index > 0\n\t\t\t\t\t&& segment._index < numSegments - 1;\n\t\t\tif ((isJoin ? join : cap) === 'round') {\n\t\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t\t} else {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (isJoin) {\n\t\t\t\t\tif (!segment.isSmooth()) {\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, strokeRadius,\n\t\t\t\t\t\t\t   miterLimit, null, strokeMatrix, addToArea, true);\n\t\t\t\t\t}\n\t\t\t\t} else if (cap === 'square') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, strokeRadius, null,\n\t\t\t\t\t\t\tstrokeMatrix, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (strokeRadius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar time = loc.getTime();\n\t\t\t\tif (time === 0 || time === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point)\n\t\t\t\t\t\t\t<= miterLimit * strokeRadius\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve._evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\tvar loc = this.getLocationAt(offset);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset) {\n\t\tif (typeof offset === 'number') {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar start = length,\n\t\t\t\t\tcurve = curves[i];\n\t\t\t\tlength += curve.getLength();\n\t\t\t\tif (length > offset) {\n\t\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (curves.length > 0 && offset <= this.getLength()) {\n\t\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\t\t}\n\t\t} else if (offset && offset.getPath && offset.getPath() === this) {\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t}\n\n}),\nnew function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2,\n\t\t\tcoords = new Array(6),\n\t\t\tpX, pY;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i],\n\t\t\t\tselection = segment._selection;\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tpX = coords[0];\n\t\t\tpY = coords[1];\n\t\t\tif (selection & 2)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (selection & 4)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(selection & 1)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar flattener = new PathFlattener(this, 0.25, 32, false,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = flattener.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\tflattener.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (!segments.length)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar abs = Math.abs,\n\t\t\t\tsqrt = Math.sqrt,\n\t\t\t\tcurrent = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments),\n\t\t\t\t\tisZero = Numerical.isZero;\n\t\t\t\tif (isZero(radius.width) || isZero(radius.height))\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq = x * x,\n\t\t\t\t\tySq = y * y;\n\t\t\t\tvar factor = sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1) * sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar epsilon = 1e-7,\n\t\t\t\text = abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil((ext - epsilon) / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!i) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(tolerance) {\n\t\t\tthis.setClosed(true);\n\t\t\tthis.join(this, tolerance);\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(matrix, options) {\n\t\tvar method = options.handle\n\t\t\t\t? 'getHandleBounds'\n\t\t\t\t: options.stroke\n\t\t\t\t? 'getStrokeBounds'\n\t\t\t\t: 'getBounds';\n\t\treturn Path[method](this._segments, this._closed, this, matrix, options);\n\t},\n\nstatics: {\n\tgetBounds: function(segments, closed, path, matrix, options, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6)),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, path, matrix, options) {\n\t\tvar style = path.getStyle(),\n\t\t\tstroke = style.hasStroke(),\n\t\t\tstrokeWidth = style.getStrokeWidth(),\n\t\t\tstrokeMatrix = stroke && path._getStrokeMatrix(matrix, options),\n\t\t\tstrokePadding = stroke && Path._getStrokePadding(strokeWidth,\n\t\t\t\tstrokeMatrix),\n\t\t\tbounds = Path.getBounds(segments, closed, path, matrix, options,\n\t\t\t\tstrokePadding);\n\t\tif (!stroke)\n\t\t\treturn bounds;\n\t\tvar strokeRadius = strokeWidth / 2,\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = style.getMiterLimit(),\n\t\t\tjoinBounds = new Rectangle(new Size(strokePadding));\n\n\t\tfunction addPoint(point) {\n\t\t\tbounds = bounds.include(point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(\n\t\t\t\t\tjoinBounds.setCenter(segment._point.transform(matrix)));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tif (join === 'round' || segment.isSmooth()) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, strokeRadius, miterLimit,\n\t\t\t\t\t\tmatrix, strokeMatrix, addPoint);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, strokeRadius, matrix,\n\t\t\t\t\t\tstrokeMatrix, addPoint);\n\t\t\t}\n\t\t}\n\n\t\tvar length = segments.length - (closed ? 0 : 1);\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getStrokePadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar hor = new Point(radius, 0).transform(matrix),\n\t\t\tver = new Point(0, radius).transform(matrix),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = Math.atan2(b * tan, a),\n\t\t\tty = Math.atan2(b, tan * a);\n\t\treturn [Math.abs(a * Math.cos(tx) * cos + b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, matrix,\n\t\t\tstrokeMatrix, addPoint, isArea) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPoint1().transform(matrix),\n\t\t\tnormal1 = curve1.getNormalAtTime(1).multiply(radius)\n\t\t\t\t.transform(strokeMatrix),\n\t\t\tnormal2 = curve2.getNormalAtTime(0).multiply(radius)\n\t\t\t\t.transform(strokeMatrix);\n\t\tif (normal1.getDirectedAngle(normal2) < 0) {\n\t\t\tnormal1 = normal1.negate();\n\t\t\tnormal2 = normal2.negate();\n\t\t}\n\t\tif (isArea)\n\t\t\taddPoint(point);\n\t\taddPoint(point.add(normal1));\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(point.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(point.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit * radius) {\n\t\t\t\taddPoint(corner);\n\t\t\t}\n\t\t}\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, matrix, strokeMatrix,\n\t\t\taddPoint, isArea) {\n\t\tvar point = segment._point.transform(matrix),\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal()\n\t\t\t\t\t.multiply(loc.getTime() === 0 ? radius : -radius)\n\t\t\t\t\t.transform(strokeMatrix);\n\t\tif (cap === 'square') {\n\t\t\tif (isArea) {\n\t\t\t\taddPoint(point.subtract(normal));\n\t\t\t\taddPoint(point.add(normal));\n\t\t\t}\n\t\t\tpoint = point.add(normal.rotate(-90));\n\t\t}\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, path, matrix, options) {\n\t\tvar style = path.getStyle(),\n\t\t\tstroke = options.stroke && style.hasStroke(),\n\t\t\tstrokePadding,\n\t\t\tjoinPadding;\n\t\tif (stroke) {\n\t\t\tvar strokeMatrix = path._getStrokeMatrix(matrix, options),\n\t\t\t\tstrokeRadius = style.getStrokeWidth() / 2,\n\t\t\t\tjoinRadius = strokeRadius;\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.SQRT2);\n\t\t\tstrokePadding = Path._getStrokePadding(strokeRadius, strokeMatrix);\n\t\t\tjoinPadding = Path._getStrokePadding(joinRadius, strokeMatrix);\n\t\t}\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = !j ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert == false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props, { insert: true });\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert == false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = sides % 3 === 0,\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\tbeans: true,\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items) {\n\t\tvar list = items,\n\t\t\tfirst = list[0];\n\t\tif (first && typeof first[0] === 'number')\n\t\t\tlist = [list];\n\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\tvar item = list[i];\n\t\t\tif (list === items && !(item instanceof Path))\n\t\t\t\tlist = Base.slice(list);\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tlist[i] = new Path({ segments: item, insert: false });\n\t\t\t} else if (item instanceof CompoundPath) {\n\t\t\t\tlist.splice.apply(list, [i, 1].concat(item.removeChildren()));\n\t\t\t\titem.remove();\n\t\t\t}\n\t\t}\n\t\treturn insertChildren.base.call(this, index, list);\n\t},\n\n\treduce: function reduce(options) {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\tvar path = children[i].reduce(options);\n\t\t\tif (path.isEmpty())\n\t\t\t\tpath.remove();\n\t\t}\n\t\tif (!children.length) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.copyAttributes(this);\n\t\t\tpath.insertAbove(this);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t}\n\t\treturn reduce.base.call(this);\n\t},\n\n\tisClosed: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tif (!children[i]._closed)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tchildren[i].setClosed(closed);\n\t\t}\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t},\n\n\tgetLength: function() {\n\t\tvar children = this._children,\n\t\t\tlength = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tlength += children[i].getLength();\n\t\treturn length;\n\t},\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.appended(mx) : _matrix, _precision));\n\t\t}\n\t\treturn paths.join('');\n\t},\n\n\t_hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n\t\treturn _hitTestChildren.base.call(this, point,\n\t\t\t\toptions.class === Path || options.type === 'path' ? options\n\t\t\t\t\t: Base.set({}, options, { fill: false }),\n\t\t\t\tviewMatrix);\n\t},\n\n\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (!children.length)\n\t\t\treturn;\n\n\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\tctx.beginPath();\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectionItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectionItems[child._id]) {\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.appended(mx));\n\t\t\t}\n\t\t}\n\t}\n},\nnew function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && !children.length)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\treturn Base.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo',\n\t\t\t'arcTo', 'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy',\n\t\t\t'arcBy'],\n\t\tfunction(key) {\n\t\t\tthis[key] = function() {\n\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t};\n\t\t}, {\n\t\t\tmoveTo: function() {\n\t\t\t\tvar current = getCurrentPath(this),\n\t\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\t\tif (path !== current)\n\t\t\t\t\tthis.addChild(path);\n\t\t\t\tpath.moveTo.apply(path, arguments);\n\t\t\t},\n\n\t\t\tmoveBy: function() {\n\t\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\t\tpoint = Point.read(arguments);\n\t\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t\t},\n\n\t\t\tclosePath: function(tolerance) {\n\t\t\t\tgetCurrentPath(this, true).closePath(tolerance);\n\t\t\t}\n\t\t}\n\t);\n}, Base.each(['reverse', 'flatten', 'simplify', 'smooth'], function(key) {\n\tthis[key] = function(param) {\n\t\tvar children = this._children,\n\t\t\tres;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tres = children[i][key](param) || res;\n\t\t}\n\t\treturn res;\n\t};\n}, {}));\n\nPathItem.inject(new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\toperators = {\n\t\t\tunite:     { '1': true, '2': true },\n\t\t\tintersect: { '2': true },\n\t\t\tsubtract:  { '1': true },\n\t\t\texclude:   { '1': true, '-1': true }\n\t\t};\n\n\tfunction preparePath(path, resolve) {\n\t\tvar res = path.clone(false).reduce({ simplify: true })\n\t\t\t\t.transform(null, true, true);\n\t\treturn resolve\n\t\t\t\t? res.resolveCrossings().reorient(\n\t\t\t\t\tres.getFillRule() === 'nonzero', true)\n\t\t\t\t: res;\n\t}\n\n\tfunction createResult(paths, simplify, path1, path2, options) {\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.addChildren(paths, true);\n\t\tresult = result.reduce({ simplify: simplify });\n\t\tif (!(options && options.insert == false)) {\n\t\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t\t&& path1.getIndex() < path2.getIndex() ? path2 : path1);\n\t\t}\n\t\tresult.copyAttributes(path1, true);\n\t\treturn result;\n\t}\n\n\tfunction traceBoolean(path1, path2, operation, options) {\n\t\tif (options && (options.trace == false || options.stroke) &&\n\t\t\t\t/^(subtract|intersect)$/.test(operation))\n\t\t\treturn splitBoolean(path1, path2, operation);\n\t\tvar _path1 = preparePath(path1, true),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true),\n\t\t\toperator = operators[operation];\n\t\toperator[operation] = true;\n\t\tif (_path2 && (operator.subtract || operator.exclude)\n\t\t\t\t^ (_path2.isClockwise() ^ _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tvar crossings = divideLocations(\n\t\t\t\tCurveLocation.expand(_path1.getCrossings(_path2))),\n\t\t\tpaths1 = _path1._children || [_path1],\n\t\t\tpaths2 = _path2 && (_path2._children || [_path2]),\n\t\t\tsegments = [],\n\t\t\tcurves = [],\n\t\t\tpaths;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tcurves.push.apply(curves, path.getCurves());\n\t\t\t\tpath._overlapsOnly = true;\n\t\t\t}\n\t\t}\n\n\t\tif (crossings.length) {\n\t\t\tcollect(paths1);\n\t\t\tif (paths2)\n\t\t\t\tcollect(paths2);\n\t\t\tfor (var i = 0, l = crossings.length; i < l; i++) {\n\t\t\t\tpropagateWinding(crossings[i]._segment, _path1, _path2, curves,\n\t\t\t\t\t\toperator);\n\t\t\t}\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar segment = segments[i],\n\t\t\t\t\tinter = segment._intersection;\n\t\t\t\tif (!segment._winding) {\n\t\t\t\t\tpropagateWinding(segment, _path1, _path2, curves, operator);\n\t\t\t\t}\n\t\t\t\tif (!(inter && inter._overlap))\n\t\t\t\t\tsegment._path._overlapsOnly = false;\n\t\t\t}\n\t\t\tpaths = tracePaths(segments, operator);\n\t\t} else {\n\t\t\tpaths = reorientPaths(\n\t\t\t\t\tpaths2 ? paths1.concat(paths2) : paths1.slice(),\n\t\t\t\t\tfunction(w) {\n\t\t\t\t\t\treturn !!operator[w];\n\t\t\t\t\t});\n\t\t}\n\n\t\treturn createResult(paths, true, path1, path2, options);\n\t}\n\n\tfunction splitBoolean(path1, path2, operation) {\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = preparePath(path2),\n\t\t\tcrossings = _path1.getCrossings(_path2),\n\t\t\tsubtract = operation === 'subtract',\n\t\t\tdivide = operation === 'divide',\n\t\t\tadded = {},\n\t\t\tpaths = [];\n\n\t\tfunction addPath(path) {\n\t\t\tif (!added[path._id] && (divide ||\n\t\t\t\t\t_path2.contains(path.getPointAt(path.getLength() / 2))\n\t\t\t\t\t\t^ subtract)) {\n\t\t\t\tpaths.unshift(path);\n\t\t\t\treturn added[path._id] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = crossings.length - 1; i >= 0; i--) {\n\t\t\tvar path = crossings[i].split();\n\t\t\tif (path) {\n\t\t\t\tif (addPath(path))\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t}\n\t\t}\n\t\taddPath(_path1);\n\t\treturn createResult(paths, false, path1, path2);\n\t}\n\n\tfunction linkIntersections(from, to) {\n\t\tvar prev = from;\n\t\twhile (prev) {\n\t\t\tif (prev === to)\n\t\t\t\treturn;\n\t\t\tprev = prev._previous;\n\t\t}\n\t\twhile (from._next && from._next !== to)\n\t\t\tfrom = from._next;\n\t\tif (!from._next) {\n\t\t\twhile (to._previous)\n\t\t\t\tto = to._previous;\n\t\t\tfrom._next = to;\n\t\t\tto._previous = from;\n\t\t}\n\t}\n\n\tfunction clearCurveHandles(curves) {\n\t\tfor (var i = curves.length - 1; i >= 0; i--)\n\t\t\tcurves[i].clearHandles();\n\t}\n\n\tfunction reorientPaths(paths, isInside, clockwise) {\n\t\tvar length = paths && paths.length;\n\t\tif (length) {\n\t\t\tvar lookup = Base.each(paths, function (path, i) {\n\t\t\t\t\tthis[path._id] = {\n\t\t\t\t\t\tcontainer: null,\n\t\t\t\t\t\twinding: path.isClockwise() ? 1 : -1,\n\t\t\t\t\t\tindex: i\n\t\t\t\t\t};\n\t\t\t\t}, {}),\n\t\t\t\tsorted = paths.slice().sort(function (a, b) {\n\t\t\t\t\treturn abs(b.getArea()) - abs(a.getArea());\n\t\t\t\t}),\n\t\t\t\tfirst = sorted[0];\n\t\t\tif (clockwise == null)\n\t\t\t\tclockwise = first.isClockwise();\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar path1 = sorted[i],\n\t\t\t\t\tentry1 = lookup[path1._id],\n\t\t\t\t\tpoint = path1.getInteriorPoint(),\n\t\t\t\t\tcontainerWinding = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tvar path2 = sorted[j];\n\t\t\t\t\tif (path2.contains(point)) {\n\t\t\t\t\t\tvar entry2 = lookup[path2._id];\n\t\t\t\t\t\tcontainerWinding = entry2.winding;\n\t\t\t\t\t\tentry1.winding += containerWinding;\n\t\t\t\t\t\tentry1.container = entry2.exclude ? entry2.container\n\t\t\t\t\t\t\t\t: path2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isInside(entry1.winding) === isInside(containerWinding)) {\n\t\t\t\t\tentry1.exclude = true;\n\t\t\t\t\tpaths[entry1.index] = null;\n\t\t\t\t} else {\n\t\t\t\t\tvar container = entry1.container;\n\t\t\t\t\tpath1.setClockwise(container ? !container.isClockwise()\n\t\t\t\t\t\t\t: clockwise);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\tfunction divideLocations(locations, include, clearLater) {\n\t\tvar results = include && [],\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tclearHandles = false,\n\t\t\tclearCurves = clearLater || [],\n\t\t\tclearLookup = clearLater && {},\n\t\t\trenormalizeLocs,\n\t\t\tprevCurve,\n\t\t\tprevTime;\n\n\t\tfunction getId(curve) {\n\t\t\treturn curve._path._id + '.' + curve._segment1._index;\n\t\t}\n\n\t\tfor (var i = (clearLater && clearLater.length) - 1; i >= 0; i--) {\n\t\t\tvar curve = clearLater[i];\n\t\t\tif (curve._path)\n\t\t\t\tclearLookup[getId(curve)] = true;\n\t\t}\n\n\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\tvar loc = locations[i],\n\t\t\t\ttime = loc._time,\n\t\t\t\torigTime = time,\n\t\t\t\texclude = include && !include(loc),\n\t\t\t\tcurve = loc._curve,\n\t\t\t\tsegment;\n\t\t\tif (curve) {\n\t\t\t\tif (curve !== prevCurve) {\n\t\t\t\t\tclearHandles = !curve.hasHandles()\n\t\t\t\t\t\t\t|| clearLookup && clearLookup[getId(curve)];\n\t\t\t\t\trenormalizeLocs = [];\n\t\t\t\t\tprevTime = null;\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t} else if (prevTime >= tMin) {\n\t\t\t\t\ttime /= prevTime;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (exclude) {\n\t\t\t\tif (renormalizeLocs)\n\t\t\t\t\trenormalizeLocs.push(loc);\n\t\t\t\tcontinue;\n\t\t\t} else if (include) {\n\t\t\t\tresults.unshift(loc);\n\t\t\t}\n\t\t\tprevTime = origTime;\n\t\t\tif (time < tMin) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (time > tMax) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else {\n\t\t\t\tvar newCurve = curve.divideAtTime(time, true);\n\t\t\t\tif (clearHandles)\n\t\t\t\t\tclearCurves.push(curve, newCurve);\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tfor (var j = renormalizeLocs.length - 1; j >= 0; j--) {\n\t\t\t\t\tvar l = renormalizeLocs[j];\n\t\t\t\t\tl._time = (l._time - time) / (1 - time);\n\t\t\t\t}\n\t\t\t}\n\t\t\tloc._setSegment(segment);\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tdest = loc._intersection;\n\t\t\tif (inter) {\n\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\tvar other = inter;\n\t\t\t\twhile (other) {\n\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\tother = other._next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegment._intersection = dest;\n\t\t\t}\n\t\t}\n\t\tif (!clearLater)\n\t\t\tclearCurveHandles(clearCurves);\n\t\treturn results || locations;\n\t}\n\n\tfunction getWinding(point, curves, dir, closed, dontFlip) {\n\t\tvar ia = dir ? 1 : 0,\n\t\t\tio = ia ^ 1,\n\t\t\tpv = [point.x, point.y],\n\t\t\tpa = pv[ia],\n\t\t\tpo = pv[io],\n\t\t\twindingEpsilon = 1e-9,\n\t\t\tqualityEpsilon = 1e-6,\n\t\t\tpaL = pa - windingEpsilon,\n\t\t\tpaR = pa + windingEpsilon,\n\t\t\twindingL = 0,\n\t\t\twindingR = 0,\n\t\t\tpathWindingL = 0,\n\t\t\tpathWindingR = 0,\n\t\t\tonPath = false,\n\t\t\tonAnyPath = false,\n\t\t\tquality = 1,\n\t\t\troots = [],\n\t\t\tvPrev,\n\t\t\tvClose;\n\n\t\tfunction addWinding(v) {\n\t\t\tvar o0 = v[io + 0],\n\t\t\t\to3 = v[io + 6];\n\t\t\tif (po < min(o0, o3) || po > max(o0, o3)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar a0 = v[ia + 0],\n\t\t\t\ta1 = v[ia + 2],\n\t\t\t\ta2 = v[ia + 4],\n\t\t\t\ta3 = v[ia + 6];\n\t\t\tif (o0 === o3) {\n\t\t\t\tif (a0 < paR && a3 > paL || a3 < paR && a0 > paL) {\n\t\t\t\t\tonPath = true;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar t =   po === o0 ? 0\n\t\t\t\t\t: po === o3 ? 1\n\t\t\t\t\t: paL > max(a0, a1, a2, a3) || paR < min(a0, a1, a2, a3)\n\t\t\t\t\t? 1\n\t\t\t\t\t: Curve.solveCubic(v, io, po, roots, 0, 1) > 0\n\t\t\t\t\t\t? roots[0]\n\t\t\t\t\t\t: 1,\n\t\t\t\ta =   t === 0 ? a0\n\t\t\t\t\t: t === 1 ? a3\n\t\t\t\t\t: Curve.getPoint(v, t)[dir ? 'y' : 'x'],\n\t\t\t\twinding = o0 > o3 ? 1 : -1,\n\t\t\t\twindingPrev = vPrev[io] > vPrev[io + 6] ? 1 : -1,\n\t\t\t\ta3Prev = vPrev[ia + 6];\n\t\t\tif (po !== o0) {\n\t\t\t\tif (a < paL) {\n\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t} else if (a > paR) {\n\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t} else {\n\t\t\t\t\tonPath = true;\n\t\t\t\t}\n\t\t\t\tif (a > pa - qualityEpsilon && a < pa + qualityEpsilon)\n\t\t\t\t\tquality /= 2;\n\t\t\t} else {\n\t\t\t\tif (winding !== windingPrev) {\n\t\t\t\t\tif (a0 < paL) {\n\t\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t\t} else if (a0 > paR) {\n\t\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t\t}\n\t\t\t\t} else if (a0 != a3Prev) {\n\t\t\t\t\tif (a3Prev < paR && a > paR) {\n\t\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t\t\tonPath = true;\n\t\t\t\t\t} else if (a3Prev > paL && a < paL) {\n\t\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t\t\tonPath = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tquality = 0;\n\t\t\t}\n\t\t\tvPrev = v;\n\t\t\treturn !dontFlip && a > paL && a < paR\n\t\t\t\t\t&& Curve.getTangent(v, t)[dir ? 'x' : 'y'] === 0\n\t\t\t\t\t&& getWinding(point, curves, !dir, closed, true);\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tvar o0 = v[io + 0],\n\t\t\t\to1 = v[io + 2],\n\t\t\t\to2 = v[io + 4],\n\t\t\t\to3 = v[io + 6];\n\t\t\tif (po <= max(o0, o1, o2, o3) && po >= min(o0, o1, o2, o3)) {\n\t\t\t\tvar a0 = v[ia + 0],\n\t\t\t\t\ta1 = v[ia + 2],\n\t\t\t\t\ta2 = v[ia + 4],\n\t\t\t\t\ta3 = v[ia + 6],\n\t\t\t\t\tmonoCurves = paL > max(a0, a1, a2, a3) ||\n\t\t\t\t\t\t\t\t paR < min(a0, a1, a2, a3)\n\t\t\t\t\t\t\t? [v] : Curve.getMonoCurves(v, dir),\n\t\t\t\t\tres;\n\t\t\t\tfor (var i = 0, l = monoCurves.length; i < l; i++) {\n\t\t\t\t\tif (res = addWinding(monoCurves[i]))\n\t\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar curve = curves[i],\n\t\t\t\tpath = curve._path,\n\t\t\t\tv = curve.getValues(),\n\t\t\t\tres;\n\t\t\tif (!i || curves[i - 1]._path !== path) {\n\t\t\t\tvPrev = null;\n\t\t\t\tif (!path._closed) {\n\t\t\t\t\tvClose = Curve.getValues(\n\t\t\t\t\t\t\tpath.getLastCurve().getSegment2(),\n\t\t\t\t\t\t\tcurve.getSegment1(),\n\t\t\t\t\t\t\tnull, !closed);\n\t\t\t\t\tif (vClose[io] !== vClose[io + 6]) {\n\t\t\t\t\t\tvPrev = vClose;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!vPrev) {\n\t\t\t\t\tvPrev = v;\n\t\t\t\t\tvar prev = path.getLastCurve();\n\t\t\t\t\twhile (prev && prev !== curve) {\n\t\t\t\t\t\tvar v2 = prev.getValues();\n\t\t\t\t\t\tif (v2[io] !== v2[io + 6]) {\n\t\t\t\t\t\t\tvPrev = v2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprev = prev.getPrevious();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (res = handleCurve(v))\n\t\t\t\treturn res;\n\n\t\t\tif (i + 1 === l || curves[i + 1]._path !== path) {\n\t\t\t\tif (vClose && (res = handleCurve(vClose)))\n\t\t\t\t\treturn res;\n\t\t\t\tif (onPath && !pathWindingL && !pathWindingR) {\n\t\t\t\t\tpathWindingL = pathWindingR = path.isClockwise(closed) ^ dir\n\t\t\t\t\t\t\t? 1 : -1;\n\t\t\t\t}\n\t\t\t\twindingL += pathWindingL;\n\t\t\t\twindingR += pathWindingR;\n\t\t\t\tpathWindingL = pathWindingR = 0;\n\t\t\t\tif (onPath) {\n\t\t\t\t\tonAnyPath = true;\n\t\t\t\t\tonPath = false;\n\t\t\t\t}\n\t\t\t\tvClose = null;\n\t\t\t}\n\t\t}\n\t\twindingL = abs(windingL);\n\t\twindingR = abs(windingR);\n\t\treturn {\n\t\t\twinding: max(windingL, windingR),\n\t\t\twindingL: windingL,\n\t\t\twindingR: windingR,\n\t\t\tquality: quality,\n\t\t\tonPath: onAnyPath\n\t\t};\n\t}\n\n\tfunction propagateWinding(segment, path1, path2, curves, operator) {\n\t\tvar chain = [],\n\t\t\tstart = segment,\n\t\t\ttotalLength = 0,\n\t\t\twinding;\n\t\tdo {\n\t\t\tvar curve = segment.getCurve(),\n\t\t\t\tlength = curve.getLength();\n\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\ttotalLength += length;\n\t\t\tsegment = segment.getNext();\n\t\t} while (segment && !segment._intersection && segment !== start);\n\t\tvar offsets = [0.5, 0.25, 0.75],\n\t\t\twinding = { winding: 0, quality: -1 },\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0; i < offsets.length && winding.quality < 0.5; i++) {\n\t\t\tvar length = totalLength * offsets[i];\n\t\t\tfor (var j = 0, l = chain.length; j < l; j++) {\n\t\t\t\tvar entry = chain[j],\n\t\t\t\t\tcurveLength = entry.length;\n\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\tvar curve = entry.curve,\n\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\toperand = parent instanceof CompoundPath ? parent : path,\n\t\t\t\t\t\tt = Numerical.clamp(curve.getTimeAt(length), tMin, tMax),\n\t\t\t\t\t\tpt = curve.getPointAtTime(t),\n\t\t\t\t\t\tdir = abs(curve.getTangentAtTime(t).y) < Math.SQRT1_2;\n\t\t\t\t\tvar wind = !(operator.subtract && path2 && (\n\t\t\t\t\t\t\toperand === path1 &&\n\t\t\t\t\t\t\t\tpath2._getWinding(pt, dir, true).winding ||\n\t\t\t\t\t\t\toperand === path2 &&\n\t\t\t\t\t\t\t\t!path1._getWinding(pt, dir, true).winding))\n\t\t\t\t\t\t\t? getWinding(pt, curves, dir, true)\n\t\t\t\t\t\t\t: { winding: 0, quality: 1 };\n\t\t\t\t\tif (wind.quality > winding.quality)\n\t\t\t\t\t\twinding = wind;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlength -= curveLength;\n\t\t\t}\n\t\t}\n\t\tfor (var j = chain.length - 1; j >= 0; j--) {\n\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t}\n\n\tfunction tracePaths(segments, operator) {\n\t\tvar paths = [],\n\t\t\tstarts;\n\n\t\tfunction isValid(seg) {\n\t\t\tvar winding;\n\t\t\treturn !!(seg && !seg._visited && (!operator\n\t\t\t\t\t|| operator[(winding = seg._winding || {}).winding]\n\t\t\t\t\t\t&& !(operator.unite && winding.winding === 2\n\t\t\t\t\t\t\t&& winding.windingL && winding.windingR)));\n\t\t}\n\n\t\tfunction isStart(seg) {\n\t\t\tif (seg) {\n\t\t\t\tfor (var i = 0, l = starts.length; i < l; i++) {\n\t\t\t\t\tif (seg === starts[i])\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction visitPath(path) {\n\t\t\tvar segments = path._segments;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tsegments[i]._visited = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction getCrossingSegments(segment, collectStarts) {\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tstart = inter,\n\t\t\t\tcrossings = [];\n\t\t\tif (collectStarts)\n\t\t\t\tstarts = [segment];\n\n\t\t\tfunction collect(inter, end) {\n\t\t\t\twhile (inter && inter !== end) {\n\t\t\t\t\tvar other = inter._segment,\n\t\t\t\t\t\tpath = other && other._path;\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tvar next = other.getNext() || path.getFirstSegment(),\n\t\t\t\t\t\t\tnextInter = next._intersection;\n\t\t\t\t\t\tif (other !== segment && (isStart(other)\n\t\t\t\t\t\t\t|| isStart(next)\n\t\t\t\t\t\t\t|| next && (isValid(other) && (isValid(next)\n\t\t\t\t\t\t\t\t|| nextInter && isValid(nextInter._segment))))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcrossings.push(other);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (collectStarts)\n\t\t\t\t\t\t\tstarts.push(other);\n\t\t\t\t\t}\n\t\t\t\t\tinter = inter._next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (inter) {\n\t\t\t\tcollect(inter);\n\t\t\t\twhile (inter && inter._prev)\n\t\t\t\t\tinter = inter._prev;\n\t\t\t\tcollect(inter, start);\n\t\t\t}\n\t\t\treturn crossings;\n\t\t}\n\n\t\tsegments.sort(function(seg1, seg2) {\n\t\t\tvar inter1 = seg1._intersection,\n\t\t\t\tinter2 = seg2._intersection,\n\t\t\t\tover1 = !!(inter1 && inter1._overlap),\n\t\t\t\tover2 = !!(inter2 && inter2._overlap),\n\t\t\t\tpath1 = seg1._path,\n\t\t\t\tpath2 = seg2._path;\n\t\t\treturn over1 ^ over2\n\t\t\t\t\t? over1 ? 1 : -1\n\t\t\t\t\t: !inter1 ^ !inter2\n\t\t\t\t\t\t? inter1 ? 1 : -1\n\t\t\t\t\t\t: path1 !== path2\n\t\t\t\t\t\t\t? path1._id - path2._id\n\t\t\t\t\t\t\t: seg1._index - seg2._index;\n\t\t});\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar seg = segments[i],\n\t\t\t\tvalid = isValid(seg),\n\t\t\t\tpath = null,\n\t\t\t\tfinished = false,\n\t\t\t\tclosed = true,\n\t\t\t\tbranches = [],\n\t\t\t\tbranch,\n\t\t\t\tvisited,\n\t\t\t\thandleIn;\n\t\t\tif (valid && seg._path._overlapsOnly) {\n\t\t\t\tvar path1 = seg._path,\n\t\t\t\t\tpath2 = seg._intersection._segment._path;\n\t\t\t\tif (path1.compare(path2)) {\n\t\t\t\t\tif (path1.getArea())\n\t\t\t\t\t\tpaths.push(path1.clone(false));\n\t\t\t\t\tvisitPath(path1);\n\t\t\t\t\tvisitPath(path2);\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (valid) {\n\t\t\t\tvar first = !path,\n\t\t\t\t\tcrossings = getCrossingSegments(seg, first),\n\t\t\t\t\tother = crossings.shift(),\n\t\t\t\t\tfinished = !first && (isStart(seg) || isStart(other)),\n\t\t\t\t\tcross = !finished && other;\n\t\t\t\tif (first) {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tbranch = null;\n\t\t\t\t}\n\t\t\t\tif (finished) {\n\t\t\t\t\tif (seg.isFirst() || seg.isLast())\n\t\t\t\t\t\tclosed = seg._path._closed;\n\t\t\t\t\tseg._visited = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (cross && branch) {\n\t\t\t\t\tbranches.push(branch);\n\t\t\t\t\tbranch = null;\n\t\t\t\t}\n\t\t\t\tif (!branch) {\n\t\t\t\t\tif (cross)\n\t\t\t\t\t\tcrossings.push(seg);\n\t\t\t\t\tbranch = {\n\t\t\t\t\t\tstart: path._segments.length,\n\t\t\t\t\t\tcrossings: crossings,\n\t\t\t\t\t\tvisited: visited = [],\n\t\t\t\t\t\thandleIn: handleIn\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (cross)\n\t\t\t\t\tseg = other;\n\t\t\t\tif (!isValid(seg)) {\n\t\t\t\t\tpath.removeSegments(branch.start);\n\t\t\t\t\tfor (var j = 0, k = visited.length; j < k; j++) {\n\t\t\t\t\t\tvisited[j]._visited = false;\n\t\t\t\t\t}\n\t\t\t\t\tvisited.length = 0;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tseg = branch && branch.crossings.shift();\n\t\t\t\t\t\tif (!seg || !seg._path) {\n\t\t\t\t\t\t\tseg = null;\n\t\t\t\t\t\t\tbranch = branches.pop();\n\t\t\t\t\t\t\tif (branch) {\n\t\t\t\t\t\t\t\tvisited = branch.visited;\n\t\t\t\t\t\t\t\thandleIn = branch.handleIn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (branch && !isValid(seg));\n\t\t\t\t\tif (!seg)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvar next = seg.getNext();\n\t\t\t\tpath.add(new Segment(seg._point, handleIn,\n\t\t\t\t\t\tnext && seg._handleOut));\n\t\t\t\tseg._visited = true;\n\t\t\t\tvisited.push(seg);\n\t\t\t\tseg = next || seg._path.getFirstSegment();\n\t\t\t\thandleIn = next && next._handleIn;\n\t\t\t}\n\t\t\tif (finished) {\n\t\t\t\tif (closed) {\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(handleIn);\n\t\t\t\t\tpath.setClosed(closed);\n\t\t\t\t}\n\t\t\t\tif (path.getArea() !== 0) {\n\t\t\t\t\tpaths.push(path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, dir, closed) {\n\t\t\treturn getWinding(point, this.getCurves(), dir, closed);\n\t\t},\n\n\t\tunite: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'unite', options);\n\t\t},\n\n\t\tintersect: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'intersect', options);\n\t\t},\n\n\t\tsubtract: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'subtract', options);\n\t\t},\n\n\t\texclude: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'exclude', options);\n\t\t},\n\n\t\tdivide: function(path, options) {\n\t\t\treturn options && (options.trace == false || options.stroke)\n\t\t\t\t\t? splitBoolean(this, path, 'divide')\n\t\t\t\t\t: createResult([\n\t\t\t\t\t\tthis.subtract(path, options),\n\t\t\t\t\t\tthis.intersect(path, options)\n\t\t\t\t\t], true, this, path, options);\n\t\t},\n\n\t\tresolveCrossings: function() {\n\t\t\tvar children = this._children,\n\t\t\t\tpaths = children || [this];\n\n\t\t\tfunction hasOverlap(seg, path) {\n\t\t\t\tvar inter = seg && seg._intersection;\n\t\t\t\treturn inter && inter._overlap && inter._path === path;\n\t\t\t}\n\n\t\t\tvar hasOverlaps = false,\n\t\t\t\thasCrossings = false,\n\t\t\t\tintersections = this.getIntersections(null, function(inter) {\n\t\t\t\t\treturn inter.hasOverlap() && (hasOverlaps = true) ||\n\t\t\t\t\t\t\tinter.isCrossing() && (hasCrossings = true);\n\t\t\t\t}),\n\t\t\t\tclearCurves = hasOverlaps && hasCrossings && [];\n\t\t\tintersections = CurveLocation.expand(intersections);\n\t\t\tif (hasOverlaps) {\n\t\t\t\tvar overlaps = divideLocations(intersections, function(inter) {\n\t\t\t\t\treturn inter.hasOverlap();\n\t\t\t\t}, clearCurves);\n\t\t\t\tfor (var i = overlaps.length - 1; i >= 0; i--) {\n\t\t\t\t\tvar overlap = overlaps[i],\n\t\t\t\t\t\tpath = overlap._path,\n\t\t\t\t\t\tseg = overlap._segment,\n\t\t\t\t\t\tprev = seg.getPrevious(),\n\t\t\t\t\t\tnext = seg.getNext();\n\t\t\t\t\tif (hasOverlap(prev, path) && hasOverlap(next, path)) {\n\t\t\t\t\t\tseg.remove();\n\t\t\t\t\t\tprev._handleOut._set(0, 0);\n\t\t\t\t\t\tnext._handleIn._set(0, 0);\n\t\t\t\t\t\tif (prev !== seg && !prev.getCurve().hasLength()) {\n\t\t\t\t\t\t\tnext._handleIn.set(prev._handleIn);\n\t\t\t\t\t\t\tprev.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasCrossings) {\n\t\t\t\tdivideLocations(intersections, hasOverlaps && function(inter) {\n\t\t\t\t\tvar curve1 = inter.getCurve(),\n\t\t\t\t\t\tseg1 = inter.getSegment(),\n\t\t\t\t\t\tother = inter._intersection,\n\t\t\t\t\t\tcurve2 = other._curve,\n\t\t\t\t\t\tseg2 = other._segment;\n\t\t\t\t\tif (curve1 && curve2 && curve1._path && curve2._path)\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif (seg1)\n\t\t\t\t\t\tseg1._intersection = null;\n\t\t\t\t\tif (seg2)\n\t\t\t\t\t\tseg2._intersection = null;\n\t\t\t\t}, clearCurves);\n\t\t\t\tif (clearCurves)\n\t\t\t\t\tclearCurveHandles(clearCurves);\n\t\t\t\tpaths = tracePaths(Base.each(paths, function(path) {\n\t\t\t\t\tthis.push.apply(this, path._segments);\n\t\t\t\t}, []));\n\t\t\t}\n\t\t\tvar length = paths.length,\n\t\t\t\titem;\n\t\t\tif (length > 1 && children) {\n\t\t\t\tif (paths !== children)\n\t\t\t\t\tthis.setChildren(paths);\n\t\t\t\titem = this;\n\t\t\t} else if (length === 1 && !children) {\n\t\t\t\tif (paths[0] !== this)\n\t\t\t\t\tthis.setSegments(paths[0].removeSegments());\n\t\t\t\titem = this;\n\t\t\t}\n\t\t\tif (!item) {\n\t\t\t\titem = new CompoundPath(Item.NO_INSERT);\n\t\t\t\titem.addChildren(paths);\n\t\t\t\titem = item.reduce();\n\t\t\t\titem.copyAttributes(this);\n\t\t\t\tthis.replaceWith(item);\n\t\t\t}\n\t\t\treturn item;\n\t\t},\n\n\t\treorient: function(nonZero, clockwise) {\n\t\t\tvar children = this._children;\n\t\t\tif (children && children.length) {\n\t\t\t\tthis.setChildren(reorientPaths(this.removeChildren(),\n\t\t\t\t\t\tfunction(w) {\n\t\t\t\t\t\t\treturn !!(nonZero ? w : w & 1);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclockwise));\n\t\t\t} else if (clockwise !== undefined) {\n\t\t\t\tthis.setClockwise(clockwise);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\tgetInteriorPoint: function() {\n\t\t\tvar bounds = this.getBounds(),\n\t\t\t\tpoint = bounds.getCenter(true);\n\t\t\tif (!this.contains(point)) {\n\t\t\t\tvar curves = this.getCurves(),\n\t\t\t\t\ty = point.y,\n\t\t\t\t\tintercepts = [],\n\t\t\t\t\troots = [];\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\t\tvar v = curves[i].getValues(),\n\t\t\t\t\t\to0 = v[1],\n\t\t\t\t\t\to1 = v[3],\n\t\t\t\t\t\to2 = v[5],\n\t\t\t\t\t\to3 = v[7];\n\t\t\t\t\tif (y >= min(o0, o1, o2, o3) && y <= max(o0, o1, o2, o3)) {\n\t\t\t\t\t\tvar monoCurves = Curve.getMonoCurves(v);\n\t\t\t\t\t\tfor (var j = 0, m = monoCurves.length; j < m; j++) {\n\t\t\t\t\t\t\tvar mv = monoCurves[j],\n\t\t\t\t\t\t\t\tmo0 = mv[1],\n\t\t\t\t\t\t\t\tmo3 = mv[7];\n\t\t\t\t\t\t\tif ((mo0 !== mo3) &&\n\t\t\t\t\t\t\t\t(y >= mo0 && y <= mo3 || y >= mo3 && y <= mo0)){\n\t\t\t\t\t\t\t\tvar x = y === mo0 ? mv[0]\n\t\t\t\t\t\t\t\t\t: y === mo3 ? mv[6]\n\t\t\t\t\t\t\t\t\t: Curve.solveCubic(mv, 1, y, roots, 0, 1)\n\t\t\t\t\t\t\t\t\t\t=== 1\n\t\t\t\t\t\t\t\t\t\t? Curve.getPoint(mv, roots[0]).x\n\t\t\t\t\t\t\t\t\t\t: (mv[0] + mv[6]) / 2;\n\t\t\t\t\t\t\t\tintercepts.push(x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (intercepts.length > 1) {\n\t\t\t\t\tintercepts.sort(function(a, b) { return a - b; });\n\t\t\t\t\tpoint.x = (intercepts[0] + intercepts[1]) / 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn point;\n\t\t}\n\t};\n});\n\nvar PathFlattener = Base.extend({\n\t_class: 'PathFlattener',\n\n\tinitialize: function(path, flatness, maxRecursion, ignoreStraight, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminSpan = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, t1, t2) {\n\t\t\tif ((t2 - t1) > minSpan\n\t\t\t\t\t&& !(ignoreStraight && Curve.isStraight(curve))\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, flatness || 0.25)) {\n\t\t\t\tvar halves = Curve.subdivide(curve, 0.5),\n\t\t\t\t\ttMid = (t1 + t2) / 2;\n\t\t\t\tcomputeParts(halves[0], index, t1, tMid);\n\t\t\t\tcomputeParts(halves[1], index, tMid, t2);\n\t\t\t} else {\n\t\t\t\tvar dx = curve[6] - curve[0],\n\t\t\t\t\tdy = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tif (dist > 0) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tcurve: curve,\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\ttime: t2,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\t_get: function(offset) {\n\t\tvar parts = this.parts,\n\t\t\tlength = parts.length,\n\t\t\tstart,\n\t\t\ti, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (!j || parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (; i < length; i++) {\n\t\t\tvar part = parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = parts[i - 1],\n\t\t\t\t\tprevTime = prev && prev.index === part.index ? prev.time : 0,\n\t\t\t\t\tprevOffset = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tindex: part.index,\n\t\t\t\t\ttime: prevTime + (part.time - prevTime)\n\t\t\t\t\t\t* (offset - prevOffset) / (part.offset - prevOffset)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tindex: parts[length - 1].index,\n\t\t\ttime: 1\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tvar start = this._get(from),\n\t\t\tend = this._get(to);\n\t\tfor (var i = start.index, l = end.index; i <= l; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti === start.index ? start.time : 0,\n\t\t\t\t\ti === end.index ? end.time : 1);\n\t\t\tif (i === start.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve._evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\tvar param = this._get(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.time);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tclosed = path._closed;\n\t\tfor (var i = 0, prev, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point;\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(prev = point.clone());\n\t\t\t}\n\t\t}\n\t\tif (closed) {\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\t\tthis.closed = closed;\n\t},\n\n\tfit: function(error) {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = null;\n\t\tif (length > 0) {\n\t\t\tsegments = [new Segment(points[0])];\n\t\t\tif (length > 1) {\n\t\t\t\tthis.fitCubic(segments, error, 0, length - 1,\n\t\t\t\t\t\tpoints[1].subtract(points[0]),\n\t\t\t\t\t\tpoints[length - 2].subtract(points[length - 1]));\n\t\t\t\tif (this.closed) {\n\t\t\t\t\tsegments.shift();\n\t\t\t\t\tsegments.pop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(segments, error, first, last, tan1, tan2) {\n\t\tvar points = this.points;\n\t\tif (last - first === 1) {\n\t\t\tvar pt1 = points[first],\n\t\t\t\tpt2 = points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve(segments, [pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(error, error * error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < error && parametersInOrder) {\n\t\t\t\tthis.addCurve(segments, curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar tanCenter = points[split - 1].subtract(points[split + 1]);\n\t\tthis.fitCubic(segments, error, first, split, tan1, tanCenter);\n\t\tthis.fitCubic(segments, error, split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(segments, curve) {\n\t\tvar prev = segments[segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tsegments.push(new Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tabs = Math.abs,\n\t\t\tpoints = this.points,\n\t\t\tpt1 = points[first],\n\t\t\tpt2 = points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1,\n\t\t\talpha2;\n\t\tif (abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X = C[0][0] * X[1]    - C[1][0] * X[0],\n\t\t\t\tdetXC1 = X[0]    * C[1][1] - X[1]    * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\talpha1 = alpha2 = abs(c0) > epsilon ? X[0] / c0\n\t\t\t\t\t\t\t: abs(c1) > epsilon ? X[1] / c1\n\t\t\t\t\t\t\t: 0;\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1,\n\t\t\t\tpt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)),\n\t\t\t\tpt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\treturn Numerical.isZero(df) ? u : u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsOptions: { stroke: false, handle: false },\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setContent(source._content);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx, param, viewMatrix) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\tvar lines = this._lines,\n\t\t\tstyle = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar rect = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(rect, rect) : rect;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else if (window) {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t} else {\n\t\t\tcomponents = [0, 0, 0];\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:   ( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:            (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:   ( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:            (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar args = arguments,\n\t\t\t\treading = this.__read,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (reading)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = Base.slice(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (reading) {\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = Base.slice(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && !i && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (reading && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (reading)\n\t\t\t\tthis.__read = read;\n\t\t\treturn this;\n\t\t},\n\n\t\tset: '#initialize',\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this.getAlpha() === col.getAlpha()\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx, matrix) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\thighlight = components[3],\n\t\t\t\tinverse = matrix && matrix.inverted(),\n\t\t\t\tcanvasGradient;\n\t\t\tif (inverse) {\n\t\t\t\torigin = inverse._transformPoint(origin);\n\t\t\t\tdestination = inverse._transformPoint(destination);\n\t\t\t\tif (highlight)\n\t\t\t\t\thighlight = inverse._transformPoint(highlight);\n\t\t\t}\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin);\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\toffset = stop._offset;\n\t\t\t\tcanvasGradient.addColorStop(\n\t\t\t\t\t\toffset == null ? i / (l - 1) : offset,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n},\nnew function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && Base.isPlainObject(stops)) {\n\t\t\tthis.set(stops);\n\t\t\tstops = radial = null;\n\t\t}\n\t\tif (this._stops == null) {\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\t}\n\t\tif (this._radial == null) {\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t\t}\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++) {\n\t\t\tthis._owners[i]._changed();\n\t\t}\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (!this._owners.length)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tstops[i] = this._stops[i].clone();\n\t\t}\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (stops.length < 2) {\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\t}\n\t\tvar _stops = this._stops;\n\t\tif (_stops) {\n\t\t\tfor (var i = 0, l = _stops.length; i < l; i++)\n\t\t\t\t_stops[i]._owner = undefined;\n\t\t}\n\t\t_stops = this._stops = GradientStop.readList(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = _stops.length; i < l; i++)\n\t\t\t_stops[i]._owner = this;\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class) {\n\t\t\tvar stops1 = this._stops,\n\t\t\t\tstops2 = gradient._stops,\n\t\t\t\tlength = stops1.length;\n\t\t\tif (length === stops2.length) {\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tif (!stops1[i].equals(stops2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tvar color = arg0,\n\t\t\toffset = arg1;\n\t\tif (typeof arg0 === 'object' && arg1 === undefined) {\n\t\t\tif (Array.isArray(arg0) && typeof arg0[0] !== 'number') {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\toffset = arg0[1];\n\t\t\t} else if ('color' in arg0 || 'offset' in arg0\n\t\t\t\t\t|| 'rampPoint' in arg0) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\toffset = arg0.offset || arg0.rampPoint || 0;\n\t\t\t}\n\t\t}\n\t\tthis.setColor(color);\n\t\tthis.setOffset(offset);\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._offset);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar color = this._color,\n\t\t\toffset = this._offset;\n\t\treturn Base.serialize(offset == null ? [color] : [color, offset],\n\t\t\t\toptions, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetOffset: function() {\n\t\treturn this._offset;\n\t},\n\n\tsetOffset: function(offset) {\n\t\tthis._offset = offset;\n\t\tthis._changed();\n\t},\n\n\tgetRampPoint: '#getOffset',\n\tsetRampPoint: '#setOffset',\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function() {\n\t\tvar color = Color.read(arguments, 0, { clone: true });\n\t\tif (color)\n\t\t\tcolor._owner = this;\n\t\tthis._color = color;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._offset == stop._offset\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar itemDefaults = {\n\t\tfillColor: null,\n\t\tfillRule: 'nonzero',\n\t\tstrokeColor: null,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\tshadowColor: null,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: null\n\t},\n\tgroupDefaults = Base.set({}, itemDefaults, {\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tleading: null,\n\t\tjustification: 'left'\n\t}),\n\ttextDefaults = Base.set({}, groupDefaults, {\n\t\tfillColor: new Color()\n\t}),\n\tflags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t},\n\titem = {\n\t\tbeans: true\n\t},\n\tfields = {\n\t\t_class: 'Style',\n\t\tbeans: true,\n\n\t\tinitialize: function Style(style, _owner, _project) {\n\t\t\tthis._values = {};\n\t\t\tthis._owner = _owner;\n\t\t\tthis._project = _owner && _owner._project || _project\n\t\t\t\t\t|| paper.project;\n\t\t\tthis._defaults = !_owner || _owner instanceof Group ? groupDefaults\n\t\t\t\t\t: _owner instanceof TextItem ? textDefaults\n\t\t\t\t\t: itemDefaults;\n\t\t\tif (style)\n\t\t\t\tthis.set(style);\n\t\t}\n\t};\n\n\tBase.each(groupDefaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else if (key in this._defaults) {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old && old._owner !== undefined)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (key in this._defaults && (!children || !children.length\n\t\t\t\t\t|| _dontMerge || owner instanceof CompoundPath)) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (children) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\t\tif (!i) {\n\t\t\t\t\t\tvalue = childValue;\n\t\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tBase.each({\n\t\tFont: 'FontFamily',\n\t\tWindingRule: 'FillRule'\n\t}, function(value, key) {\n\t\tvar get = 'get' + key,\n\t\t\tset = 'set' + key;\n\t\tfields[get] = item[get] = '#get' + value;\n\t\tfields[set] = item[set] = '#set' + value;\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\tfunction compare(style1, style2, secondary) {\n\t\t\tvar values1 = style1._values,\n\t\t\t\tvalues2 = style2._values,\n\t\t\t\tdefaults2 = style2._defaults;\n\t\t\tfor (var key in values1) {\n\t\t\t\tvar value1 = values1[key],\n\t\t\t\t\tvalue2 = values2[key];\n\t\t\t\tif (!(secondary && key in values2) && !Base.equals(value1,\n\t\t\t\t\t\tvalue2 === undefined ? defaults2[key] : value2))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& compare(this, style)\n\t\t\t\t&& compare(style, this, true)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\tvar color = this.getFillColor();\n\t\treturn !!color && color.alpha > 0;\n\t},\n\n\thasStroke: function() {\n\t\tvar color = this.getStrokeColor();\n\t\treturn !!color && color.alpha > 0 && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\tvar color = this.getShadowColor();\n\t\treturn !!color && color.alpha > 0 && (this.getShadowBlur() > 0\n\t\t\t\t|| !this.getShadowOffset().isZero());\n\t},\n\n\tgetView: function() {\n\t\treturn this._project._view;\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tisInserted: function(el) {\n\t\t\treturn document.body.contains(el);\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn el && handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tif (el) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t\t}\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tif (el) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t\t}\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\ttimer;\n\n\tfunction handleCallbacks() {\n\t\tvar functions = callbacks;\n\t\tcallbacks = [];\n\t\tfor (var i = 0, l = functions.length; i < l; i++)\n\t\t\tfunctions[i]();\n\t\trequested = nativeRequest && callbacks.length;\n\t\tif (requested)\n\t\t\tnativeRequest(handleCallbacks);\n\t}\n\n\treturn function(callback) {\n\t\tcallbacks.push(callback);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t}\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t}\n\n\t\tvar size;\n\t\tif (window && element) {\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserDrag: none,\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsize = getCanvasSize();\n\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\t\t} else {\n\t\t\tsize = new Size(element);\n\t\t\telement = null;\n\t\t}\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window && window.devicePixelRatio || 1;\n\t\tthis._setElementSize(size.width, size.height);\n\t\tthis._viewSize = size;\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t\tthis._itemEvents = { native: {}, virtual: {} };\n\t\tthis._autoUpdate = !paper.agent.node;\n\t\tthis._needsUpdate = false;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tvar project = this._project;\n\t\tif (project._view === this)\n\t\t\tproject._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: Base.each(\n\t\tItem._itemHandlers.concat(['onResize', 'onKeyDown', 'onKeyUp']),\n\t\tfunction(name) {\n\t\t\tthis[name] = {};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.play();\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t),\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\tgetAutoUpdate: function() {\n\t\treturn this._autoUpdate;\n\t},\n\n\tsetAutoUpdate: function(autoUpdate) {\n\t\tthis._autoUpdate = autoUpdate;\n\t\tif (autoUpdate)\n\t\t\tthis.requestUpdate();\n\t},\n\n\tupdate: function() {\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\trequestUpdate: function() {\n\t\tif (!this._requested) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\t\tthat._requested = false;\n\t\t\t\tif (that._animate) {\n\t\t\t\t\tthat.requestUpdate();\n\t\t\t\t\tvar element = that._element;\n\t\t\t\t\tif ((!DomElement.getPrefixed(document, 'hidden')\n\t\t\t\t\t\t\t|| PaperScope.getAttribute(element, 'keepalive')\n\t\t\t\t\t\t\t\t=== 'true') && DomElement.isInView(element)) {\n\t\t\t\t\t\tthat._handleFrame();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (that._autoUpdate)\n\t\t\t\t\tthat.update();\n\t\t\t});\n\t\t\tthis._requested = true;\n\t\t}\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tthis.requestUpdate();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._last ? now - this._last : 0;\n\t\tthis._last = now;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._project._changed(2049);\n\t\tthis._bounds = this._decomposed = undefined;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._setElementSize(size.width, size.height);\n\t\tthis._viewSize.set(size);\n\t\tthis._changed();\n\t\tthis.emit('resize', { size: size, delta: delta });\n\t\tif (this._autoUpdate) {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_setElementSize: function(width, height) {\n\t\tvar element = this._element;\n\t\tif (element) {\n\t\t\tif (element.width !== width)\n\t\t\t\telement.width = width;\n\t\t\tif (element.height !== height)\n\t\t\t\telement.height = height;\n\t\t}\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tisInserted: function() {\n\t\treturn DomElement.isInserted(this._element);\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixels;\n\t\tif (element) {\n\t\t\tvar parent = element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tpixels = parseFloat(pixels);\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\treturn 0;\n\t}\n}, Base.each(['rotate', 'scale', 'shear', 'skew'], function(key) {\n\tvar rotate = key === 'rotate';\n\tthis[key] = function() {\n\t\tvar value = (rotate ? Base : Point).read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[key](value,\n\t\t\t\tcenter || this.getCenter(true)));\n\t};\n}, {\n\t_decompose: function() {\n\t\treturn this._decomposed || (this._decomposed = this._matrix.decompose());\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.translate(this.getCenter().subtract(center));\n\t},\n\n\tgetZoom: function() {\n\t\tvar decomposed = this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling;\n\t\treturn scaling ? (scaling.x + scaling.y) / 2 : 0;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis.transform(new Matrix().scale(zoom / this.getZoom(),\n\t\t\tthis.getCenter()));\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tthis.rotate(rotation - current);\n\t\t}\n\t},\n\n\tgetScaling: function() {\n\t\tvar decomposed = this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling;\n\t\treturn scaling\n\t\t\t\t? new LinkedPoint(scaling.x, scaling.y, this, 'setScaling')\n\t\t\t\t: undefined;\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling(),\n\t\t\tscaling = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tif (current && scaling) {\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._matrix.append(matrix);\n\t},\n\n\tscrollBy: function() {\n\t\tthis.translate(Point.read(arguments).negate());\n\t}\n}), {\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tgetEventPoint: function(event) {\n\t\treturn this.viewToProject(DomEvent.getOffset(event, this._element));\n\t},\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (document && typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\tvar ctor = window ? CanvasView : View;\n\t\t\treturn new ctor(project, element);\n\t\t}\n\t}\n},\nnew function() {\n\tif (!window)\n\t\treturn;\n\tvar prevFocus,\n\t\ttempFocus,\n\t\tdragging = false,\n\t\tmouseDown = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[\n\t\t\t\ttarget.getAttribute('id')];\n\t}\n\n\tfunction updateFocus() {\n\t\tvar view = View._focused;\n\t\tif (!view || !view.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tif ((view = View._views[i]).isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, event, point) {\n\t\tview._handleMouseEvent('mousemove', event, point);\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {},\n\t\tdocEvents = {\n\t\t\tmouseout: function(event) {\n\t\t\t\tvar view = View._focused,\n\t\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\t\tif (view && (!target || target.nodeName === 'HTML')) {\n\t\t\t\t\tvar offset = DomEvent.getOffset(event, view._element),\n\t\t\t\t\t\tx = offset.x,\n\t\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\t\tax = abs(x),\n\t\t\t\t\t\tmax = 1 << 25,\n\t\t\t\t\t\tdiff = ax - max;\n\t\t\t\t\toffset.x = abs(diff) < ax ? diff * (x < 0 ? -1 : 1) : x;\n\t\t\t\t\thandleMouseMove(view, event, view.viewToProject(offset));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tscroll: updateFocus\n\t\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event);\n\t\tif (!dragging) {\n\t\t\tdragging = true;\n\t\t\tview._handleMouseEvent('mousedown', event);\n\t\t}\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!mouseDown) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target) {\n\t\t\t\t\tif (view)\n\t\t\t\t\t\thandleMouseMove(view, event);\n\t\t\t\t\tif (!prevFocus)\n\t\t\t\t\t\tprevFocus = view;\n\t\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t\t}\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tif (prevFocus && !prevFocus.isInserted())\n\t\t\t\t\tprevFocus = null;\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tprevFocus = null;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view)\n\t\t\thandleMouseMove(view, event);\n\t};\n\n\tdocEvents[mousedown] = function() {\n\t\tmouseDown = true;\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (view && dragging)\n\t\t\tview._handleMouseEvent('mouseup', event);\n\t\tmouseDown = dragging = false;\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\tvar called = false,\n\t\tprevented = false,\n\t\tfallbacks = {\n\t\t\tdoubleclick: 'click',\n\t\t\tmousedrag: 'mousemove'\n\t\t},\n\t\twasInView = false,\n\t\toverView,\n\t\tdownPoint,\n\t\tlastPoint,\n\t\tdownItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tclickItem,\n\t\tclickTime,\n\t\tdblClick;\n\n\tfunction emitMouseEvent(obj, target, type, event, point, prevPoint,\n\t\t\tstopItem) {\n\t\tvar stopped = false,\n\t\t\tmouseEvent;\n\n\t\tfunction emit(obj, type) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point,\n\t\t\t\t\t\t\ttarget || obj,\n\t\t\t\t\t\t\tprevPoint ? point.subtract(prevPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent)) {\n\t\t\t\t\tcalled = true;\n\t\t\t\t\tif (mouseEvent.prevented)\n\t\t\t\t\t\tprevented = true;\n\t\t\t\t\tif (mouseEvent.stopped)\n\t\t\t\t\t\treturn stopped = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar fallback = fallbacks[type];\n\t\t\t\tif (fallback)\n\t\t\t\t\treturn emit(obj, fallback);\n\t\t\t}\n\t\t}\n\n\t\twhile (obj && obj !== stopItem) {\n\t\t\tif (emit(obj, type))\n\t\t\t\tbreak;\n\t\t\tobj = obj._parent;\n\t\t}\n\t\treturn stopped;\n\t}\n\n\tfunction emitMouseEvents(view, hitItem, type, event, point, prevPoint) {\n\t\tview._project.removeOn(type);\n\t\tprevented = called = false;\n\t\treturn (dragItem && emitMouseEvent(dragItem, null, type, event,\n\t\t\t\t\tpoint, prevPoint)\n\t\t\t|| hitItem && hitItem !== dragItem\n\t\t\t\t&& !hitItem.isDescendant(dragItem)\n\t\t\t\t&& emitMouseEvent(hitItem, null, type, event, point, prevPoint,\n\t\t\t\t\tdragItem)\n\t\t\t|| emitMouseEvent(view, dragItem || hitItem || view, type, event,\n\t\t\t\t\tpoint, prevPoint));\n\t}\n\n\tvar itemEventsMap = {\n\t\tmousedown: {\n\t\t\tmousedown: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmouseup: {\n\t\t\tmouseup: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmousemove: {\n\t\t\tmousedrag: 1,\n\t\t\tmousemove: 1,\n\t\t\tmouseenter: 1,\n\t\t\tmouseleave: 1\n\t\t}\n\t};\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleMouseEvent: function(type, event, point) {\n\t\t\tvar itemEvents = this._itemEvents,\n\t\t\t\thitItems = itemEvents.native[type],\n\t\t\t\tnativeMove = type === 'mousemove',\n\t\t\t\ttool = this._scope.tool,\n\t\t\t\tview = this;\n\n\t\t\tfunction responds(type) {\n\t\t\t\treturn itemEvents.virtual[type] || view.responds(type)\n\t\t\t\t\t\t|| tool && tool.responds(type);\n\t\t\t}\n\n\t\t\tif (nativeMove && dragging && responds('mousedrag'))\n\t\t\t\ttype = 'mousedrag';\n\t\t\tif (!point)\n\t\t\t\tpoint = this.getEventPoint(event);\n\n\t\t\tvar inView = this.getBounds().contains(point),\n\t\t\t\thit = hitItems && inView && view._project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\thitItem = hit && hit.item || null,\n\t\t\t\thandle = false,\n\t\t\t\tmouse = {};\n\t\t\tmouse[type.substr(5)] = true;\n\n\t\t\tif (hitItems && hitItem !== overItem) {\n\t\t\t\tif (overItem) {\n\t\t\t\t\temitMouseEvent(overItem, null, 'mouseleave', event, point);\n\t\t\t\t}\n\t\t\t\tif (hitItem) {\n\t\t\t\t\temitMouseEvent(hitItem, null, 'mouseenter', event, point);\n\t\t\t\t}\n\t\t\t\toverItem = hitItem;\n\t\t\t}\n\t\t\tif (wasInView ^ inView) {\n\t\t\t\temitMouseEvent(this, null, inView ? 'mouseenter' : 'mouseleave',\n\t\t\t\t\t\tevent, point);\n\t\t\t\toverView = inView ? this : null;\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\tif ((inView || mouse.drag) && !point.equals(lastPoint)) {\n\t\t\t\temitMouseEvents(this, hitItem, nativeMove ? type : 'mousemove',\n\t\t\t\t\t\tevent, point, lastPoint);\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\twasInView = inView;\n\t\t\tif (mouse.down && inView || mouse.up && downPoint) {\n\t\t\t\temitMouseEvents(this, hitItem, type, event, point, downPoint);\n\t\t\t\tif (mouse.down) {\n\t\t\t\t\tdblClick = hitItem === clickItem\n\t\t\t\t\t\t&& (Date.now() - clickTime < 300);\n\t\t\t\t\tdownItem = clickItem = hitItem;\n\t\t\t\t\tif (!prevented && hitItem) {\n\t\t\t\t\t\tvar item = hitItem;\n\t\t\t\t\t\twhile (item && !item.responds('mousedrag'))\n\t\t\t\t\t\t\titem = item._parent;\n\t\t\t\t\t\tif (item)\n\t\t\t\t\t\t\tdragItem = hitItem;\n\t\t\t\t\t}\n\t\t\t\t\tdownPoint = point;\n\t\t\t\t} else if (mouse.up) {\n\t\t\t\t\tif (!prevented && hitItem === downItem) {\n\t\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\t\temitMouseEvents(this, hitItem, dblClick ? 'doubleclick'\n\t\t\t\t\t\t\t\t: 'click', event, point, downPoint);\n\t\t\t\t\t\tdblClick = false;\n\t\t\t\t\t}\n\t\t\t\t\tdownItem = dragItem = null;\n\t\t\t\t}\n\t\t\t\twasInView = false;\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\tlastPoint = point;\n\t\t\tif (handle && tool) {\n\t\t\t\tcalled = tool._handleMouseEvent(type, event, point, mouse)\n\t\t\t\t\t|| called;\n\t\t\t}\n\n\t\t\tif (called && !mouse.move || mouse.down && responds('mouseup'))\n\t\t\t\tevent.preventDefault();\n\t\t},\n\n\t\t_handleKeyEvent: function(type, event, key, character) {\n\t\t\tvar scope = this._scope,\n\t\t\t\ttool = scope.tool,\n\t\t\t\tkeyEvent;\n\n\t\t\tfunction emit(obj) {\n\t\t\t\tif (obj.responds(type)) {\n\t\t\t\t\tpaper = scope;\n\t\t\t\t\tobj.emit(type, keyEvent = keyEvent\n\t\t\t\t\t\t\t|| new KeyEvent(type, event, key, character));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isVisible()) {\n\t\t\t\temit(this);\n\t\t\t\tif (tool && tool.responds(type))\n\t\t\t\t\temit(tool);\n\t\t\t}\n\t\t},\n\n\t\t_countItemEvent: function(type, sign) {\n\t\t\tvar itemEvents = this._itemEvents,\n\t\t\t\tnative = itemEvents.native,\n\t\t\t\tvirtual = itemEvents.virtual;\n\t\t\tfor (var key in itemEventsMap) {\n\t\t\t\tnative[key] = (native[key] || 0)\n\t\t\t\t\t\t+ (itemEventsMap[key][type] || 0) * sign;\n\t\t\t}\n\t\t\tvirtual[type] = (virtual[type] || 0) + sign;\n\t\t},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif (!(canvas instanceof window.HTMLCanvasElement)) {\n\t\t\tvar size = Size.read(arguments, 1);\n\t\t\tif (size.isZero())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t+ Base.slice(arguments, 1));\n\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t}\n\t\tvar ctx = this._context = canvas.getContext('2d');\n\t\tctx.save();\n\t\tthis._pixelRatio = 1;\n\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(ctx,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t\tthis._needsUpdate = true;\n\t},\n\n\tremove: function remove() {\n\t\tthis._context.restore();\n\t\treturn remove.base.call(this);\n\t},\n\n\t_setElementSize: function _setElementSize(width, height) {\n\t\tvar pixelRatio = this._pixelRatio;\n\t\t_setElementSize.base.call(this, width * pixelRatio, height * pixelRatio);\n\t\tif (pixelRatio !== 1) {\n\t\t\tvar element = this._element,\n\t\t\t\tctx = this._context;\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tctx.restore();\n\t\t\tctx.save();\n\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function getPixelSize(size) {\n\t\tvar agent = paper.agent,\n\t\t\tpixels;\n\t\tif (agent && agent.firefox) {\n\t\t\tpixels = getPixelSize.base.call(this, size);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tif (!this._needsUpdate)\n\t\t\treturn false;\n\t\tvar project = this._project,\n\t\t\tctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tif (project)\n\t\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tthis._needsUpdate = false;\n\t\treturn true;\n\t}\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t\tthis.type = event && event.type;\n\t},\n\n\tprevented: false,\n\tstopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.prevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.stopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetTimeStamp: function() {\n\t\treturn this.event.timeStamp;\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(type, event, key, character) {\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tvar keyLookup = {\n\t\t\t'\\t': 'tab',\n\t\t\t' ': 'space',\n\t\t\t'\\b': 'backspace',\n\t\t\t'\\x7f': 'delete',\n\t\t\t'Spacebar': 'space',\n\t\t\t'Del': 'delete',\n\t\t\t'Win': 'meta',\n\t\t\t'Esc': 'escape'\n\t\t},\n\n\t\tcharLookup = {\n\t\t\t'tab': '\\t',\n\t\t\t'space': ' ',\n\t\t\t'enter': '\\r'\n\t\t},\n\n\t\tkeyMap = {},\n\t\tcharMap = {},\n\t\tmetaFixMap,\n\t\tdownKey,\n\n\t\tmodifiers = new Base({\n\t\t\tshift: false,\n\t\t\tcontrol: false,\n\t\t\talt: false,\n\t\t\tmeta: false,\n\t\t\tcapsLock: false,\n\t\t\tspace: false\n\t\t}).inject({\n\t\t\toption: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.alt;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tcommand: {\n\t\t\t\tget: function() {\n\t\t\t\t\tvar agent = paper && paper.agent;\n\t\t\t\t\treturn agent && agent.mac ? this.meta : this.control;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\tfunction getKey(event) {\n\t\tvar key = event.key || event.keyIdentifier;\n\t\tkey = /^U\\+/.test(key)\n\t\t\t\t? String.fromCharCode(parseInt(key.substr(2), 16))\n\t\t\t\t: /^Arrow[A-Z]/.test(key) ? key.substr(5)\n\t\t\t\t: key === 'Unidentified'  || key === undefined\n\t\t\t\t\t? String.fromCharCode(event.keyCode)\n\t\t\t\t\t: key;\n\t\treturn keyLookup[key] ||\n\t\t\t\t(key.length > 1 ? Base.hyphenate(key) : key.toLowerCase());\n\t}\n\n\tfunction handleKey(down, key, character, event) {\n\t\tvar type = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharMap[key] = character;\n\t\t} else {\n\t\t\tdelete charMap[key];\n\t\t}\n\t\tif (key.length > 1 && (name = Base.camelize(key)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar agent = paper && paper.agent;\n\t\t\tif (name === 'meta' && agent && agent.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tmetaFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var k in metaFixMap) {\n\t\t\t\t\t\tif (k in charMap)\n\t\t\t\t\t\t\thandleKey(false, k, metaFixMap[k], event);\n\t\t\t\t\t}\n\t\t\t\t\tmetaFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && metaFixMap) {\n\t\t\tmetaFixMap[key] = character;\n\t\t}\n\t\tif (view) {\n\t\t\tview._handleKeyEvent(down ? 'keydown' : 'keyup', event, key,\n\t\t\t\t\tcharacter);\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar key = getKey(event),\n\t\t\t\tagent = paper && paper.agent;\n\t\t\tif (key.length > 1 || agent && (agent.chrome && (event.altKey\n\t\t\t\t\t\t|| agent.mac && event.metaKey\n\t\t\t\t\t\t|| !agent.mac && event.ctrlKey))) {\n\t\t\t\thandleKey(true, key,\n\t\t\t\t\t\tcharLookup[key] || (key.length > 1 ? '' : key), event);\n\t\t\t} else {\n\t\t\t\tdownKey = key;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downKey) {\n\t\t\t\tvar key = getKey(event),\n\t\t\t\t\tcode = event.charCode,\n\t\t\t\t\tcharacter = code >= 32 ? String.fromCharCode(code)\n\t\t\t\t\t\t: key.length > 1 ? '' : key;\n\t\t\t\tif (key !== downKey) {\n\t\t\t\t\tkey = character.toLowerCase();\n\t\t\t\t}\n\t\t\t\thandleKey(true, key, character, event);\n\t\t\t\tdownKey = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar key = getKey(event);\n\t\t\tif (key in charMap)\n\t\t\t\thandleKey(false, key, charMap[key], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var key in charMap)\n\t\t\t\thandleKey(false, key, charMap[key], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn this.tool[/^mouse(down|up)$/.test(this.type)\n\t\t\t\t? '_downCount' : '_moveCount'];\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onActivate', 'onDeactivate', 'onEditOptions', 'onKeyDown',\n\t\t\t'onKeyUp'],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._moveCount = -1;\n\t\tthis._downCount = -1;\n\t\tthis.set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = this._maxDistance = distance;\n\t},\n\n\t_handleMouseEvent: function(type, event, point, mouse) {\n\t\tpaper = this._scope;\n\t\tif (mouse.drag && !this.responds(type))\n\t\t\ttype = 'mousemove';\n\t\tvar move = mouse.move || mouse.drag,\n\t\t\tresponds = this.responds(type),\n\t\t\tminDistance = this.minDistance,\n\t\t\tmaxDistance = this.maxDistance,\n\t\t\tcalled = false,\n\t\t\ttool = this;\n\t\tfunction update(minDistance, maxDistance) {\n\t\t\tvar pt = point,\n\t\t\t\ttoolPoint = move ? tool._point : (tool._downPoint || pt);\n\t\t\tif (move) {\n\t\t\t\tif (tool._moveCount && pt.equals(toolPoint)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (toolPoint && (minDistance != null || maxDistance != null)) {\n\t\t\t\t\tvar vector = pt.subtract(toolPoint),\n\t\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\t\tif (distance < (minDistance || 0))\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tif (maxDistance) {\n\t\t\t\t\t\tpt = toolPoint.add(vector.normalize(\n\t\t\t\t\t\t\t\tMath.min(distance, maxDistance)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttool._moveCount++;\n\t\t\t}\n\t\t\ttool._point = pt;\n\t\t\ttool._lastPoint = toolPoint || pt;\n\t\t\tif (mouse.down) {\n\t\t\t\ttool._moveCount = -1;\n\t\t\t\ttool._downPoint = pt;\n\t\t\t\ttool._downCount++;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tfunction emit() {\n\t\t\tif (responds) {\n\t\t\t\tcalled = tool.emit(type, new ToolEvent(tool, type, event))\n\t\t\t\t\t\t|| called;\n\t\t\t}\n\t\t}\n\n\t\tif (mouse.down) {\n\t\t\tupdate();\n\t\t\temit();\n\t\t} else if (mouse.up) {\n\t\t\tupdate(null, maxDistance);\n\t\t\temit();\n\t\t} else if (responds) {\n\t\t\twhile (update(minDistance, maxDistance))\n\t\t\t\temit();\n\t\t}\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(options) {\n\t\tvar xhr = new self.XMLHttpRequest();\n\t\txhr.open((options.method || 'get').toUpperCase(), options.url,\n\t\t\t\tBase.pick(options.async, true));\n\t\tif (options.mimeType)\n\t\t\txhr.overrideMimeType(options.mimeType);\n\t\txhr.onload = function() {\n\t\t\tvar status = xhr.status;\n\t\t\tif (status === 0 || status === 200) {\n\t\t\t\tif (options.onLoad) {\n\t\t\t\t\toptions.onLoad.call(xhr, xhr.responseText);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\txhr.onerror();\n\t\t\t}\n\t\t};\n\t\txhr.onerror = function() {\n\t\t\tvar status = xhr.status,\n\t\t\t\tmessage = 'Could not load \"' + options.url + '\" (Status: '\n\t\t\t\t\t\t+ status + ')';\n\t\t\tif (options.onError) {\n\t\t\t\toptions.onError(message, status);\n\t\t\t} else {\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tif (!window)\n\t\t\treturn null;\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t\tclear = false;\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (!ctx) {\n\t\t\tthrow new Error('Canvas ' + canvas +\n\t\t\t\t\t' is unable to provide a 2D context.');\n\t\t}\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\tvar canvas = this.getCanvas(width, height);\n\t\treturn canvas ? canvas.getContext('2d') : null;\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj && obj.canvas ? obj.canvas : obj;\n\t\tif (canvas && canvas.getContext) {\n\t\t\tcanvas.getContext('2d').restore();\n\t\t\tthis.canvases.push(canvas);\n\t\t}\n\t}\n};\n\nvar BlendMode = new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tif (ctx) {\n\t\tBase.each(modes, function(func, mode) {\n\t\t\tvar darken = mode === 'darken',\n\t\t\t\tok = false;\n\t\t\tctx.save();\n\t\t\ttry {\n\t\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tctx.globalCompositeOperation = mode;\n\t\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken\n\t\t\t\t\t\t\t? 170 : 51;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t\tctx.restore();\n\t\t\tnativeModes[mode] = ok;\n\t\t});\n\t\tCanvasProvider.release(ctx);\n\t}\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SvgElement = new function() {\n\tvar svg = 'http://www.w3.org/2000/svg',\n\t\txmlns = 'http://www.w3.org/2000/xmlns',\n\t\txlink = 'http://www.w3.org/1999/xlink',\n\t\tattributeNamespace = {\n\t\t\thref: xlink,\n\t\t\txlink: xmlns,\n\t\t\txmlns: xmlns + '/',\n\t\t\t'xmlns:xlink': xmlns + '/'\n\t\t};\n\n\tfunction create(tag, attributes, formatter) {\n\t\treturn set(document.createElementNS(svg, tag), attributes, formatter);\n\t}\n\n\tfunction get(node, name) {\n\t\tvar namespace = attributeNamespace[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\treturn value === 'null' ? null : value;\n\t}\n\n\tfunction set(node, attributes, formatter) {\n\t\tfor (var name in attributes) {\n\t\t\tvar value = attributes[name],\n\t\t\t\tnamespace = attributeNamespace[name];\n\t\t\tif (typeof value === 'number' && formatter)\n\t\t\t\tvalue = formatter.number(value);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, name, value);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(name, value);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\treturn {\n\t\tsvg: svg,\n\t\txmlns: xmlns,\n\t\txlink: xlink,\n\n\t\tcreate: create,\n\t\tget: get,\n\t\tset: set\n\t};\n};\n\nvar SvgStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tfillRule: ['fill-rule', 'string'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'style']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nnew function() {\n\tvar formatter;\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix._shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling,\n\t\t\t\t\tskew = decomposed.skewing;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (skew.x)\n\t\t\t\t\tparts.push('skewX(' + formatter.number(skew.x) + ')');\n\t\t\t\tif (skew.y)\n\t\t\t\t\tparts.push('skewY(' + formatter.number(skew.y) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = SvgElement.create('g', attrs, formatter);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = SvgElement.create('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tSvgElement.set(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages == false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn SvgElement.create('image', attrs, formatter);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\tlength = segments.length,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (matchShapes && length >= 2 && !item.hasHandles()) {\n\t\t\tif (length > 2) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\t}\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar start = segments[0]._point,\n\t\t\t\t\tend = segments[1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: start.x,\n\t\t\t\t\ty1: start.y,\n\t\t\t\t\tx2: end.x,\n\t\t\t\t\ty2: end.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn SvgElement.create(type, attrs, formatter);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn SvgElement.create(type, attrs, formatter);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn SvgElement.create('path', attrs, formatter);\n\t}\n\n\tfunction exportSymbolItem(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tdefinition = item._definition,\n\t\t\tnode = getDefinition(definition, 'symbol'),\n\t\t\tdefinitionItem = definition._item,\n\t\t\tbounds = definitionItem.getBounds();\n\t\tif (!node) {\n\t\t\tnode = SvgElement.create('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tnode.appendChild(exportSVG(definitionItem, options));\n\t\t\tsetDefinition(definition, node, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + node.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = bounds.width;\n\t\tattrs.height = bounds.height;\n\t\tattrs.overflow = 'visible';\n\t\treturn SvgElement.create('use', attrs, formatter);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin(),\n\t\t\t\tdestination = color.getDestination(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = SvgElement.create((radial ? 'radial' : 'linear')\n\t\t\t\t\t+ 'Gradient', attrs, formatter);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha(),\n\t\t\t\t\toffset = stop._offset;\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: offset == null ? i / (l - 1) : offset\n\t\t\t\t};\n\t\t\t\tif (stopColor)\n\t\t\t\t\tattrs['stop-color'] = stopColor.toCSS(true);\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(\n\t\t\t\t\t\tSvgElement.create('stop', attrs, formatter));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = SvgElement.create('text', getTransform(item._matrix, true),\n\t\t\t\tformatter);\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tSymbolItem: exportSymbolItem,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent(),\n\t\t\tstyle = [];\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SvgStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tif (type === 'style') {\n\t\t\t\t\tstyle.push(entry.attribute + ': ' + value);\n\t\t\t\t} else {\n\t\t\t\t\tattrs[entry.attribute] = value == null ? 'none'\n\t\t\t\t\t\t\t: type === 'color' ? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array' ? value.join(',')\n\t\t\t\t\t\t\t: type === 'lookup' ? entry.toSVG[value]\n\t\t\t\t\t\t\t: value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (style.length)\n\t\t\tattrs.style = style.join(';');\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn SvgElement.set(node, attrs, formatter);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-'\n\t\t\t\t+ (item._id || item.__id || (item.__id = UID.get('svg')))];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar typeId = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + typeId;\n\t\tdefinitions.svgs[type + '-' + (item._id || item.__id)] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = SvgElement.create('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(SvgElement.create('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new self.XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar children = this._children,\n\t\t\t\tview = this.getView(),\n\t\t\t\tbounds = Base.pick(options.bounds, 'view'),\n\t\t\t\tmx = options.matrix || bounds === 'view' && view._matrix,\n\t\t\t\tmatrix = mx && Matrix.read([mx]),\n\t\t\t\trect = bounds === 'view'\n\t\t\t\t\t? new Rectangle([0, 0], view.getViewSize())\n\t\t\t\t\t: bounds === 'content'\n\t\t\t\t\t\t? Item._getBounds(children, matrix, { stroke: true })\n\t\t\t\t\t\t\t.rect\n\t\t\t\t\t\t: Rectangle.read([bounds], 0, { readNull: true }),\n\t\t\t\tattrs = {\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: SvgElement.svg,\n\t\t\t\t\t'xmlns:xlink': SvgElement.xlink,\n\t\t\t\t};\n\t\t\tif (rect) {\n\t\t\t\tattrs.width = rect.width;\n\t\t\t\tattrs.height = rect.height;\n\t\t\t\tif (rect.x || rect.y)\n\t\t\t\t\tattrs.viewBox = formatter.rectangle(rect);\n\t\t\t}\n\t\t\tvar node = SvgElement.create('svg', attrs, formatter),\n\t\t\t\tparent = node;\n\t\t\tif (matrix && !matrix.isIdentity()) {\n\t\t\t\tparent = node.appendChild(SvgElement.create('g',\n\t\t\t\t\t\tgetTransform(matrix), formatter));\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tparent.appendChild(exportSVG(children[i], options, true));\n\t\t\t}\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tvar definitions = {},\n\t\trootSize;\n\n\tfunction getValue(node, name, isString, allowNull, allowPercent) {\n\t\tvar value = SvgElement.get(node, name),\n\t\t\tres = value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString ? '' : 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t\treturn /%\\s*$/.test(value)\n\t\t\t? (res / 100) * (allowPercent ? 1\n\t\t\t\t: rootSize[/x|^width/.test(name) ? 'width' : 'height'])\n\t\t\t: res;\n\t}\n\n\tfunction getPoint(node, x, y, allowNull, allowPercent) {\n\t\tx = getValue(node, x || 'x', false, allowNull, allowPercent);\n\t\ty = getValue(node, y || 'y', false, allowNull, allowPercent);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull, allowPercent) {\n\t\tw = getValue(node, w || 'width', false, allowNull, allowPercent);\n\t\th = getValue(node, h || 'height', false, allowNull, allowPercent);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none' ? null\n\t\t\t\t: type === 'number' ? parseFloat(value)\n\t\t\t\t: type === 'array' ?\n\t\t\t\t\tvalue ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t: type === 'color' ? getDefinition(value) || value\n\t\t\t\t: type === 'lookup' ? lookup[value]\n\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\tisDefs = type === 'defs',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip && !isDefs) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportNode(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& !/^defs$/i.test(childNode.nodeName)\n\t\t\t\t\t&& (child = importNode(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof SymbolDefinition))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || isDefs) {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\treturn PathItem.create(node.getAttribute('d'));\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tradial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t\tif (gradient._radial ^ radial) {\n\t\t\t\tgradient = gradient.clone();\n\t\t\t\tgradient._radial = radial;\n\t\t\t}\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, radial);\n\t\t}\n\t\tvar origin, destination, highlight,\n\t\t\tscaleToBounds = getValue(node, 'gradientUnits', true) !==\n\t\t\t\t'userSpaceOnUse';\n\t\tif (radial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy', false, scaleToBounds);\n\t\t\tdestination = origin.add(\n\t\t\t\t\tgetValue(node, 'r', false, false, scaleToBounds), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true, scaleToBounds);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1', false, scaleToBounds);\n\t\t\tdestination = getPoint(node, 'x2', 'y2', false, scaleToBounds);\n\t\t}\n\t\tvar color = applyAttributes(\n\t\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\tcolor._scaleToBounds = scaleToBounds;\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\treturn importNode(child, options, isRoot);\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node);\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node).add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new SymbolDefinition(\n\t\t\t\t\timportGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node);\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof SymbolDefinition\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(\n\t\t\t\t\tgetPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\treturn new Shape.Rectangle(new Rectangle(\n\t\t\t\t\t\tgetPoint(node),\n\t\t\t\t\t\tgetSize(node)\n\t\t\t\t\t), getSize(node, 'rx', 'ry'));\n\t\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(\n\t\t\t\t\tgetPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node).add(\n\t\t\t\t\tgetPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tif (item.transform) {\n\t\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\t\tmatrix = new Matrix();\n\t\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\t\tvar transform = transforms[i];\n\t\t\t\tif (!transform)\n\t\t\t\t\tbreak;\n\t\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\t\tcommand = parts[0],\n\t\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\t\tswitch (command) {\n\t\t\t\tcase 'matrix':\n\t\t\t\t\tmatrix.append(\n\t\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'translate':\n\t\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'scale':\n\t\t\t\t\tmatrix.scale(v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewX':\n\t\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewY':\n\t\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\titem.transform(matrix);\n\t\t}\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar key = name === 'fill-opacity' ? 'getFillColor' : 'getStrokeColor',\n\t\t\tcolor = item[key] && item[key]();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SvgStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\tif (item[entry.set]) {\n\t\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\t\tif (entry.type === 'color') {\n\t\t\t\t\tvar color = item[entry.get]();\n\t\t\t\t\tif (color) {\n\t\t\t\t\t\tif (color._scaleToBounds) {\n\t\t\t\t\t\t\tvar bounds = item.getBounds();\n\t\t\t\t\t\t\tcolor.transform(new Matrix()\n\t\t\t\t\t\t\t\t.translate(bounds.getPoint())\n\t\t\t\t\t\t\t\t.scale(bounds.getSize()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\tif (item.setVisible)\n\t\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\tif (item.setVisible)\n\t\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tif (item.setOffset) {\n\t\t\t\tvar percent = value.match(/(.*)%$/);\n\t\t\t\titem.setOffset(percent ? percent[1] / 100 : parseFloat(value));\n\t\t\t}\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, null, null, true),\n\t\t\t\tgroup,\n\t\t\t\tmatrix;\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? size.divide(rect.getSize()) : 1,\n\t\t\t\tmatrix = new Matrix().scale(scale)\n\t\t\t\t\t\t.translate(rect.getPoint().negate());\n\t\t\t\tgroup = item;\n\t\t\t} else if (item instanceof SymbolDefinition) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tgroup = item._item;\n\t\t\t}\n\t\t\tif (group)  {\n\t\t\t\tif (getAttribute(node, 'overflow', styles) !== 'visible') {\n\t\t\t\t\tvar clip = new Shape.Rectangle(rect);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t\tif (matrix)\n\t\t\t\t\tgroup.transform(matrix);\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value ? undefined\n\t\t\t\t: value === 'none' ? null\n\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tif (node.style) {\n\t\t\tvar parent = node.parentNode,\n\t\t\t\tstyles = {\n\t\t\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\t\t\tparent: !isRoot && !/^defs$/i.test(parent.tagName)\n\t\t\t\t\t\t\t&& DomElement.getStyles(parent) || {}\n\t\t\t\t};\n\t\t\tBase.each(attributes, function(apply, name) {\n\t\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\t\titem = value !== undefined\n\t\t\t\t\t\t&& apply(item, value, name, node, styles) || item;\n\t\t\t});\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:[\"'#]*)([^\"')]+)/),\n\t\t\tname = match && match[1],\n\t\t\tres = name && definitions[window\n\t\t\t\t\t? name.replace(window.location.href.split('#')[0] + '#', '')\n\t\t\t\t\t: name];\n\t\tif (res && res._scaleToBounds) {\n\t\t\tres = res.clone();\n\t\t\tres._scaleToBounds = true;\n\t\t}\n\t\treturn res;\n\t}\n\n\tfunction importNode(node, options, isRoot) {\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\tisElement = type !== '#document',\n\t\t\tbody = document.body,\n\t\t\tcontainer,\n\t\t\tparent,\n\t\t\tnext;\n\t\tif (isRoot && isElement) {\n\t\t\trootSize = paper.getView().getSize();\n\t\t\trootSize = getSize(node, null, null, true) || rootSize;\n\t\t\tcontainer = SvgElement.create('svg', {\n\t\t\t\tstyle: 'stroke-width: 1px; stroke-miterlimit: 10'\n\t\t\t});\n\t\t\tparent = node.parentNode;\n\t\t\tnext = node.nextSibling;\n\t\t\tcontainer.appendChild(node);\n\t\t\tbody.appendChild(container);\n\t\t}\n\t\tvar settings = paper.settings,\n\t\t\tapplyMatrix = settings.applyMatrix,\n\t\t\tinsertItems = settings.insertItems;\n\t\tsettings.applyMatrix = false;\n\t\tsettings.insertItems = false;\n\t\tvar importer = importers[type],\n\t\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.insertItems = insertItems;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (isElement && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport,\n\t\t\t\tdata = isElement && node.getAttribute('data-paper-data');\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (container) {\n\t\t\tbody.removeChild(container);\n\t\t\tif (parent) {\n\t\t\t\tif (next) {\n\t\t\t\t\tparent.insertBefore(node, next);\n\t\t\t\t} else {\n\t\t\t\t\tparent.appendChild(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importSVG(source, options, owner) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\toptions = typeof options === 'function' ? { onLoad: options }\n\t\t\t\t: options || {};\n\t\tvar scope = paper,\n\t\t\titem = null;\n\n\t\tfunction onLoad(svg) {\n\t\t\ttry {\n\t\t\t\tvar node = typeof svg === 'object' ? svg : new self.DOMParser()\n\t\t\t\t\t\t.parseFromString(svg, 'image/svg+xml');\n\t\t\t\tif (!node.nodeName) {\n\t\t\t\t\tnode = null;\n\t\t\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\t\t\t}\n\t\t\t\tpaper = scope;\n\t\t\t\titem = importNode(node, options, true);\n\t\t\t\tif (!options || options.insert !== false) {\n\t\t\t\t\towner._insertItem(undefined, item);\n\t\t\t\t}\n\t\t\t\tvar onLoad = options.onLoad;\n\t\t\t\tif (onLoad)\n\t\t\t\t\tonLoad(item, svg);\n\t\t\t} catch (e) {\n\t\t\t\tonError(e);\n\t\t\t}\n\t\t}\n\n\t\tfunction onError(message, status) {\n\t\t\tvar onError = options.onError;\n\t\t\tif (onError) {\n\t\t\t\tonError(message, status);\n\t\t\t} else {\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\tvar node = document.getElementById(source);\n\t\t\tif (node) {\n\t\t\t\tonLoad(node);\n\t\t\t} else {\n\t\t\t\tHttp.request({\n\t\t\t\t\turl: source,\n\t\t\t\t\tasync: true,\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = function() {\n\t\t\t\tonLoad(reader.result);\n\t\t\t};\n\t\t\treader.onerror = function() {\n\t\t\t\tonError(reader.error);\n\t\t\t};\n\t\t\treturn reader.readAsText(source);\n\t\t} else {\n\t\t\tonLoad(source);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn importSVG(node, options, this);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, this);\n\t\t}\n\t});\n};\n\nBase.exports.PaperScript = function() {\n\tvar global = this,\n\t\tacorn = global.acorn;\n\tif (!acorn && typeof require !== 'undefined') {\n\t\ttry { acorn = require('acorn'); } catch(e) {}\n\t}\n\tif (!acorn) {\n\t\tvar exports, module;\n\t\tacorn = exports = module = {};\n\n(function(root, mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") return mod(exports);\n  if (typeof define == \"function\" && define.amd) return define([\"exports\"], mod);\n  mod(root.acorn || (root.acorn = {}));\n})(this, function(exports) {\n  \"use strict\";\n\n  exports.version = \"0.5.0\";\n\n  var options, input, inputLen, sourceFile;\n\n  exports.parse = function(inpt, opts) {\n\tinput = String(inpt); inputLen = input.length;\n\tsetOptions(opts);\n\tinitTokenState();\n\treturn parseTopLevel(options.program);\n  };\n\n  var defaultOptions = exports.defaultOptions = {\n\tecmaVersion: 5,\n\tstrictSemicolons: false,\n\tallowTrailingCommas: true,\n\tforbidReserved: false,\n\tallowReturnOutsideFunction: false,\n\tlocations: false,\n\tonComment: null,\n\tranges: false,\n\tprogram: null,\n\tsourceFile: null,\n\tdirectSourceFile: null\n  };\n\n  function setOptions(opts) {\n\toptions = opts || {};\n\tfor (var opt in defaultOptions) if (!Object.prototype.hasOwnProperty.call(options, opt))\n\t  options[opt] = defaultOptions[opt];\n\tsourceFile = options.sourceFile || null;\n  }\n\n  var getLineInfo = exports.getLineInfo = function(input, offset) {\n\tfor (var line = 1, cur = 0;;) {\n\t  lineBreak.lastIndex = cur;\n\t  var match = lineBreak.exec(input);\n\t  if (match && match.index < offset) {\n\t\t++line;\n\t\tcur = match.index + match[0].length;\n\t  } else break;\n\t}\n\treturn {line: line, column: offset - cur};\n  };\n\n  exports.tokenize = function(inpt, opts) {\n\tinput = String(inpt); inputLen = input.length;\n\tsetOptions(opts);\n\tinitTokenState();\n\n\tvar t = {};\n\tfunction getToken(forceRegexp) {\n\t  lastEnd = tokEnd;\n\t  readToken(forceRegexp);\n\t  t.start = tokStart; t.end = tokEnd;\n\t  t.startLoc = tokStartLoc; t.endLoc = tokEndLoc;\n\t  t.type = tokType; t.value = tokVal;\n\t  return t;\n\t}\n\tgetToken.jumpTo = function(pos, reAllowed) {\n\t  tokPos = pos;\n\t  if (options.locations) {\n\t\ttokCurLine = 1;\n\t\ttokLineStart = lineBreak.lastIndex = 0;\n\t\tvar match;\n\t\twhile ((match = lineBreak.exec(input)) && match.index < pos) {\n\t\t  ++tokCurLine;\n\t\t  tokLineStart = match.index + match[0].length;\n\t\t}\n\t  }\n\t  tokRegexpAllowed = reAllowed;\n\t  skipSpace();\n\t};\n\treturn getToken;\n  };\n\n  var tokPos;\n\n  var tokStart, tokEnd;\n\n  var tokStartLoc, tokEndLoc;\n\n  var tokType, tokVal;\n\n  var tokRegexpAllowed;\n\n  var tokCurLine, tokLineStart;\n\n  var lastStart, lastEnd, lastEndLoc;\n\n  var inFunction, labels, strict;\n\n  function raise(pos, message) {\n\tvar loc = getLineInfo(input, pos);\n\tmessage += \" (\" + loc.line + \":\" + loc.column + \")\";\n\tvar err = new SyntaxError(message);\n\terr.pos = pos; err.loc = loc; err.raisedAt = tokPos;\n\tthrow err;\n  }\n\n  var empty = [];\n\n  var _num = {type: \"num\"}, _regexp = {type: \"regexp\"}, _string = {type: \"string\"};\n  var _name = {type: \"name\"}, _eof = {type: \"eof\"};\n\n  var _break = {keyword: \"break\"}, _case = {keyword: \"case\", beforeExpr: true}, _catch = {keyword: \"catch\"};\n  var _continue = {keyword: \"continue\"}, _debugger = {keyword: \"debugger\"}, _default = {keyword: \"default\"};\n  var _do = {keyword: \"do\", isLoop: true}, _else = {keyword: \"else\", beforeExpr: true};\n  var _finally = {keyword: \"finally\"}, _for = {keyword: \"for\", isLoop: true}, _function = {keyword: \"function\"};\n  var _if = {keyword: \"if\"}, _return = {keyword: \"return\", beforeExpr: true}, _switch = {keyword: \"switch\"};\n  var _throw = {keyword: \"throw\", beforeExpr: true}, _try = {keyword: \"try\"}, _var = {keyword: \"var\"};\n  var _while = {keyword: \"while\", isLoop: true}, _with = {keyword: \"with\"}, _new = {keyword: \"new\", beforeExpr: true};\n  var _this = {keyword: \"this\"};\n\n  var _null = {keyword: \"null\", atomValue: null}, _true = {keyword: \"true\", atomValue: true};\n  var _false = {keyword: \"false\", atomValue: false};\n\n  var _in = {keyword: \"in\", binop: 7, beforeExpr: true};\n\n  var keywordTypes = {\"break\": _break, \"case\": _case, \"catch\": _catch,\n\t\t\t\t\t  \"continue\": _continue, \"debugger\": _debugger, \"default\": _default,\n\t\t\t\t\t  \"do\": _do, \"else\": _else, \"finally\": _finally, \"for\": _for,\n\t\t\t\t\t  \"function\": _function, \"if\": _if, \"return\": _return, \"switch\": _switch,\n\t\t\t\t\t  \"throw\": _throw, \"try\": _try, \"var\": _var, \"while\": _while, \"with\": _with,\n\t\t\t\t\t  \"null\": _null, \"true\": _true, \"false\": _false, \"new\": _new, \"in\": _in,\n\t\t\t\t\t  \"instanceof\": {keyword: \"instanceof\", binop: 7, beforeExpr: true}, \"this\": _this,\n\t\t\t\t\t  \"typeof\": {keyword: \"typeof\", prefix: true, beforeExpr: true},\n\t\t\t\t\t  \"void\": {keyword: \"void\", prefix: true, beforeExpr: true},\n\t\t\t\t\t  \"delete\": {keyword: \"delete\", prefix: true, beforeExpr: true}};\n\n  var _bracketL = {type: \"[\", beforeExpr: true}, _bracketR = {type: \"]\"}, _braceL = {type: \"{\", beforeExpr: true};\n  var _braceR = {type: \"}\"}, _parenL = {type: \"(\", beforeExpr: true}, _parenR = {type: \")\"};\n  var _comma = {type: \",\", beforeExpr: true}, _semi = {type: \";\", beforeExpr: true};\n  var _colon = {type: \":\", beforeExpr: true}, _dot = {type: \".\"}, _question = {type: \"?\", beforeExpr: true};\n\n  var _slash = {binop: 10, beforeExpr: true}, _eq = {isAssign: true, beforeExpr: true};\n  var _assign = {isAssign: true, beforeExpr: true};\n  var _incDec = {postfix: true, prefix: true, isUpdate: true}, _prefix = {prefix: true, beforeExpr: true};\n  var _logicalOR = {binop: 1, beforeExpr: true};\n  var _logicalAND = {binop: 2, beforeExpr: true};\n  var _bitwiseOR = {binop: 3, beforeExpr: true};\n  var _bitwiseXOR = {binop: 4, beforeExpr: true};\n  var _bitwiseAND = {binop: 5, beforeExpr: true};\n  var _equality = {binop: 6, beforeExpr: true};\n  var _relational = {binop: 7, beforeExpr: true};\n  var _bitShift = {binop: 8, beforeExpr: true};\n  var _plusMin = {binop: 9, prefix: true, beforeExpr: true};\n  var _multiplyModulo = {binop: 10, beforeExpr: true};\n\n  exports.tokTypes = {bracketL: _bracketL, bracketR: _bracketR, braceL: _braceL, braceR: _braceR,\n\t\t\t\t\t  parenL: _parenL, parenR: _parenR, comma: _comma, semi: _semi, colon: _colon,\n\t\t\t\t\t  dot: _dot, question: _question, slash: _slash, eq: _eq, name: _name, eof: _eof,\n\t\t\t\t\t  num: _num, regexp: _regexp, string: _string};\n  for (var kw in keywordTypes) exports.tokTypes[\"_\" + kw] = keywordTypes[kw];\n\n  function makePredicate(words) {\n\twords = words.split(\" \");\n\tvar f = \"\", cats = [];\n\tout: for (var i = 0; i < words.length; ++i) {\n\t  for (var j = 0; j < cats.length; ++j)\n\t\tif (cats[j][0].length == words[i].length) {\n\t\t  cats[j].push(words[i]);\n\t\t  continue out;\n\t\t}\n\t  cats.push([words[i]]);\n\t}\n\tfunction compareTo(arr) {\n\t  if (arr.length == 1) return f += \"return str === \" + JSON.stringify(arr[0]) + \";\";\n\t  f += \"switch(str){\";\n\t  for (var i = 0; i < arr.length; ++i) f += \"case \" + JSON.stringify(arr[i]) + \":\";\n\t  f += \"return true}return false;\";\n\t}\n\n\tif (cats.length > 3) {\n\t  cats.sort(function(a, b) {return b.length - a.length;});\n\t  f += \"switch(str.length){\";\n\t  for (var i = 0; i < cats.length; ++i) {\n\t\tvar cat = cats[i];\n\t\tf += \"case \" + cat[0].length + \":\";\n\t\tcompareTo(cat);\n\t  }\n\t  f += \"}\";\n\n\t} else {\n\t  compareTo(words);\n\t}\n\treturn new Function(\"str\", f);\n  }\n\n  var isReservedWord3 = makePredicate(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\");\n\n  var isReservedWord5 = makePredicate(\"class enum extends super const export import\");\n\n  var isStrictReservedWord = makePredicate(\"implements interface let package private protected public static yield\");\n\n  var isStrictBadIdWord = makePredicate(\"eval arguments\");\n\n  var isKeyword = makePredicate(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\");\n\n  var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  var newline = /[\\n\\r\\u2028\\u2029]/;\n\n  var lineBreak = /\\r\\n|[\\n\\r\\u2028\\u2029]/g;\n\n  var isIdentifierStart = exports.isIdentifierStart = function(code) {\n\tif (code < 65) return code === 36;\n\tif (code < 91) return true;\n\tif (code < 97) return code === 95;\n\tif (code < 123)return true;\n\treturn code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  };\n\n  var isIdentifierChar = exports.isIdentifierChar = function(code) {\n\tif (code < 48) return code === 36;\n\tif (code < 58) return true;\n\tif (code < 65) return false;\n\tif (code < 91) return true;\n\tif (code < 97) return code === 95;\n\tif (code < 123)return true;\n\treturn code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  };\n\n  function line_loc_t() {\n\tthis.line = tokCurLine;\n\tthis.column = tokPos - tokLineStart;\n  }\n\n  function initTokenState() {\n\ttokCurLine = 1;\n\ttokPos = tokLineStart = 0;\n\ttokRegexpAllowed = true;\n\tskipSpace();\n  }\n\n  function finishToken(type, val) {\n\ttokEnd = tokPos;\n\tif (options.locations) tokEndLoc = new line_loc_t;\n\ttokType = type;\n\tskipSpace();\n\ttokVal = val;\n\ttokRegexpAllowed = type.beforeExpr;\n  }\n\n  function skipBlockComment() {\n\tvar startLoc = options.onComment && options.locations && new line_loc_t;\n\tvar start = tokPos, end = input.indexOf(\"*/\", tokPos += 2);\n\tif (end === -1) raise(tokPos - 2, \"Unterminated comment\");\n\ttokPos = end + 2;\n\tif (options.locations) {\n\t  lineBreak.lastIndex = start;\n\t  var match;\n\t  while ((match = lineBreak.exec(input)) && match.index < tokPos) {\n\t\t++tokCurLine;\n\t\ttokLineStart = match.index + match[0].length;\n\t  }\n\t}\n\tif (options.onComment)\n\t  options.onComment(true, input.slice(start + 2, end), start, tokPos,\n\t\t\t\t\t\tstartLoc, options.locations && new line_loc_t);\n  }\n\n  function skipLineComment() {\n\tvar start = tokPos;\n\tvar startLoc = options.onComment && options.locations && new line_loc_t;\n\tvar ch = input.charCodeAt(tokPos+=2);\n\twhile (tokPos < inputLen && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n\t  ++tokPos;\n\t  ch = input.charCodeAt(tokPos);\n\t}\n\tif (options.onComment)\n\t  options.onComment(false, input.slice(start + 2, tokPos), start, tokPos,\n\t\t\t\t\t\tstartLoc, options.locations && new line_loc_t);\n  }\n\n  function skipSpace() {\n\twhile (tokPos < inputLen) {\n\t  var ch = input.charCodeAt(tokPos);\n\t  if (ch === 32) {\n\t\t++tokPos;\n\t  } else if (ch === 13) {\n\t\t++tokPos;\n\t\tvar next = input.charCodeAt(tokPos);\n\t\tif (next === 10) {\n\t\t  ++tokPos;\n\t\t}\n\t\tif (options.locations) {\n\t\t  ++tokCurLine;\n\t\t  tokLineStart = tokPos;\n\t\t}\n\t  } else if (ch === 10 || ch === 8232 || ch === 8233) {\n\t\t++tokPos;\n\t\tif (options.locations) {\n\t\t  ++tokCurLine;\n\t\t  tokLineStart = tokPos;\n\t\t}\n\t  } else if (ch > 8 && ch < 14) {\n\t\t++tokPos;\n\t  } else if (ch === 47) {\n\t\tvar next = input.charCodeAt(tokPos + 1);\n\t\tif (next === 42) {\n\t\t  skipBlockComment();\n\t\t} else if (next === 47) {\n\t\t  skipLineComment();\n\t\t} else break;\n\t  } else if (ch === 160) {\n\t\t++tokPos;\n\t  } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n\t\t++tokPos;\n\t  } else {\n\t\tbreak;\n\t  }\n\t}\n  }\n\n  function readToken_dot() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next >= 48 && next <= 57) return readNumber(true);\n\t++tokPos;\n\treturn finishToken(_dot);\n  }\n\n  function readToken_slash() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (tokRegexpAllowed) {++tokPos; return readRegexp();}\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_slash, 1);\n  }\n\n  function readToken_mult_modulo() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_multiplyModulo, 1);\n  }\n\n  function readToken_pipe_amp(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === code) return finishOp(code === 124 ? _logicalOR : _logicalAND, 2);\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(code === 124 ? _bitwiseOR : _bitwiseAND, 1);\n  }\n\n  function readToken_caret() {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_bitwiseXOR, 1);\n  }\n\n  function readToken_plus_min(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === code) {\n\t  if (next == 45 && input.charCodeAt(tokPos + 2) == 62 &&\n\t\t  newline.test(input.slice(lastEnd, tokPos))) {\n\t\ttokPos += 3;\n\t\tskipLineComment();\n\t\tskipSpace();\n\t\treturn readToken();\n\t  }\n\t  return finishOp(_incDec, 2);\n\t}\n\tif (next === 61) return finishOp(_assign, 2);\n\treturn finishOp(_plusMin, 1);\n  }\n\n  function readToken_lt_gt(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tvar size = 1;\n\tif (next === code) {\n\t  size = code === 62 && input.charCodeAt(tokPos + 2) === 62 ? 3 : 2;\n\t  if (input.charCodeAt(tokPos + size) === 61) return finishOp(_assign, size + 1);\n\t  return finishOp(_bitShift, size);\n\t}\n\tif (next == 33 && code == 60 && input.charCodeAt(tokPos + 2) == 45 &&\n\t\tinput.charCodeAt(tokPos + 3) == 45) {\n\t  tokPos += 4;\n\t  skipLineComment();\n\t  skipSpace();\n\t  return readToken();\n\t}\n\tif (next === 61)\n\t  size = input.charCodeAt(tokPos + 2) === 61 ? 3 : 2;\n\treturn finishOp(_relational, size);\n  }\n\n  function readToken_eq_excl(code) {\n\tvar next = input.charCodeAt(tokPos + 1);\n\tif (next === 61) return finishOp(_equality, input.charCodeAt(tokPos + 2) === 61 ? 3 : 2);\n\treturn finishOp(code === 61 ? _eq : _prefix, 1);\n  }\n\n  function getTokenFromCode(code) {\n\tswitch(code) {\n\tcase 46:\n\t  return readToken_dot();\n\n\tcase 40: ++tokPos; return finishToken(_parenL);\n\tcase 41: ++tokPos; return finishToken(_parenR);\n\tcase 59: ++tokPos; return finishToken(_semi);\n\tcase 44: ++tokPos; return finishToken(_comma);\n\tcase 91: ++tokPos; return finishToken(_bracketL);\n\tcase 93: ++tokPos; return finishToken(_bracketR);\n\tcase 123: ++tokPos; return finishToken(_braceL);\n\tcase 125: ++tokPos; return finishToken(_braceR);\n\tcase 58: ++tokPos; return finishToken(_colon);\n\tcase 63: ++tokPos; return finishToken(_question);\n\n\tcase 48:\n\t  var next = input.charCodeAt(tokPos + 1);\n\t  if (next === 120 || next === 88) return readHexNumber();\n\tcase 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57:\n\t  return readNumber(false);\n\n\tcase 34: case 39:\n\t  return readString(code);\n\n\tcase 47:\n\t  return readToken_slash(code);\n\n\tcase 37: case 42:\n\t  return readToken_mult_modulo();\n\n\tcase 124: case 38:\n\t  return readToken_pipe_amp(code);\n\n\tcase 94:\n\t  return readToken_caret();\n\n\tcase 43: case 45:\n\t  return readToken_plus_min(code);\n\n\tcase 60: case 62:\n\t  return readToken_lt_gt(code);\n\n\tcase 61: case 33:\n\t  return readToken_eq_excl(code);\n\n\tcase 126:\n\t  return finishOp(_prefix, 1);\n\t}\n\n\treturn false;\n  }\n\n  function readToken(forceRegexp) {\n\tif (!forceRegexp) tokStart = tokPos;\n\telse tokPos = tokStart + 1;\n\tif (options.locations) tokStartLoc = new line_loc_t;\n\tif (forceRegexp) return readRegexp();\n\tif (tokPos >= inputLen) return finishToken(_eof);\n\n\tvar code = input.charCodeAt(tokPos);\n\tif (isIdentifierStart(code) || code === 92 ) return readWord();\n\n\tvar tok = getTokenFromCode(code);\n\n\tif (tok === false) {\n\t  var ch = String.fromCharCode(code);\n\t  if (ch === \"\\\\\" || nonASCIIidentifierStart.test(ch)) return readWord();\n\t  raise(tokPos, \"Unexpected character '\" + ch + \"'\");\n\t}\n\treturn tok;\n  }\n\n  function finishOp(type, size) {\n\tvar str = input.slice(tokPos, tokPos + size);\n\ttokPos += size;\n\tfinishToken(type, str);\n  }\n\n  function readRegexp() {\n\tvar content = \"\", escaped, inClass, start = tokPos;\n\tfor (;;) {\n\t  if (tokPos >= inputLen) raise(start, \"Unterminated regular expression\");\n\t  var ch = input.charAt(tokPos);\n\t  if (newline.test(ch)) raise(start, \"Unterminated regular expression\");\n\t  if (!escaped) {\n\t\tif (ch === \"[\") inClass = true;\n\t\telse if (ch === \"]\" && inClass) inClass = false;\n\t\telse if (ch === \"/\" && !inClass) break;\n\t\tescaped = ch === \"\\\\\";\n\t  } else escaped = false;\n\t  ++tokPos;\n\t}\n\tvar content = input.slice(start, tokPos);\n\t++tokPos;\n\tvar mods = readWord1();\n\tif (mods && !/^[gmsiy]*$/.test(mods)) raise(start, \"Invalid regexp flag\");\n\ttry {\n\t  var value = new RegExp(content, mods);\n\t} catch (e) {\n\t  if (e instanceof SyntaxError) raise(start, e.message);\n\t  raise(e);\n\t}\n\treturn finishToken(_regexp, value);\n  }\n\n  function readInt(radix, len) {\n\tvar start = tokPos, total = 0;\n\tfor (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n\t  var code = input.charCodeAt(tokPos), val;\n\t  if (code >= 97) val = code - 97 + 10;\n\t  else if (code >= 65) val = code - 65 + 10;\n\t  else if (code >= 48 && code <= 57) val = code - 48;\n\t  else val = Infinity;\n\t  if (val >= radix) break;\n\t  ++tokPos;\n\t  total = total * radix + val;\n\t}\n\tif (tokPos === start || len != null && tokPos - start !== len) return null;\n\n\treturn total;\n  }\n\n  function readHexNumber() {\n\ttokPos += 2;\n\tvar val = readInt(16);\n\tif (val == null) raise(tokStart + 2, \"Expected hexadecimal number\");\n\tif (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\n\treturn finishToken(_num, val);\n  }\n\n  function readNumber(startsWithDot) {\n\tvar start = tokPos, isFloat = false, octal = input.charCodeAt(tokPos) === 48;\n\tif (!startsWithDot && readInt(10) === null) raise(start, \"Invalid number\");\n\tif (input.charCodeAt(tokPos) === 46) {\n\t  ++tokPos;\n\t  readInt(10);\n\t  isFloat = true;\n\t}\n\tvar next = input.charCodeAt(tokPos);\n\tif (next === 69 || next === 101) {\n\t  next = input.charCodeAt(++tokPos);\n\t  if (next === 43 || next === 45) ++tokPos;\n\t  if (readInt(10) === null) raise(start, \"Invalid number\");\n\t  isFloat = true;\n\t}\n\tif (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\n\n\tvar str = input.slice(start, tokPos), val;\n\tif (isFloat) val = parseFloat(str);\n\telse if (!octal || str.length === 1) val = parseInt(str, 10);\n\telse if (/[89]/.test(str) || strict) raise(start, \"Invalid number\");\n\telse val = parseInt(str, 8);\n\treturn finishToken(_num, val);\n  }\n\n  function readString(quote) {\n\ttokPos++;\n\tvar out = \"\";\n\tfor (;;) {\n\t  if (tokPos >= inputLen) raise(tokStart, \"Unterminated string constant\");\n\t  var ch = input.charCodeAt(tokPos);\n\t  if (ch === quote) {\n\t\t++tokPos;\n\t\treturn finishToken(_string, out);\n\t  }\n\t  if (ch === 92) {\n\t\tch = input.charCodeAt(++tokPos);\n\t\tvar octal = /^[0-7]+/.exec(input.slice(tokPos, tokPos + 3));\n\t\tif (octal) octal = octal[0];\n\t\twhile (octal && parseInt(octal, 8) > 255) octal = octal.slice(0, -1);\n\t\tif (octal === \"0\") octal = null;\n\t\t++tokPos;\n\t\tif (octal) {\n\t\t  if (strict) raise(tokPos - 2, \"Octal literal in strict mode\");\n\t\t  out += String.fromCharCode(parseInt(octal, 8));\n\t\t  tokPos += octal.length - 1;\n\t\t} else {\n\t\t  switch (ch) {\n\t\t  case 110: out += \"\\n\"; break;\n\t\t  case 114: out += \"\\r\"; break;\n\t\t  case 120: out += String.fromCharCode(readHexChar(2)); break;\n\t\t  case 117: out += String.fromCharCode(readHexChar(4)); break;\n\t\t  case 85: out += String.fromCharCode(readHexChar(8)); break;\n\t\t  case 116: out += \"\\t\"; break;\n\t\t  case 98: out += \"\\b\"; break;\n\t\t  case 118: out += \"\\u000b\"; break;\n\t\t  case 102: out += \"\\f\"; break;\n\t\t  case 48: out += \"\\0\"; break;\n\t\t  case 13: if (input.charCodeAt(tokPos) === 10) ++tokPos;\n\t\t  case 10:\n\t\t\tif (options.locations) { tokLineStart = tokPos; ++tokCurLine; }\n\t\t\tbreak;\n\t\t  default: out += String.fromCharCode(ch); break;\n\t\t  }\n\t\t}\n\t  } else {\n\t\tif (ch === 13 || ch === 10 || ch === 8232 || ch === 8233) raise(tokStart, \"Unterminated string constant\");\n\t\tout += String.fromCharCode(ch);\n\t\t++tokPos;\n\t  }\n\t}\n  }\n\n  function readHexChar(len) {\n\tvar n = readInt(16, len);\n\tif (n === null) raise(tokStart, \"Bad character escape sequence\");\n\treturn n;\n  }\n\n  var containsEsc;\n\n  function readWord1() {\n\tcontainsEsc = false;\n\tvar word, first = true, start = tokPos;\n\tfor (;;) {\n\t  var ch = input.charCodeAt(tokPos);\n\t  if (isIdentifierChar(ch)) {\n\t\tif (containsEsc) word += input.charAt(tokPos);\n\t\t++tokPos;\n\t  } else if (ch === 92) {\n\t\tif (!containsEsc) word = input.slice(start, tokPos);\n\t\tcontainsEsc = true;\n\t\tif (input.charCodeAt(++tokPos) != 117)\n\t\t  raise(tokPos, \"Expecting Unicode escape sequence \\\\uXXXX\");\n\t\t++tokPos;\n\t\tvar esc = readHexChar(4);\n\t\tvar escStr = String.fromCharCode(esc);\n\t\tif (!escStr) raise(tokPos - 1, \"Invalid Unicode escape\");\n\t\tif (!(first ? isIdentifierStart(esc) : isIdentifierChar(esc)))\n\t\t  raise(tokPos - 4, \"Invalid Unicode escape\");\n\t\tword += escStr;\n\t  } else {\n\t\tbreak;\n\t  }\n\t  first = false;\n\t}\n\treturn containsEsc ? word : input.slice(start, tokPos);\n  }\n\n  function readWord() {\n\tvar word = readWord1();\n\tvar type = _name;\n\tif (!containsEsc && isKeyword(word))\n\t  type = keywordTypes[word];\n\treturn finishToken(type, word);\n  }\n\n  function next() {\n\tlastStart = tokStart;\n\tlastEnd = tokEnd;\n\tlastEndLoc = tokEndLoc;\n\treadToken();\n  }\n\n  function setStrict(strct) {\n\tstrict = strct;\n\ttokPos = tokStart;\n\tif (options.locations) {\n\t  while (tokPos < tokLineStart) {\n\t\ttokLineStart = input.lastIndexOf(\"\\n\", tokLineStart - 2) + 1;\n\t\t--tokCurLine;\n\t  }\n\t}\n\tskipSpace();\n\treadToken();\n  }\n\n  function node_t() {\n\tthis.type = null;\n\tthis.start = tokStart;\n\tthis.end = null;\n  }\n\n  function node_loc_t() {\n\tthis.start = tokStartLoc;\n\tthis.end = null;\n\tif (sourceFile !== null) this.source = sourceFile;\n  }\n\n  function startNode() {\n\tvar node = new node_t();\n\tif (options.locations)\n\t  node.loc = new node_loc_t();\n\tif (options.directSourceFile)\n\t  node.sourceFile = options.directSourceFile;\n\tif (options.ranges)\n\t  node.range = [tokStart, 0];\n\treturn node;\n  }\n\n  function startNodeFrom(other) {\n\tvar node = new node_t();\n\tnode.start = other.start;\n\tif (options.locations) {\n\t  node.loc = new node_loc_t();\n\t  node.loc.start = other.loc.start;\n\t}\n\tif (options.ranges)\n\t  node.range = [other.range[0], 0];\n\n\treturn node;\n  }\n\n  function finishNode(node, type) {\n\tnode.type = type;\n\tnode.end = lastEnd;\n\tif (options.locations)\n\t  node.loc.end = lastEndLoc;\n\tif (options.ranges)\n\t  node.range[1] = lastEnd;\n\treturn node;\n  }\n\n  function isUseStrict(stmt) {\n\treturn options.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" &&\n\t  stmt.expression.type === \"Literal\" && stmt.expression.value === \"use strict\";\n  }\n\n  function eat(type) {\n\tif (tokType === type) {\n\t  next();\n\t  return true;\n\t}\n  }\n\n  function canInsertSemicolon() {\n\treturn !options.strictSemicolons &&\n\t  (tokType === _eof || tokType === _braceR || newline.test(input.slice(lastEnd, tokStart)));\n  }\n\n  function semicolon() {\n\tif (!eat(_semi) && !canInsertSemicolon()) unexpected();\n  }\n\n  function expect(type) {\n\tif (tokType === type) next();\n\telse unexpected();\n  }\n\n  function unexpected() {\n\traise(tokStart, \"Unexpected token\");\n  }\n\n  function checkLVal(expr) {\n\tif (expr.type !== \"Identifier\" && expr.type !== \"MemberExpression\")\n\t  raise(expr.start, \"Assigning to rvalue\");\n\tif (strict && expr.type === \"Identifier\" && isStrictBadIdWord(expr.name))\n\t  raise(expr.start, \"Assigning to \" + expr.name + \" in strict mode\");\n  }\n\n  function parseTopLevel(program) {\n\tlastStart = lastEnd = tokPos;\n\tif (options.locations) lastEndLoc = new line_loc_t;\n\tinFunction = strict = null;\n\tlabels = [];\n\treadToken();\n\n\tvar node = program || startNode(), first = true;\n\tif (!program) node.body = [];\n\twhile (tokType !== _eof) {\n\t  var stmt = parseStatement();\n\t  node.body.push(stmt);\n\t  if (first && isUseStrict(stmt)) setStrict(true);\n\t  first = false;\n\t}\n\treturn finishNode(node, \"Program\");\n  }\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  function parseStatement() {\n\tif (tokType === _slash || tokType === _assign && tokVal == \"/=\")\n\t  readToken(true);\n\n\tvar starttype = tokType, node = startNode();\n\n\tswitch (starttype) {\n\tcase _break: case _continue:\n\t  next();\n\t  var isBreak = starttype === _break;\n\t  if (eat(_semi) || canInsertSemicolon()) node.label = null;\n\t  else if (tokType !== _name) unexpected();\n\t  else {\n\t\tnode.label = parseIdent();\n\t\tsemicolon();\n\t  }\n\n\t  for (var i = 0; i < labels.length; ++i) {\n\t\tvar lab = labels[i];\n\t\tif (node.label == null || lab.name === node.label.name) {\n\t\t  if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n\t\t  if (node.label && isBreak) break;\n\t\t}\n\t  }\n\t  if (i === labels.length) raise(node.start, \"Unsyntactic \" + starttype.keyword);\n\t  return finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n\n\tcase _debugger:\n\t  next();\n\t  semicolon();\n\t  return finishNode(node, \"DebuggerStatement\");\n\n\tcase _do:\n\t  next();\n\t  labels.push(loopLabel);\n\t  node.body = parseStatement();\n\t  labels.pop();\n\t  expect(_while);\n\t  node.test = parseParenExpression();\n\t  semicolon();\n\t  return finishNode(node, \"DoWhileStatement\");\n\n\tcase _for:\n\t  next();\n\t  labels.push(loopLabel);\n\t  expect(_parenL);\n\t  if (tokType === _semi) return parseFor(node, null);\n\t  if (tokType === _var) {\n\t\tvar init = startNode();\n\t\tnext();\n\t\tparseVar(init, true);\n\t\tfinishNode(init, \"VariableDeclaration\");\n\t\tif (init.declarations.length === 1 && eat(_in))\n\t\t  return parseForIn(node, init);\n\t\treturn parseFor(node, init);\n\t  }\n\t  var init = parseExpression(false, true);\n\t  if (eat(_in)) {checkLVal(init); return parseForIn(node, init);}\n\t  return parseFor(node, init);\n\n\tcase _function:\n\t  next();\n\t  return parseFunction(node, true);\n\n\tcase _if:\n\t  next();\n\t  node.test = parseParenExpression();\n\t  node.consequent = parseStatement();\n\t  node.alternate = eat(_else) ? parseStatement() : null;\n\t  return finishNode(node, \"IfStatement\");\n\n\tcase _return:\n\t  if (!inFunction && !options.allowReturnOutsideFunction)\n\t\traise(tokStart, \"'return' outside of function\");\n\t  next();\n\n\t  if (eat(_semi) || canInsertSemicolon()) node.argument = null;\n\t  else { node.argument = parseExpression(); semicolon(); }\n\t  return finishNode(node, \"ReturnStatement\");\n\n\tcase _switch:\n\t  next();\n\t  node.discriminant = parseParenExpression();\n\t  node.cases = [];\n\t  expect(_braceL);\n\t  labels.push(switchLabel);\n\n\t  for (var cur, sawDefault; tokType != _braceR;) {\n\t\tif (tokType === _case || tokType === _default) {\n\t\t  var isCase = tokType === _case;\n\t\t  if (cur) finishNode(cur, \"SwitchCase\");\n\t\t  node.cases.push(cur = startNode());\n\t\t  cur.consequent = [];\n\t\t  next();\n\t\t  if (isCase) cur.test = parseExpression();\n\t\t  else {\n\t\t\tif (sawDefault) raise(lastStart, \"Multiple default clauses\"); sawDefault = true;\n\t\t\tcur.test = null;\n\t\t  }\n\t\t  expect(_colon);\n\t\t} else {\n\t\t  if (!cur) unexpected();\n\t\t  cur.consequent.push(parseStatement());\n\t\t}\n\t  }\n\t  if (cur) finishNode(cur, \"SwitchCase\");\n\t  next();\n\t  labels.pop();\n\t  return finishNode(node, \"SwitchStatement\");\n\n\tcase _throw:\n\t  next();\n\t  if (newline.test(input.slice(lastEnd, tokStart)))\n\t\traise(lastEnd, \"Illegal newline after throw\");\n\t  node.argument = parseExpression();\n\t  semicolon();\n\t  return finishNode(node, \"ThrowStatement\");\n\n\tcase _try:\n\t  next();\n\t  node.block = parseBlock();\n\t  node.handler = null;\n\t  if (tokType === _catch) {\n\t\tvar clause = startNode();\n\t\tnext();\n\t\texpect(_parenL);\n\t\tclause.param = parseIdent();\n\t\tif (strict && isStrictBadIdWord(clause.param.name))\n\t\t  raise(clause.param.start, \"Binding \" + clause.param.name + \" in strict mode\");\n\t\texpect(_parenR);\n\t\tclause.guard = null;\n\t\tclause.body = parseBlock();\n\t\tnode.handler = finishNode(clause, \"CatchClause\");\n\t  }\n\t  node.guardedHandlers = empty;\n\t  node.finalizer = eat(_finally) ? parseBlock() : null;\n\t  if (!node.handler && !node.finalizer)\n\t\traise(node.start, \"Missing catch or finally clause\");\n\t  return finishNode(node, \"TryStatement\");\n\n\tcase _var:\n\t  next();\n\t  parseVar(node);\n\t  semicolon();\n\t  return finishNode(node, \"VariableDeclaration\");\n\n\tcase _while:\n\t  next();\n\t  node.test = parseParenExpression();\n\t  labels.push(loopLabel);\n\t  node.body = parseStatement();\n\t  labels.pop();\n\t  return finishNode(node, \"WhileStatement\");\n\n\tcase _with:\n\t  if (strict) raise(tokStart, \"'with' in strict mode\");\n\t  next();\n\t  node.object = parseParenExpression();\n\t  node.body = parseStatement();\n\t  return finishNode(node, \"WithStatement\");\n\n\tcase _braceL:\n\t  return parseBlock();\n\n\tcase _semi:\n\t  next();\n\t  return finishNode(node, \"EmptyStatement\");\n\n\tdefault:\n\t  var maybeName = tokVal, expr = parseExpression();\n\t  if (starttype === _name && expr.type === \"Identifier\" && eat(_colon)) {\n\t\tfor (var i = 0; i < labels.length; ++i)\n\t\t  if (labels[i].name === maybeName) raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n\t\tvar kind = tokType.isLoop ? \"loop\" : tokType === _switch ? \"switch\" : null;\n\t\tlabels.push({name: maybeName, kind: kind});\n\t\tnode.body = parseStatement();\n\t\tlabels.pop();\n\t\tnode.label = expr;\n\t\treturn finishNode(node, \"LabeledStatement\");\n\t  } else {\n\t\tnode.expression = expr;\n\t\tsemicolon();\n\t\treturn finishNode(node, \"ExpressionStatement\");\n\t  }\n\t}\n  }\n\n  function parseParenExpression() {\n\texpect(_parenL);\n\tvar val = parseExpression();\n\texpect(_parenR);\n\treturn val;\n  }\n\n  function parseBlock(allowStrict) {\n\tvar node = startNode(), first = true, strict = false, oldStrict;\n\tnode.body = [];\n\texpect(_braceL);\n\twhile (!eat(_braceR)) {\n\t  var stmt = parseStatement();\n\t  node.body.push(stmt);\n\t  if (first && allowStrict && isUseStrict(stmt)) {\n\t\toldStrict = strict;\n\t\tsetStrict(strict = true);\n\t  }\n\t  first = false;\n\t}\n\tif (strict && !oldStrict) setStrict(false);\n\treturn finishNode(node, \"BlockStatement\");\n  }\n\n  function parseFor(node, init) {\n\tnode.init = init;\n\texpect(_semi);\n\tnode.test = tokType === _semi ? null : parseExpression();\n\texpect(_semi);\n\tnode.update = tokType === _parenR ? null : parseExpression();\n\texpect(_parenR);\n\tnode.body = parseStatement();\n\tlabels.pop();\n\treturn finishNode(node, \"ForStatement\");\n  }\n\n  function parseForIn(node, init) {\n\tnode.left = init;\n\tnode.right = parseExpression();\n\texpect(_parenR);\n\tnode.body = parseStatement();\n\tlabels.pop();\n\treturn finishNode(node, \"ForInStatement\");\n  }\n\n  function parseVar(node, noIn) {\n\tnode.declarations = [];\n\tnode.kind = \"var\";\n\tfor (;;) {\n\t  var decl = startNode();\n\t  decl.id = parseIdent();\n\t  if (strict && isStrictBadIdWord(decl.id.name))\n\t\traise(decl.id.start, \"Binding \" + decl.id.name + \" in strict mode\");\n\t  decl.init = eat(_eq) ? parseExpression(true, noIn) : null;\n\t  node.declarations.push(finishNode(decl, \"VariableDeclarator\"));\n\t  if (!eat(_comma)) break;\n\t}\n\treturn node;\n  }\n\n  function parseExpression(noComma, noIn) {\n\tvar expr = parseMaybeAssign(noIn);\n\tif (!noComma && tokType === _comma) {\n\t  var node = startNodeFrom(expr);\n\t  node.expressions = [expr];\n\t  while (eat(_comma)) node.expressions.push(parseMaybeAssign(noIn));\n\t  return finishNode(node, \"SequenceExpression\");\n\t}\n\treturn expr;\n  }\n\n  function parseMaybeAssign(noIn) {\n\tvar left = parseMaybeConditional(noIn);\n\tif (tokType.isAssign) {\n\t  var node = startNodeFrom(left);\n\t  node.operator = tokVal;\n\t  node.left = left;\n\t  next();\n\t  node.right = parseMaybeAssign(noIn);\n\t  checkLVal(left);\n\t  return finishNode(node, \"AssignmentExpression\");\n\t}\n\treturn left;\n  }\n\n  function parseMaybeConditional(noIn) {\n\tvar expr = parseExprOps(noIn);\n\tif (eat(_question)) {\n\t  var node = startNodeFrom(expr);\n\t  node.test = expr;\n\t  node.consequent = parseExpression(true);\n\t  expect(_colon);\n\t  node.alternate = parseExpression(true, noIn);\n\t  return finishNode(node, \"ConditionalExpression\");\n\t}\n\treturn expr;\n  }\n\n  function parseExprOps(noIn) {\n\treturn parseExprOp(parseMaybeUnary(), -1, noIn);\n  }\n\n  function parseExprOp(left, minPrec, noIn) {\n\tvar prec = tokType.binop;\n\tif (prec != null && (!noIn || tokType !== _in)) {\n\t  if (prec > minPrec) {\n\t\tvar node = startNodeFrom(left);\n\t\tnode.left = left;\n\t\tnode.operator = tokVal;\n\t\tvar op = tokType;\n\t\tnext();\n\t\tnode.right = parseExprOp(parseMaybeUnary(), prec, noIn);\n\t\tvar exprNode = finishNode(node, (op === _logicalOR || op === _logicalAND) ? \"LogicalExpression\" : \"BinaryExpression\");\n\t\treturn parseExprOp(exprNode, minPrec, noIn);\n\t  }\n\t}\n\treturn left;\n  }\n\n  function parseMaybeUnary() {\n\tif (tokType.prefix) {\n\t  var node = startNode(), update = tokType.isUpdate;\n\t  node.operator = tokVal;\n\t  node.prefix = true;\n\t  tokRegexpAllowed = true;\n\t  next();\n\t  node.argument = parseMaybeUnary();\n\t  if (update) checkLVal(node.argument);\n\t  else if (strict && node.operator === \"delete\" &&\n\t\t\t   node.argument.type === \"Identifier\")\n\t\traise(node.start, \"Deleting local variable in strict mode\");\n\t  return finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n\t}\n\tvar expr = parseExprSubscripts();\n\twhile (tokType.postfix && !canInsertSemicolon()) {\n\t  var node = startNodeFrom(expr);\n\t  node.operator = tokVal;\n\t  node.prefix = false;\n\t  node.argument = expr;\n\t  checkLVal(expr);\n\t  next();\n\t  expr = finishNode(node, \"UpdateExpression\");\n\t}\n\treturn expr;\n  }\n\n  function parseExprSubscripts() {\n\treturn parseSubscripts(parseExprAtom());\n  }\n\n  function parseSubscripts(base, noCalls) {\n\tif (eat(_dot)) {\n\t  var node = startNodeFrom(base);\n\t  node.object = base;\n\t  node.property = parseIdent(true);\n\t  node.computed = false;\n\t  return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\n\t} else if (eat(_bracketL)) {\n\t  var node = startNodeFrom(base);\n\t  node.object = base;\n\t  node.property = parseExpression();\n\t  node.computed = true;\n\t  expect(_bracketR);\n\t  return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\n\t} else if (!noCalls && eat(_parenL)) {\n\t  var node = startNodeFrom(base);\n\t  node.callee = base;\n\t  node.arguments = parseExprList(_parenR, false);\n\t  return parseSubscripts(finishNode(node, \"CallExpression\"), noCalls);\n\t} else return base;\n  }\n\n  function parseExprAtom() {\n\tswitch (tokType) {\n\tcase _this:\n\t  var node = startNode();\n\t  next();\n\t  return finishNode(node, \"ThisExpression\");\n\tcase _name:\n\t  return parseIdent();\n\tcase _num: case _string: case _regexp:\n\t  var node = startNode();\n\t  node.value = tokVal;\n\t  node.raw = input.slice(tokStart, tokEnd);\n\t  next();\n\t  return finishNode(node, \"Literal\");\n\n\tcase _null: case _true: case _false:\n\t  var node = startNode();\n\t  node.value = tokType.atomValue;\n\t  node.raw = tokType.keyword;\n\t  next();\n\t  return finishNode(node, \"Literal\");\n\n\tcase _parenL:\n\t  var tokStartLoc1 = tokStartLoc, tokStart1 = tokStart;\n\t  next();\n\t  var val = parseExpression();\n\t  val.start = tokStart1;\n\t  val.end = tokEnd;\n\t  if (options.locations) {\n\t\tval.loc.start = tokStartLoc1;\n\t\tval.loc.end = tokEndLoc;\n\t  }\n\t  if (options.ranges)\n\t\tval.range = [tokStart1, tokEnd];\n\t  expect(_parenR);\n\t  return val;\n\n\tcase _bracketL:\n\t  var node = startNode();\n\t  next();\n\t  node.elements = parseExprList(_bracketR, true, true);\n\t  return finishNode(node, \"ArrayExpression\");\n\n\tcase _braceL:\n\t  return parseObj();\n\n\tcase _function:\n\t  var node = startNode();\n\t  next();\n\t  return parseFunction(node, false);\n\n\tcase _new:\n\t  return parseNew();\n\n\tdefault:\n\t  unexpected();\n\t}\n  }\n\n  function parseNew() {\n\tvar node = startNode();\n\tnext();\n\tnode.callee = parseSubscripts(parseExprAtom(), true);\n\tif (eat(_parenL)) node.arguments = parseExprList(_parenR, false);\n\telse node.arguments = empty;\n\treturn finishNode(node, \"NewExpression\");\n  }\n\n  function parseObj() {\n\tvar node = startNode(), first = true, sawGetSet = false;\n\tnode.properties = [];\n\tnext();\n\twhile (!eat(_braceR)) {\n\t  if (!first) {\n\t\texpect(_comma);\n\t\tif (options.allowTrailingCommas && eat(_braceR)) break;\n\t  } else first = false;\n\n\t  var prop = {key: parsePropertyName()}, isGetSet = false, kind;\n\t  if (eat(_colon)) {\n\t\tprop.value = parseExpression(true);\n\t\tkind = prop.kind = \"init\";\n\t  } else if (options.ecmaVersion >= 5 && prop.key.type === \"Identifier\" &&\n\t\t\t\t (prop.key.name === \"get\" || prop.key.name === \"set\")) {\n\t\tisGetSet = sawGetSet = true;\n\t\tkind = prop.kind = prop.key.name;\n\t\tprop.key = parsePropertyName();\n\t\tif (tokType !== _parenL) unexpected();\n\t\tprop.value = parseFunction(startNode(), false);\n\t  } else unexpected();\n\n\t  if (prop.key.type === \"Identifier\" && (strict || sawGetSet)) {\n\t\tfor (var i = 0; i < node.properties.length; ++i) {\n\t\t  var other = node.properties[i];\n\t\t  if (other.key.name === prop.key.name) {\n\t\t\tvar conflict = kind == other.kind || isGetSet && other.kind === \"init\" ||\n\t\t\t  kind === \"init\" && (other.kind === \"get\" || other.kind === \"set\");\n\t\t\tif (conflict && !strict && kind === \"init\" && other.kind === \"init\") conflict = false;\n\t\t\tif (conflict) raise(prop.key.start, \"Redefinition of property\");\n\t\t  }\n\t\t}\n\t  }\n\t  node.properties.push(prop);\n\t}\n\treturn finishNode(node, \"ObjectExpression\");\n  }\n\n  function parsePropertyName() {\n\tif (tokType === _num || tokType === _string) return parseExprAtom();\n\treturn parseIdent(true);\n  }\n\n  function parseFunction(node, isStatement) {\n\tif (tokType === _name) node.id = parseIdent();\n\telse if (isStatement) unexpected();\n\telse node.id = null;\n\tnode.params = [];\n\tvar first = true;\n\texpect(_parenL);\n\twhile (!eat(_parenR)) {\n\t  if (!first) expect(_comma); else first = false;\n\t  node.params.push(parseIdent());\n\t}\n\n\tvar oldInFunc = inFunction, oldLabels = labels;\n\tinFunction = true; labels = [];\n\tnode.body = parseBlock(true);\n\tinFunction = oldInFunc; labels = oldLabels;\n\n\tif (strict || node.body.body.length && isUseStrict(node.body.body[0])) {\n\t  for (var i = node.id ? -1 : 0; i < node.params.length; ++i) {\n\t\tvar id = i < 0 ? node.id : node.params[i];\n\t\tif (isStrictReservedWord(id.name) || isStrictBadIdWord(id.name))\n\t\t  raise(id.start, \"Defining '\" + id.name + \"' in strict mode\");\n\t\tif (i >= 0) for (var j = 0; j < i; ++j) if (id.name === node.params[j].name)\n\t\t  raise(id.start, \"Argument name clash in strict mode\");\n\t  }\n\t}\n\n\treturn finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n  }\n\n  function parseExprList(close, allowTrailingComma, allowEmpty) {\n\tvar elts = [], first = true;\n\twhile (!eat(close)) {\n\t  if (!first) {\n\t\texpect(_comma);\n\t\tif (allowTrailingComma && options.allowTrailingCommas && eat(close)) break;\n\t  } else first = false;\n\n\t  if (allowEmpty && tokType === _comma) elts.push(null);\n\t  else elts.push(parseExpression(true));\n\t}\n\treturn elts;\n  }\n\n  function parseIdent(liberal) {\n\tvar node = startNode();\n\tif (liberal && options.forbidReserved == \"everywhere\") liberal = false;\n\tif (tokType === _name) {\n\t  if (!liberal &&\n\t\t  (options.forbidReserved &&\n\t\t   (options.ecmaVersion === 3 ? isReservedWord3 : isReservedWord5)(tokVal) ||\n\t\t   strict && isStrictReservedWord(tokVal)) &&\n\t\t  input.slice(tokStart, tokEnd).indexOf(\"\\\\\") == -1)\n\t\traise(tokStart, \"The keyword '\" + tokVal + \"' is reserved\");\n\t  node.name = tokVal;\n\t} else if (liberal && tokType.keyword) {\n\t  node.name = tokType.keyword;\n\t} else {\n\t  unexpected();\n\t}\n\ttokRegexpAllowed = false;\n\tnext();\n\treturn finishNode(node, \"Identifier\");\n  }\n\n});\n\n\t\tif (!acorn.version)\n\t\t\tacorn = null;\n\t}\n\n\tfunction parse(code, options) {\n\t\treturn (global.acorn || acorn).parse(code, options);\n\t}\n\n\tvar binaryOperators = {\n\t\t'+': '__add',\n\t\t'-': '__subtract',\n\t\t'*': '__multiply',\n\t\t'/': '__divide',\n\t\t'%': '__modulo',\n\t\t'==': '__equals',\n\t\t'!=': '__equals'\n\t};\n\n\tvar unaryOperators = {\n\t\t'-': '__negate',\n\t\t'+': '__self'\n\t};\n\n\tvar fields = Base.each(\n\t\t['add', 'subtract', 'multiply', 'divide', 'modulo', 'equals', 'negate'],\n\t\tfunction(name) {\n\t\t\tthis['__' + name] = '#' + name;\n\t\t},\n\t\t{\n\t\t\t__self: function() {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t);\n\tPoint.inject(fields);\n\tSize.inject(fields);\n\tColor.inject(fields);\n\n\tfunction __$__(left, operator, right) {\n\t\tvar handler = binaryOperators[operator];\n\t\tif (left && left[handler]) {\n\t\t\tvar res = left[handler](right);\n\t\t\treturn operator === '!=' ? !res : res;\n\t\t}\n\t\tswitch (operator) {\n\t\tcase '+': return left + right;\n\t\tcase '-': return left - right;\n\t\tcase '*': return left * right;\n\t\tcase '/': return left / right;\n\t\tcase '%': return left % right;\n\t\tcase '==': return left == right;\n\t\tcase '!=': return left != right;\n\t\t}\n\t}\n\n\tfunction $__(operator, value) {\n\t\tvar handler = unaryOperators[operator];\n\t\tif (value && value[handler])\n\t\t\treturn value[handler]();\n\t\tswitch (operator) {\n\t\tcase '+': return +value;\n\t\tcase '-': return -value;\n\t\t}\n\t}\n\n\tfunction compile(code, options) {\n\t\tif (!code)\n\t\t\treturn '';\n\t\toptions = options || {};\n\n\t\tvar insertions = [];\n\n\t\tfunction getOffset(offset) {\n\t\t\tfor (var i = 0, l = insertions.length; i < l; i++) {\n\t\t\t\tvar insertion = insertions[i];\n\t\t\t\tif (insertion[0] >= offset)\n\t\t\t\t\tbreak;\n\t\t\t\toffset += insertion[1];\n\t\t\t}\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction getCode(node) {\n\t\t\treturn code.substring(getOffset(node.range[0]),\n\t\t\t\t\tgetOffset(node.range[1]));\n\t\t}\n\n\t\tfunction getBetween(left, right) {\n\t\t\treturn code.substring(getOffset(left.range[1]),\n\t\t\t\t\tgetOffset(right.range[0]));\n\t\t}\n\n\t\tfunction replaceCode(node, str) {\n\t\t\tvar start = getOffset(node.range[0]),\n\t\t\t\tend = getOffset(node.range[1]),\n\t\t\t\tinsert = 0;\n\t\t\tfor (var i = insertions.length - 1; i >= 0; i--) {\n\t\t\t\tif (start > insertions[i][0]) {\n\t\t\t\t\tinsert = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinsertions.splice(insert, 0, [start, str.length - end + start]);\n\t\t\tcode = code.substring(0, start) + str + code.substring(end);\n\t\t}\n\n\t\tfunction walkAST(node, parent) {\n\t\t\tif (!node)\n\t\t\t\treturn;\n\t\t\tfor (var key in node) {\n\t\t\t\tif (key === 'range' || key === 'loc')\n\t\t\t\t\tcontinue;\n\t\t\t\tvar value = node[key];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (var i = 0, l = value.length; i < l; i++)\n\t\t\t\t\t\twalkAST(value[i], node);\n\t\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\t\twalkAST(value, node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (node.type) {\n\t\t\tcase 'UnaryExpression':\n\t\t\t\tif (node.operator in unaryOperators\n\t\t\t\t\t\t&& node.argument.type !== 'Literal') {\n\t\t\t\t\tvar arg = getCode(node.argument);\n\t\t\t\t\treplaceCode(node, '$__(\"' + node.operator + '\", '\n\t\t\t\t\t\t\t+ arg + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'BinaryExpression':\n\t\t\t\tif (node.operator in binaryOperators\n\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\tbetween = getBetween(node.left, node.right),\n\t\t\t\t\t\toperator = node.operator;\n\t\t\t\t\treplaceCode(node, '__$__(' + left + ','\n\t\t\t\t\t\t\t+ between.replace(new RegExp('\\\\' + operator),\n\t\t\t\t\t\t\t\t'\"' + operator + '\"')\n\t\t\t\t\t\t\t+ ', ' + right + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'UpdateExpression':\n\t\t\tcase 'AssignmentExpression':\n\t\t\t\tvar parentType = parent && parent.type;\n\t\t\t\tif (!(\n\t\t\t\t\t\tparentType === 'ForStatement'\n\t\t\t\t\t\t|| parentType === 'BinaryExpression'\n\t\t\t\t\t\t\t&& /^[=!<>]/.test(parent.operator)\n\t\t\t\t\t\t|| parentType === 'MemberExpression' && parent.computed\n\t\t\t\t)) {\n\t\t\t\t\tif (node.type === 'UpdateExpression') {\n\t\t\t\t\t\tvar arg = getCode(node.argument),\n\t\t\t\t\t\t\texp = '__$__(' + arg + ', \"' + node.operator[0]\n\t\t\t\t\t\t\t\t\t+ '\", 1)',\n\t\t\t\t\t\t\tstr = arg + ' = ' + exp;\n\t\t\t\t\t\tif (!node.prefix\n\t\t\t\t\t\t\t\t&& (parentType === 'AssignmentExpression'\n\t\t\t\t\t\t\t\t\t|| parentType === 'VariableDeclarator')) {\n\t\t\t\t\t\t\tif (getCode(parent.left || parent.id) === arg)\n\t\t\t\t\t\t\t\tstr = exp;\n\t\t\t\t\t\t\tstr = arg + '; ' + str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplaceCode(node, str);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (/^.=$/.test(node.operator)\n\t\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\t\t\texp = left + ' = __$__(' + left + ', \"'\n\t\t\t\t\t\t\t\t\t+ node.operator[0] + '\", ' + right + ')';\n\t\t\t\t\t\t\treplaceCode(node, /^\\(.*\\)$/.test(getCode(node))\n\t\t\t\t\t\t\t\t\t? '(' + exp + ')' : exp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction encodeVLQ(value) {\n\t\t\tvar res = '',\n\t\t\t\tbase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\t\tvalue = (Math.abs(value) << 1) + (value < 0 ? 1 : 0);\n\t\t\twhile (value || !res) {\n\t\t\t\tvar next = value & (32 - 1);\n\t\t\t\tvalue >>= 5;\n\t\t\t\tif (value)\n\t\t\t\t\tnext |= 32;\n\t\t\t\tres += base64[next];\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\tvar url = options.url || '',\n\t\t\tagent = paper.agent,\n\t\t\tversion = agent.versionNumber,\n\t\t\toffsetCode = false,\n\t\t\tsourceMaps = options.sourceMaps,\n\t\t\tsource = options.source || code,\n\t\t\tlineBreaks = /\\r\\n|\\n|\\r/mg,\n\t\t\toffset = options.offset || 0,\n\t\t\tmap;\n\t\tif (sourceMaps && (agent.chrome && version >= 30\n\t\t\t\t|| agent.webkit && version >= 537.76\n\t\t\t\t|| agent.firefox && version >= 23\n\t\t\t\t|| agent.node)) {\n\t\t\tif (agent.node) {\n\t\t\t\toffset -= 2;\n\t\t\t} else if (window && url && !window.location.href.indexOf(url)) {\n\t\t\t\tvar html = document.getElementsByTagName('html')[0].innerHTML;\n\t\t\t\toffset = html.substr(0, html.indexOf(code) + 1).match(\n\t\t\t\t\t\tlineBreaks).length + 1;\n\t\t\t}\n\t\t\toffsetCode = offset > 0 && !(\n\t\t\t\t\tagent.chrome && version >= 36 ||\n\t\t\t\t\tagent.safari && version >= 600 ||\n\t\t\t\t\tagent.firefox && version >= 40 ||\n\t\t\t\t\tagent.node);\n\t\t\tvar mappings = ['AA' + encodeVLQ(offsetCode ? 0 : offset) + 'A'];\n\t\t\tmappings.length = (code.match(lineBreaks) || []).length + 1\n\t\t\t\t\t+ (offsetCode ? offset : 0);\n\t\t\tmap = {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: url,\n\t\t\t\tnames:[],\n\t\t\t\tmappings: mappings.join(';AACA'),\n\t\t\t\tsourceRoot: '',\n\t\t\t\tsources: [url],\n\t\t\t\tsourcesContent: [source]\n\t\t\t};\n\t\t}\n\t\twalkAST(parse(code, { ranges: true, preserveParens: true }));\n\t\tif (map) {\n\t\t\tif (offsetCode) {\n\t\t\t\tcode = new Array(offset + 1).join('\\n') + code;\n\t\t\t}\n\t\t\tif (/^(inline|both)$/.test(sourceMaps)) {\n\t\t\t\tcode += \"\\n//# sourceMappingURL=data:application/json;base64,\"\n\t\t\t\t\t\t+ self.btoa(unescape(encodeURIComponent(\n\t\t\t\t\t\t\tJSON.stringify(map))));\n\t\t\t}\n\t\t\tcode += \"\\n//# sourceURL=\" + (url || 'paperscript');\n\t\t}\n\t\treturn {\n\t\t\turl: url,\n\t\t\tsource: source,\n\t\t\tcode: code,\n\t\t\tmap: map\n\t\t};\n\t}\n\n\tfunction execute(code, scope, options) {\n\t\tpaper = scope;\n\t\tvar view = scope.getView(),\n\t\t\ttool = /\\btool\\.\\w+|\\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\\b/\n\t\t\t\t\t.test(code) && !/\\bnew\\s+Tool\\b/.test(code)\n\t\t\t\t\t\t? new Tool() : null,\n\t\t\ttoolHandlers = tool ? tool._events : [],\n\t\t\thandlers = ['onFrame', 'onResize'].concat(toolHandlers),\n\t\t\tparams = [],\n\t\t\targs = [],\n\t\t\tfunc,\n\t\t\tcompiled = typeof code === 'object' ? code : compile(code, options);\n\t\tcode = compiled.code;\n\t\tfunction expose(scope, hidden) {\n\t\t\tfor (var key in scope) {\n\t\t\t\tif ((hidden || !/^_/.test(key)) && new RegExp('([\\\\b\\\\s\\\\W]|^)'\n\t\t\t\t\t\t+ key.replace(/\\$/g, '\\\\$') + '\\\\b').test(code)) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t\targs.push(scope[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\texpose({ __$__: __$__, $__: $__, paper: scope, view: view, tool: tool },\n\t\t\t\ttrue);\n\t\texpose(scope);\n\t\thandlers = Base.each(handlers, function(key) {\n\t\t\tif (new RegExp('\\\\s+' + key + '\\\\b').test(code)) {\n\t\t\t\tparams.push(key);\n\t\t\t\tthis.push(key + ': ' + key);\n\t\t\t}\n\t\t}, []).join(', ');\n\t\tif (handlers)\n\t\t\tcode += '\\nreturn { ' + handlers + ' };';\n\t\tvar agent = paper.agent;\n\t\tif (document && (agent.chrome\n\t\t\t\t|| agent.firefox && agent.versionNumber < 40)) {\n\t\t\tvar script = document.createElement('script'),\n\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\t\t\tif (agent.firefox)\n\t\t\t\tcode = '\\n' + code;\n\t\t\tscript.appendChild(document.createTextNode(\n\t\t\t\t'paper._execute = function(' + params + ') {' + code + '\\n}'\n\t\t\t));\n\t\t\thead.appendChild(script);\n\t\t\tfunc = paper._execute;\n\t\t\tdelete paper._execute;\n\t\t\thead.removeChild(script);\n\t\t} else {\n\t\t\tfunc = Function(params, code);\n\t\t}\n\t\tvar res = func.apply(scope, args) || {};\n\t\tBase.each(toolHandlers, function(key) {\n\t\t\tvar value = res[key];\n\t\t\tif (value)\n\t\t\t\ttool[key] = value;\n\t\t});\n\t\tif (view) {\n\t\t\tif (res.onResize)\n\t\t\t\tview.setOnResize(res.onResize);\n\t\t\tview.emit('resize', {\n\t\t\t\tsize: view.size,\n\t\t\t\tdelta: new Point()\n\t\t\t});\n\t\t\tif (res.onFrame)\n\t\t\t\tview.setOnFrame(res.onFrame);\n\t\t\tview.requestUpdate();\n\t\t}\n\t\treturn compiled;\n\t}\n\n\tfunction loadScript(script) {\n\t\tif (/^text\\/(?:x-|)paperscript$/.test(script.type)\n\t\t\t\t&& PaperScope.getAttribute(script, 'ignore') !== 'true') {\n\t\t\tvar canvasId = PaperScope.getAttribute(script, 'canvas'),\n\t\t\t\tcanvas = document.getElementById(canvasId),\n\t\t\t\tsrc = script.src || script.getAttribute('data-src'),\n\t\t\t\tasync = PaperScope.hasAttribute(script, 'async'),\n\t\t\t\tscopeAttribute = 'data-paper-scope';\n\t\t\tif (!canvas)\n\t\t\t\tthrow new Error('Unable to find canvas with id \"'\n\t\t\t\t\t\t+ canvasId + '\"');\n\t\t\tvar scope = PaperScope.get(canvas.getAttribute(scopeAttribute))\n\t\t\t\t\t\t|| new PaperScope().setup(canvas);\n\t\t\tcanvas.setAttribute(scopeAttribute, scope._id);\n\t\t\tif (src) {\n\t\t\t\tHttp.request({\n\t\t\t\t\turl: src,\n\t\t\t\t\tasync: async,\n\t\t\t\t\tmimeType: 'text/plain',\n\t\t\t\t\tonLoad: function(code) {\n\t\t\t\t\t\texecute(code, scope, src);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\texecute(script.innerHTML, scope, script.baseURI);\n\t\t\t}\n\t\t\tscript.setAttribute('data-paper-ignore', 'true');\n\t\t\treturn scope;\n\t\t}\n\t}\n\n\tfunction loadAll() {\n\t\tBase.each(document && document.getElementsByTagName('script'),\n\t\t\t\tloadScript);\n\t}\n\n\tfunction load(script) {\n\t\treturn script ? loadScript(script) : loadAll();\n\t}\n\n\tif (window) {\n\t\tif (document.readyState === 'complete') {\n\t\t\tsetTimeout(loadAll);\n\t\t} else {\n\t\t\tDomEvent.add(window, { load: loadAll });\n\t\t}\n\t}\n\n\treturn {\n\t\tcompile: compile,\n\t\texecute: execute,\n\t\tload: load,\n\t\tparse: parse\n\t};\n\n}.call(this);\n\npaper = new (PaperScope.inject(Base.exports, {\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key,\n\tDomEvent: DomEvent,\n\tDomElement: DomElement,\n\tdocument: document,\n\twindow: window,\n\tSymbol: SymbolDefinition,\n\tPlacedSymbol: SymbolItem\n}))();\n\nif (paper.agent.node) {\n\trequire('./node/extend.js')(paper);\n}\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n}.call(this, typeof self === 'object' ? self : null);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/paper/dist/paper-full.js\n// module id = M2cA\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = mypn\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/addStylesClient.js\n// module id = rjj0\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/listToStyles.js\n// module id = tTVk\n// module chunks = 0"],"sourceRoot":""}